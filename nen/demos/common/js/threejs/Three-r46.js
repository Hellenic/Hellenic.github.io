// Three.js r46 - http://github.com/mrdoob/three.js
var THREE=THREE||{};if(!self.Int32Array)self.Int32Array=Array,self.Float32Array=Array;THREE.Clock=function(a){this.autoStart=a!==void 0?a:!0;this.elapsedTime=this.oldTime=this.startTime=0;this.running=!1};THREE.Clock.prototype.start=function(){this.oldTime=this.startTime=Date.now();this.running=!0};THREE.Clock.prototype.stop=function(){this.getElapsedTime();this.running=!1};THREE.Clock.prototype.getElapsedTime=function(){this.elapsedTime+=this.getDelta();return this.elapsedTime};
THREE.Clock.prototype.getDelta=function(){var a=0;this.autoStart&&!this.running&&this.start();if(this.running){var b=Date.now(),a=0.0010*(b-this.oldTime);this.oldTime=b;this.elapsedTime+=a}return a};THREE.Color=function(a){a!==void 0&&this.setHex(a);return this};
THREE.Color.prototype={constructor:THREE.Color,r:1,g:1,b:1,copy:function(a){this.r=a.r;this.g=a.g;this.b=a.b;return this},copyGammaToLinear:function(a){this.r=a.r*a.r;this.g=a.g*a.g;this.b=a.b*a.b;return this},copyLinearToGamma:function(a){this.r=Math.sqrt(a.r);this.g=Math.sqrt(a.g);this.b=Math.sqrt(a.b);return this},setRGB:function(a,b,c){this.r=a;this.g=b;this.b=c;return this},setHSV:function(a,b,c){var d,e,g;if(c===0)this.r=this.g=this.b=0;else switch(d=Math.floor(a*6),e=a*6-d,a=c*(1-b),g=c*(1-
b*e),b=c*(1-b*(1-e)),d){case 1:this.r=g;this.g=c;this.b=a;break;case 2:this.r=a;this.g=c;this.b=b;break;case 3:this.r=a;this.g=g;this.b=c;break;case 4:this.r=b;this.g=a;this.b=c;break;case 5:this.r=c;this.g=a;this.b=g;break;case 6:case 0:this.r=c,this.g=b,this.b=a}return this},setHex:function(a){a=Math.floor(a);this.r=(a>>16&255)/255;this.g=(a>>8&255)/255;this.b=(a&255)/255;return this},getHex:function(){return~~(this.r*255)<<16^~~(this.g*255)<<8^~~(this.b*255)},getContextStyle:function(){return"rgb("+
Math.floor(this.r*255)+","+Math.floor(this.g*255)+","+Math.floor(this.b*255)+")"},clone:function(){return(new THREE.Color).setRGB(this.r,this.g,this.b)}};THREE.Vector2=function(a,b){this.x=a||0;this.y=b||0};
THREE.Vector2.prototype={constructor:THREE.Vector2,set:function(a,b){this.x=a;this.y=b;return this},copy:function(a){this.x=a.x;this.y=a.y;return this},clone:function(){return new THREE.Vector2(this.x,this.y)},add:function(a,b){this.x=a.x+b.x;this.y=a.y+b.y;return this},addSelf:function(a){this.x+=a.x;this.y+=a.y;return this},sub:function(a,b){this.x=a.x-b.x;this.y=a.y-b.y;return this},subSelf:function(a){this.x-=a.x;this.y-=a.y;return this},multiplyScalar:function(a){this.x*=a;this.y*=a;return this},
divideScalar:function(a){a?(this.x/=a,this.y/=a):this.set(0,0);return this},negate:function(){return this.multiplyScalar(-1)},dot:function(a){return this.x*a.x+this.y*a.y},lengthSq:function(){return this.x*this.x+this.y*this.y},length:function(){return Math.sqrt(this.lengthSq())},normalize:function(){return this.divideScalar(this.length())},distanceTo:function(a){return Math.sqrt(this.distanceToSquared(a))},distanceToSquared:function(a){var b=this.x-a.x,a=this.y-a.y;return b*b+a*a},setLength:function(a){return this.normalize().multiplyScalar(a)},
equals:function(a){return a.x===this.x&&a.y===this.y}};THREE.Vector3=function(a,b,c){this.x=a||0;this.y=b||0;this.z=c||0};
THREE.Vector3.prototype={constructor:THREE.Vector3,set:function(a,b,c){this.x=a;this.y=b;this.z=c;return this},setX:function(a){this.x=a;return this},setY:function(a){this.y=a;return this},setZ:function(a){this.z=a;return this},copy:function(a){this.x=a.x;this.y=a.y;this.z=a.z;return this},clone:function(){return new THREE.Vector3(this.x,this.y,this.z)},add:function(a,b){this.x=a.x+b.x;this.y=a.y+b.y;this.z=a.z+b.z;return this},addSelf:function(a){this.x+=a.x;this.y+=a.y;this.z+=a.z;return this},
addScalar:function(a){this.x+=a;this.y+=a;this.z+=a;return this},sub:function(a,b){this.x=a.x-b.x;this.y=a.y-b.y;this.z=a.z-b.z;return this},subSelf:function(a){this.x-=a.x;this.y-=a.y;this.z-=a.z;return this},multiply:function(a,b){this.x=a.x*b.x;this.y=a.y*b.y;this.z=a.z*b.z;return this},multiplySelf:function(a){this.x*=a.x;this.y*=a.y;this.z*=a.z;return this},multiplyScalar:function(a){this.x*=a;this.y*=a;this.z*=a;return this},divideSelf:function(a){this.x/=a.x;this.y/=a.y;this.z/=a.z;return this},
divideScalar:function(a){a?(this.x/=a,this.y/=a,this.z/=a):this.z=this.y=this.x=0;return this},negate:function(){return this.multiplyScalar(-1)},dot:function(a){return this.x*a.x+this.y*a.y+this.z*a.z},lengthSq:function(){return this.x*this.x+this.y*this.y+this.z*this.z},length:function(){return Math.sqrt(this.lengthSq())},lengthManhattan:function(){return this.x+this.y+this.z},normalize:function(){return this.divideScalar(this.length())},setLength:function(a){return this.normalize().multiplyScalar(a)},
cross:function(a,b){this.x=a.y*b.z-a.z*b.y;this.y=a.z*b.x-a.x*b.z;this.z=a.x*b.y-a.y*b.x;return this},crossSelf:function(a){var b=this.x,c=this.y,d=this.z;this.x=c*a.z-d*a.y;this.y=d*a.x-b*a.z;this.z=b*a.y-c*a.x;return this},distanceTo:function(a){return Math.sqrt(this.distanceToSquared(a))},distanceToSquared:function(a){return(new THREE.Vector3).sub(this,a).lengthSq()},setPositionFromMatrix:function(a){this.x=a.n14;this.y=a.n24;this.z=a.n34},setRotationFromMatrix:function(a){var b=Math.cos(this.y);
this.y=Math.asin(a.n13);Math.abs(b)>1.0E-5?(this.x=Math.atan2(-a.n23/b,a.n33/b),this.z=Math.atan2(-a.n12/b,a.n11/b)):(this.x=0,this.z=Math.atan2(a.n21,a.n22))},isZero:function(){return this.lengthSq()<1.0E-4}};THREE.Vector4=function(a,b,c,d){this.x=a||0;this.y=b||0;this.z=c||0;this.w=d!==void 0?d:1};
THREE.Vector4.prototype={constructor:THREE.Vector4,set:function(a,b,c,d){this.x=a;this.y=b;this.z=c;this.w=d;return this},copy:function(a){this.x=a.x;this.y=a.y;this.z=a.z;this.w=a.w!==void 0?a.w:1},clone:function(){return new THREE.Vector4(this.x,this.y,this.z,this.w)},add:function(a,b){this.x=a.x+b.x;this.y=a.y+b.y;this.z=a.z+b.z;this.w=a.w+b.w;return this},addSelf:function(a){this.x+=a.x;this.y+=a.y;this.z+=a.z;this.w+=a.w;return this},sub:function(a,b){this.x=a.x-b.x;this.y=a.y-b.y;this.z=a.z-
b.z;this.w=a.w-b.w;return this},subSelf:function(a){this.x-=a.x;this.y-=a.y;this.z-=a.z;this.w-=a.w;return this},multiplyScalar:function(a){this.x*=a;this.y*=a;this.z*=a;this.w*=a;return this},divideScalar:function(a){a?(this.x/=a,this.y/=a,this.z/=a,this.w/=a):(this.z=this.y=this.x=0,this.w=1);return this},negate:function(){return this.multiplyScalar(-1)},dot:function(a){return this.x*a.x+this.y*a.y+this.z*a.z+this.w*a.w},lengthSq:function(){return this.dot(this)},length:function(){return Math.sqrt(this.lengthSq())},
normalize:function(){return this.divideScalar(this.length())},setLength:function(a){return this.normalize().multiplyScalar(a)},lerpSelf:function(a,b){this.x+=(a.x-this.x)*b;this.y+=(a.y-this.y)*b;this.z+=(a.z-this.z)*b;this.w+=(a.w-this.w)*b;return this}};
THREE.Ray=function(a,b){function c(a,c,b){r.sub(b,a);t=r.dot(c);if(t<=0)return null;p=q.add(a,o.copy(c).multiplyScalar(t));return s=b.distanceTo(p)}function d(a,c,b,d){r.sub(d,c);q.sub(b,c);o.sub(a,c);v=r.dot(r);y=r.dot(q);w=r.dot(o);D=q.dot(q);H=q.dot(o);C=1/(v*D-y*y);z=(D*w-y*H)*C;A=(v*H-y*w)*C;return z>=0&&A>=0&&z+A<1}this.origin=a||new THREE.Vector3;this.direction=b||new THREE.Vector3;this.intersectScene=function(a){return this.intersectObjects(a.children)};this.intersectObjects=function(a){var c,
b,d=[];c=0;for(b=a.length;c<b;c++)Array.prototype.push.apply(d,this.intersectObject(a[c]));d.sort(function(a,c){return a.distance-c.distance});return d};var e=new THREE.Vector3,g=new THREE.Vector3,f=new THREE.Vector3,h=new THREE.Vector3,a=new THREE.Vector3,b=new THREE.Vector3,k=new THREE.Vector3,n=new THREE.Vector3,m=new THREE.Vector3;this.intersectObject=function(o){for(var p,r=[],q=0,t=o.children.length;q<t;q++)Array.prototype.push.apply(r,this.intersectObject(o.children[q]));if(o instanceof THREE.Particle){q=
c(this.origin,this.direction,o.matrixWorld.getPosition());if(q===null||q>o.scale.x)return[];p={distance:q,point:o.position,face:null,object:o};r.push(p)}else if(o instanceof THREE.Mesh){q=c(this.origin,this.direction,o.matrixWorld.getPosition());if(q===null||q>o.geometry.boundingSphere.radius*Math.max(o.scale.x,Math.max(o.scale.y,o.scale.z)))return r;var s,v=o.geometry,y=v.vertices,w;o.matrixRotationWorld.extractRotation(o.matrixWorld);q=0;for(t=v.faces.length;q<t;q++)if(p=v.faces[q],a.copy(this.origin),
b.copy(this.direction),w=o.matrixWorld,k=w.multiplyVector3(k.copy(p.centroid)).subSelf(a),s=k.dot(b),!(s<=0)&&(e=w.multiplyVector3(e.copy(y[p.a].position)),g=w.multiplyVector3(g.copy(y[p.b].position)),f=w.multiplyVector3(f.copy(y[p.c].position)),p instanceof THREE.Face4&&(h=w.multiplyVector3(h.copy(y[p.d].position))),n=o.matrixRotationWorld.multiplyVector3(n.copy(p.normal)),s=b.dot(n),o.doubleSided||(o.flipSided?s>0:s<0)))if(s=n.dot(k.sub(e,a))/s,m.add(a,b.multiplyScalar(s)),p instanceof THREE.Face3)d(m,
e,g,f)&&(p={distance:a.distanceTo(m),point:m.clone(),face:p,object:o},r.push(p));else if(p instanceof THREE.Face4&&(d(m,e,g,h)||d(m,g,f,h)))p={distance:a.distanceTo(m),point:m.clone(),face:p,object:o},r.push(p)}return r};var r=new THREE.Vector3,q=new THREE.Vector3,o=new THREE.Vector3,t,p,s,v,y,w,D,H,C,z,A};
THREE.Rectangle=function(){function a(){g=d-b;f=e-c}var b,c,d,e,g,f,h=!0;this.getX=function(){return b};this.getY=function(){return c};this.getWidth=function(){return g};this.getHeight=function(){return f};this.getLeft=function(){return b};this.getTop=function(){return c};this.getRight=function(){return d};this.getBottom=function(){return e};this.set=function(g,f,m,r){h=!1;b=g;c=f;d=m;e=r;a()};this.addPoint=function(g,f){h?(h=!1,b=g,c=f,d=g,e=f):(b=b<g?b:g,c=c<f?c:f,d=d>g?d:g,e=e>f?e:f);a()};this.add3Points=
function(g,f,m,r,q,o){h?(h=!1,b=g<m?g<q?g:q:m<q?m:q,c=f<r?f<o?f:o:r<o?r:o,d=g>m?g>q?g:q:m>q?m:q,e=f>r?f>o?f:o:r>o?r:o):(b=g<m?g<q?g<b?g:b:q<b?q:b:m<q?m<b?m:b:q<b?q:b,c=f<r?f<o?f<c?f:c:o<c?o:c:r<o?r<c?r:c:o<c?o:c,d=g>m?g>q?g>d?g:d:q>d?q:d:m>q?m>d?m:d:q>d?q:d,e=f>r?f>o?f>e?f:e:o>e?o:e:r>o?r>e?r:e:o>e?o:e);a()};this.addRectangle=function(g){h?(h=!1,b=g.getLeft(),c=g.getTop(),d=g.getRight(),e=g.getBottom()):(b=b<g.getLeft()?b:g.getLeft(),c=c<g.getTop()?c:g.getTop(),d=d>g.getRight()?d:g.getRight(),e=e>
g.getBottom()?e:g.getBottom());a()};this.inflate=function(g){b-=g;c-=g;d+=g;e+=g;a()};this.minSelf=function(g){b=b>g.getLeft()?b:g.getLeft();c=c>g.getTop()?c:g.getTop();d=d<g.getRight()?d:g.getRight();e=e<g.getBottom()?e:g.getBottom();a()};this.intersects=function(a){return Math.min(d,a.getRight())-Math.max(b,a.getLeft())>=0&&Math.min(e,a.getBottom())-Math.max(c,a.getTop())>=0};this.empty=function(){h=!0;e=d=c=b=0;a()};this.isEmpty=function(){return h}};
THREE.Math={clamp:function(a,b,c){return a<b?b:a>c?c:a},clampBottom:function(a,b){return a<b?b:a},mapLinear:function(a,b,c,d,e){return d+(a-b)*(e-d)/(c-b)},random16:function(){return(65280*Math.random()+255*Math.random())/65535}};THREE.Matrix3=function(){this.m=[]};
THREE.Matrix3.prototype={constructor:THREE.Matrix3,transpose:function(){var a,b=this.m;a=b[1];b[1]=b[3];b[3]=a;a=b[2];b[2]=b[6];b[6]=a;a=b[5];b[5]=b[7];b[7]=a;return this},transposeIntoArray:function(a){var b=this.m;a[0]=b[0];a[1]=b[3];a[2]=b[6];a[3]=b[1];a[4]=b[4];a[5]=b[7];a[6]=b[2];a[7]=b[5];a[8]=b[8];return this}};
THREE.Matrix4=function(a,b,c,d,e,g,f,h,k,n,m,r,q,o,t,p){this.set(a!==void 0?a:1,b||0,c||0,d||0,e||0,g!==void 0?g:1,f||0,h||0,k||0,n||0,m!==void 0?m:1,r||0,q||0,o||0,t||0,p!==void 0?p:1);this.flat=Array(16);this.m33=new THREE.Matrix3};
THREE.Matrix4.prototype={constructor:THREE.Matrix4,set:function(a,b,c,d,e,g,f,h,k,n,m,r,q,o,t,p){this.n11=a;this.n12=b;this.n13=c;this.n14=d;this.n21=e;this.n22=g;this.n23=f;this.n24=h;this.n31=k;this.n32=n;this.n33=m;this.n34=r;this.n41=q;this.n42=o;this.n43=t;this.n44=p;return this},identity:function(){this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1);return this},copy:function(a){this.set(a.n11,a.n12,a.n13,a.n14,a.n21,a.n22,a.n23,a.n24,a.n31,a.n32,a.n33,a.n34,a.n41,a.n42,a.n43,a.n44);return this},lookAt:function(a,
b,c){var d=THREE.Matrix4.__v1,e=THREE.Matrix4.__v2,g=THREE.Matrix4.__v3;g.sub(a,b).normalize();if(g.length()===0)g.z=1;d.cross(c,g).normalize();d.length()===0&&(g.x+=1.0E-4,d.cross(c,g).normalize());e.cross(g,d).normalize();this.n11=d.x;this.n12=e.x;this.n13=g.x;this.n21=d.y;this.n22=e.y;this.n23=g.y;this.n31=d.z;this.n32=e.z;this.n33=g.z;return this},multiply:function(a,b){var c=a.n11,d=a.n12,e=a.n13,g=a.n14,f=a.n21,h=a.n22,k=a.n23,n=a.n24,m=a.n31,r=a.n32,q=a.n33,o=a.n34,t=a.n41,p=a.n42,s=a.n43,
v=a.n44,y=b.n11,w=b.n12,D=b.n13,H=b.n14,C=b.n21,z=b.n22,A=b.n23,x=b.n24,M=b.n31,u=b.n32,G=b.n33,T=b.n34,W=b.n41,N=b.n42,R=b.n43,Q=b.n44;this.n11=c*y+d*C+e*M+g*W;this.n12=c*w+d*z+e*u+g*N;this.n13=c*D+d*A+e*G+g*R;this.n14=c*H+d*x+e*T+g*Q;this.n21=f*y+h*C+k*M+n*W;this.n22=f*w+h*z+k*u+n*N;this.n23=f*D+h*A+k*G+n*R;this.n24=f*H+h*x+k*T+n*Q;this.n31=m*y+r*C+q*M+o*W;this.n32=m*w+r*z+q*u+o*N;this.n33=m*D+r*A+q*G+o*R;this.n34=m*H+r*x+q*T+o*Q;this.n41=t*y+p*C+s*M+v*W;this.n42=t*w+p*z+s*u+v*N;this.n43=t*D+p*
A+s*G+v*R;this.n44=t*H+p*x+s*T+v*Q;return this},multiplySelf:function(a){return this.multiply(this,a)},multiplyToArray:function(a,b,c){this.multiply(a,b);c[0]=this.n11;c[1]=this.n21;c[2]=this.n31;c[3]=this.n41;c[4]=this.n12;c[5]=this.n22;c[6]=this.n32;c[7]=this.n42;c[8]=this.n13;c[9]=this.n23;c[10]=this.n33;c[11]=this.n43;c[12]=this.n14;c[13]=this.n24;c[14]=this.n34;c[15]=this.n44;return this},multiplyScalar:function(a){this.n11*=a;this.n12*=a;this.n13*=a;this.n14*=a;this.n21*=a;this.n22*=a;this.n23*=
a;this.n24*=a;this.n31*=a;this.n32*=a;this.n33*=a;this.n34*=a;this.n41*=a;this.n42*=a;this.n43*=a;this.n44*=a;return this},multiplyVector3:function(a){var b=a.x,c=a.y,d=a.z,e=1/(this.n41*b+this.n42*c+this.n43*d+this.n44);a.x=(this.n11*b+this.n12*c+this.n13*d+this.n14)*e;a.y=(this.n21*b+this.n22*c+this.n23*d+this.n24)*e;a.z=(this.n31*b+this.n32*c+this.n33*d+this.n34)*e;return a},multiplyVector4:function(a){var b=a.x,c=a.y,d=a.z,e=a.w;a.x=this.n11*b+this.n12*c+this.n13*d+this.n14*e;a.y=this.n21*b+this.n22*
c+this.n23*d+this.n24*e;a.z=this.n31*b+this.n32*c+this.n33*d+this.n34*e;a.w=this.n41*b+this.n42*c+this.n43*d+this.n44*e;return a},rotateAxis:function(a){var b=a.x,c=a.y,d=a.z;a.x=b*this.n11+c*this.n12+d*this.n13;a.y=b*this.n21+c*this.n22+d*this.n23;a.z=b*this.n31+c*this.n32+d*this.n33;a.normalize();return a},crossVector:function(a){var b=new THREE.Vector4;b.x=this.n11*a.x+this.n12*a.y+this.n13*a.z+this.n14*a.w;b.y=this.n21*a.x+this.n22*a.y+this.n23*a.z+this.n24*a.w;b.z=this.n31*a.x+this.n32*a.y+this.n33*
a.z+this.n34*a.w;b.w=a.w?this.n41*a.x+this.n42*a.y+this.n43*a.z+this.n44*a.w:1;return b},determinant:function(){var a=this.n11,b=this.n12,c=this.n13,d=this.n14,e=this.n21,g=this.n22,f=this.n23,h=this.n24,k=this.n31,n=this.n32,m=this.n33,r=this.n34,q=this.n41,o=this.n42,t=this.n43,p=this.n44;return d*f*n*q-c*h*n*q-d*g*m*q+b*h*m*q+c*g*r*q-b*f*r*q-d*f*k*o+c*h*k*o+d*e*m*o-a*h*m*o-c*e*r*o+a*f*r*o+d*g*k*t-b*h*k*t-d*e*n*t+a*h*n*t+b*e*r*t-a*g*r*t-c*g*k*p+b*f*k*p+c*e*n*p-a*f*n*p-b*e*m*p+a*g*m*p},transpose:function(){var a;
a=this.n21;this.n21=this.n12;this.n12=a;a=this.n31;this.n31=this.n13;this.n13=a;a=this.n32;this.n32=this.n23;this.n23=a;a=this.n41;this.n41=this.n14;this.n14=a;a=this.n42;this.n42=this.n24;this.n24=a;a=this.n43;this.n43=this.n34;this.n43=a;return this},clone:function(){var a=new THREE.Matrix4;a.n11=this.n11;a.n12=this.n12;a.n13=this.n13;a.n14=this.n14;a.n21=this.n21;a.n22=this.n22;a.n23=this.n23;a.n24=this.n24;a.n31=this.n31;a.n32=this.n32;a.n33=this.n33;a.n34=this.n34;a.n41=this.n41;a.n42=this.n42;
a.n43=this.n43;a.n44=this.n44;return a},flatten:function(){this.flat[0]=this.n11;this.flat[1]=this.n21;this.flat[2]=this.n31;this.flat[3]=this.n41;this.flat[4]=this.n12;this.flat[5]=this.n22;this.flat[6]=this.n32;this.flat[7]=this.n42;this.flat[8]=this.n13;this.flat[9]=this.n23;this.flat[10]=this.n33;this.flat[11]=this.n43;this.flat[12]=this.n14;this.flat[13]=this.n24;this.flat[14]=this.n34;this.flat[15]=this.n44;return this.flat},flattenToArray:function(a){a[0]=this.n11;a[1]=this.n21;a[2]=this.n31;
a[3]=this.n41;a[4]=this.n12;a[5]=this.n22;a[6]=this.n32;a[7]=this.n42;a[8]=this.n13;a[9]=this.n23;a[10]=this.n33;a[11]=this.n43;a[12]=this.n14;a[13]=this.n24;a[14]=this.n34;a[15]=this.n44;return a},flattenToArrayOffset:function(a,b){a[b]=this.n11;a[b+1]=this.n21;a[b+2]=this.n31;a[b+3]=this.n41;a[b+4]=this.n12;a[b+5]=this.n22;a[b+6]=this.n32;a[b+7]=this.n42;a[b+8]=this.n13;a[b+9]=this.n23;a[b+10]=this.n33;a[b+11]=this.n43;a[b+12]=this.n14;a[b+13]=this.n24;a[b+14]=this.n34;a[b+15]=this.n44;return a},
setTranslation:function(a,b,c){this.set(1,0,0,a,0,1,0,b,0,0,1,c,0,0,0,1);return this},setScale:function(a,b,c){this.set(a,0,0,0,0,b,0,0,0,0,c,0,0,0,0,1);return this},setRotationX:function(a){var b=Math.cos(a),a=Math.sin(a);this.set(1,0,0,0,0,b,-a,0,0,a,b,0,0,0,0,1);return this},setRotationY:function(a){var b=Math.cos(a),a=Math.sin(a);this.set(b,0,a,0,0,1,0,0,-a,0,b,0,0,0,0,1);return this},setRotationZ:function(a){var b=Math.cos(a),a=Math.sin(a);this.set(b,-a,0,0,a,b,0,0,0,0,1,0,0,0,0,1);return this},
setRotationAxis:function(a,b){var c=Math.cos(b),d=Math.sin(b),e=1-c,g=a.x,f=a.y,h=a.z,k=e*g,n=e*f;this.set(k*g+c,k*f-d*h,k*h+d*f,0,k*f+d*h,n*f+c,n*h-d*g,0,k*h-d*f,n*h+d*g,e*h*h+c,0,0,0,0,1);return this},setPosition:function(a){this.n14=a.x;this.n24=a.y;this.n34=a.z;return this},getPosition:function(){return THREE.Matrix4.__v1.set(this.n14,this.n24,this.n34)},getColumnX:function(){return THREE.Matrix4.__v1.set(this.n11,this.n21,this.n31)},getColumnY:function(){return THREE.Matrix4.__v1.set(this.n12,
this.n22,this.n32)},getColumnZ:function(){return THREE.Matrix4.__v1.set(this.n13,this.n23,this.n33)},getInverse:function(a){var b=a.n11,c=a.n12,d=a.n13,e=a.n14,g=a.n21,f=a.n22,h=a.n23,k=a.n24,n=a.n31,m=a.n32,r=a.n33,q=a.n34,o=a.n41,t=a.n42,p=a.n43,s=a.n44;this.n11=h*q*t-k*r*t+k*m*p-f*q*p-h*m*s+f*r*s;this.n12=e*r*t-d*q*t-e*m*p+c*q*p+d*m*s-c*r*s;this.n13=d*k*t-e*h*t+e*f*p-c*k*p-d*f*s+c*h*s;this.n14=e*h*m-d*k*m-e*f*r+c*k*r+d*f*q-c*h*q;this.n21=k*r*o-h*q*o-k*n*p+g*q*p+h*n*s-g*r*s;this.n22=d*q*o-e*r*o+
e*n*p-b*q*p-d*n*s+b*r*s;this.n23=e*h*o-d*k*o-e*g*p+b*k*p+d*g*s-b*h*s;this.n24=d*k*n-e*h*n+e*g*r-b*k*r-d*g*q+b*h*q;this.n31=f*q*o-k*m*o+k*n*t-g*q*t-f*n*s+g*m*s;this.n32=e*m*o-c*q*o-e*n*t+b*q*t+c*n*s-b*m*s;this.n33=d*k*o-e*f*o+e*g*t-b*k*t-c*g*s+b*f*s;this.n34=e*f*n-c*k*n-e*g*m+b*k*m+c*g*q-b*f*q;this.n41=h*m*o-f*r*o-h*n*t+g*r*t+f*n*p-g*m*p;this.n42=c*r*o-d*m*o+d*n*t-b*r*t-c*n*p+b*m*p;this.n43=d*f*o-c*h*o-d*g*t+b*h*t+c*g*p-b*f*p;this.n44=c*h*n-d*f*n+d*g*m-b*h*m-c*g*r+b*f*r;this.multiplyScalar(1/a.determinant());
return this},setRotationFromEuler:function(a,b){var c=a.x,d=a.y,e=a.z,g=Math.cos(c),c=Math.sin(c),f=Math.cos(d),d=Math.sin(d),h=Math.cos(e),e=Math.sin(e);switch(b){case "YXZ":var k=f*h,n=f*e,m=d*h,r=d*e;this.n11=k+r*c;this.n12=m*c-n;this.n13=g*d;this.n21=g*e;this.n22=g*h;this.n23=-c;this.n31=n*c-m;this.n32=r+k*c;this.n33=g*f;break;case "ZXY":k=f*h;n=f*e;m=d*h;r=d*e;this.n11=k-r*c;this.n12=-g*e;this.n13=m+n*c;this.n21=n+m*c;this.n22=g*h;this.n23=r-k*c;this.n31=-g*d;this.n32=c;this.n33=g*f;break;case "ZYX":k=
g*h;n=g*e;m=c*h;r=c*e;this.n11=f*h;this.n12=m*d-n;this.n13=k*d+r;this.n21=f*e;this.n22=r*d+k;this.n23=n*d-m;this.n31=-d;this.n32=c*f;this.n33=g*f;break;case "YZX":k=g*f;n=g*d;m=c*f;r=c*d;this.n11=f*h;this.n12=r-k*e;this.n13=m*e+n;this.n21=e;this.n22=g*h;this.n23=-c*h;this.n31=-d*h;this.n32=n*e+m;this.n33=k-r*e;break;case "XZY":k=g*f;n=g*d;m=c*f;r=c*d;this.n11=f*h;this.n12=-e;this.n13=d*h;this.n21=k*e+r;this.n22=g*h;this.n23=n*e-m;this.n31=m*e-n;this.n32=c*h;this.n33=r*e+k;break;default:k=g*h,n=g*
e,m=c*h,r=c*e,this.n11=f*h,this.n12=-f*e,this.n13=d,this.n21=n+m*d,this.n22=k-r*d,this.n23=-c*f,this.n31=r-k*d,this.n32=m+n*d,this.n33=g*f}return this},setRotationFromQuaternion:function(a){var b=a.x,c=a.y,d=a.z,e=a.w,g=b+b,f=c+c,h=d+d,a=b*g,k=b*f;b*=h;var n=c*f;c*=h;d*=h;g*=e;f*=e;e*=h;this.n11=1-(n+d);this.n12=k-e;this.n13=b+f;this.n21=k+e;this.n22=1-(a+d);this.n23=c-g;this.n31=b-f;this.n32=c+g;this.n33=1-(a+n);return this},scale:function(a){var b=a.x,c=a.y,a=a.z;this.n11*=b;this.n12*=c;this.n13*=
a;this.n21*=b;this.n22*=c;this.n23*=a;this.n31*=b;this.n32*=c;this.n33*=a;this.n41*=b;this.n42*=c;this.n43*=a;return this},compose:function(a,b,c){var d=THREE.Matrix4.__m1,e=THREE.Matrix4.__m2;d.identity();d.setRotationFromQuaternion(b);e.setScale(c.x,c.y,c.z);this.multiply(d,e);this.n14=a.x;this.n24=a.y;this.n34=a.z;return this},decompose:function(a,b,c){var d=THREE.Matrix4.__v1,e=THREE.Matrix4.__v2,g=THREE.Matrix4.__v3;d.set(this.n11,this.n21,this.n31);e.set(this.n12,this.n22,this.n32);g.set(this.n13,
this.n23,this.n33);a=a instanceof THREE.Vector3?a:new THREE.Vector3;b=b instanceof THREE.Quaternion?b:new THREE.Quaternion;c=c instanceof THREE.Vector3?c:new THREE.Vector3;c.x=d.length();c.y=e.length();c.z=g.length();a.x=this.n14;a.y=this.n24;a.z=this.n34;d=THREE.Matrix4.__m1;d.copy(this);d.n11/=c.x;d.n21/=c.x;d.n31/=c.x;d.n12/=c.y;d.n22/=c.y;d.n32/=c.y;d.n13/=c.z;d.n23/=c.z;d.n33/=c.z;b.setFromRotationMatrix(d);return[a,b,c]},extractPosition:function(a){this.n14=a.n14;this.n24=a.n24;this.n34=a.n34;
return this},extractRotation:function(a){var b=THREE.Matrix4.__v1,c=1/b.set(a.n11,a.n21,a.n31).length(),d=1/b.set(a.n12,a.n22,a.n32).length(),b=1/b.set(a.n13,a.n23,a.n33).length();this.n11=a.n11*c;this.n21=a.n21*c;this.n31=a.n31*c;this.n12=a.n12*d;this.n22=a.n22*d;this.n32=a.n32*d;this.n13=a.n13*b;this.n23=a.n23*b;this.n33=a.n33*b;return this}};
THREE.Matrix4.makeInvert3x3=function(a){var b=a.m33,c=b.m,d=a.n33*a.n22-a.n32*a.n23,e=-a.n33*a.n21+a.n31*a.n23,g=a.n32*a.n21-a.n31*a.n22,f=-a.n33*a.n12+a.n32*a.n13,h=a.n33*a.n11-a.n31*a.n13,k=-a.n32*a.n11+a.n31*a.n12,n=a.n23*a.n12-a.n22*a.n13,m=-a.n23*a.n11+a.n21*a.n13,r=a.n22*a.n11-a.n21*a.n12,a=a.n11*d+a.n21*f+a.n31*n;a===0&&console.error("THREE.Matrix4.makeInvert3x3: Matrix not invertible.");a=1/a;c[0]=a*d;c[1]=a*e;c[2]=a*g;c[3]=a*f;c[4]=a*h;c[5]=a*k;c[6]=a*n;c[7]=a*m;c[8]=a*r;return b};
THREE.Matrix4.makeFrustum=function(a,b,c,d,e,g){var f;f=new THREE.Matrix4;f.n11=2*e/(b-a);f.n12=0;f.n13=(b+a)/(b-a);f.n14=0;f.n21=0;f.n22=2*e/(d-c);f.n23=(d+c)/(d-c);f.n24=0;f.n31=0;f.n32=0;f.n33=-(g+e)/(g-e);f.n34=-2*g*e/(g-e);f.n41=0;f.n42=0;f.n43=-1;f.n44=0;return f};THREE.Matrix4.makePerspective=function(a,b,c,d){var e,a=c*Math.tan(a*Math.PI/360);e=-a;return THREE.Matrix4.makeFrustum(e*b,a*b,e,a,c,d)};
THREE.Matrix4.makeOrtho=function(a,b,c,d,e,g){var f,h,k,n;f=new THREE.Matrix4;h=b-a;k=c-d;n=g-e;f.n11=2/h;f.n12=0;f.n13=0;f.n14=-((b+a)/h);f.n21=0;f.n22=2/k;f.n23=0;f.n24=-((c+d)/k);f.n31=0;f.n32=0;f.n33=-2/n;f.n34=-((g+e)/n);f.n41=0;f.n42=0;f.n43=0;f.n44=1;return f};THREE.Matrix4.__v1=new THREE.Vector3;THREE.Matrix4.__v2=new THREE.Vector3;THREE.Matrix4.__v3=new THREE.Vector3;THREE.Matrix4.__m1=new THREE.Matrix4;THREE.Matrix4.__m2=new THREE.Matrix4;
THREE.Object3D=function(){this.name="";this.id=THREE.Object3DCount++;this.parent=void 0;this.children=[];this.up=new THREE.Vector3(0,1,0);this.position=new THREE.Vector3;this.rotation=new THREE.Vector3;this.eulerOrder="XYZ";this.scale=new THREE.Vector3(1,1,1);this.flipSided=this.doubleSided=this.dynamic=!1;this.renderDepth=null;this.rotationAutoUpdate=!0;this.matrix=new THREE.Matrix4;this.matrixWorld=new THREE.Matrix4;this.matrixRotationWorld=new THREE.Matrix4;this.matrixWorldNeedsUpdate=this.matrixAutoUpdate=
!0;this.quaternion=new THREE.Quaternion;this.useQuaternion=!1;this.boundRadius=0;this.boundRadiusScale=1;this.visible=!0;this.receiveShadow=this.castShadow=!1;this.frustumCulled=!0;this._vector=new THREE.Vector3};
THREE.Object3D.prototype={constructor:THREE.Object3D,translate:function(a,b){this.matrix.rotateAxis(b);this.position.addSelf(b.multiplyScalar(a))},translateX:function(a){this.translate(a,this._vector.set(1,0,0))},translateY:function(a){this.translate(a,this._vector.set(0,1,0))},translateZ:function(a){this.translate(a,this._vector.set(0,0,1))},lookAt:function(a){this.matrix.lookAt(a,this.position,this.up);this.rotationAutoUpdate&&this.rotation.setRotationFromMatrix(this.matrix)},add:function(a){if(this.children.indexOf(a)===
-1){a.parent!==void 0&&a.parent.remove(a);a.parent=this;this.children.push(a);for(var b=this;b.parent!==void 0;)b=b.parent;b!==void 0&&b instanceof THREE.Scene&&b.addObject(a)}},remove:function(a){var b=this.children.indexOf(a);if(b!==-1){a.parent=void 0;this.children.splice(b,1);for(b=this;b.parent!==void 0;)b=b.parent;b!==void 0&&b instanceof THREE.Scene&&b.removeObject(a)}},getChildByName:function(a,b){var c,d,e;c=0;for(d=this.children.length;c<d;c++){e=this.children[c];if(e.name===a)return e;
if(b&&(e=e.getChildByName(a,b),e!==void 0))return e}},updateMatrix:function(){this.matrix.setPosition(this.position);this.useQuaternion?this.matrix.setRotationFromQuaternion(this.quaternion):this.matrix.setRotationFromEuler(this.rotation,this.eulerOrder);if(this.scale.x!==1||this.scale.y!==1||this.scale.z!==1)this.matrix.scale(this.scale),this.boundRadiusScale=Math.max(this.scale.x,Math.max(this.scale.y,this.scale.z));this.matrixWorldNeedsUpdate=!0},updateMatrixWorld:function(a){this.matrixAutoUpdate&&
this.updateMatrix();if(this.matrixWorldNeedsUpdate||a)this.parent?this.matrixWorld.multiply(this.parent.matrixWorld,this.matrix):this.matrixWorld.copy(this.matrix),this.matrixWorldNeedsUpdate=!1,a=!0;for(var b=0,c=this.children.length;b<c;b++)this.children[b].updateMatrixWorld(a)}};THREE.Object3DCount=0;
THREE.Projector=function(){function a(){var a=f[g]=f[g]||new THREE.RenderableObject;g++;return a}function b(){var a=n[k]=n[k]||new THREE.RenderableVertex;k++;return a}function c(a,c){return c.z-a.z}function d(a,c){var b=0,d=1,e=a.z+a.w,g=c.z+c.w,f=-a.z+a.w,h=-c.z+c.w;return e>=0&&g>=0&&f>=0&&h>=0?!0:e<0&&g<0||f<0&&h<0?!1:(e<0?b=Math.max(b,e/(e-g)):g<0&&(d=Math.min(d,e/(e-g))),f<0?b=Math.max(b,f/(f-h)):h<0&&(d=Math.min(d,f/(f-h))),d<b?!1:(a.lerpSelf(c,b),c.lerpSelf(a,1-d),!0))}var e,g,f=[],h,k,n=[],
m,r,q=[],o,t=[],p,s,v=[],y,w,D=[],H={objects:[],sprites:[],lights:[],elements:[]},C=new THREE.Vector3,z=new THREE.Vector4,A=new THREE.Matrix4,x=new THREE.Matrix4,M=[new THREE.Vector4,new THREE.Vector4,new THREE.Vector4,new THREE.Vector4,new THREE.Vector4,new THREE.Vector4],u=new THREE.Vector4,G=new THREE.Vector4;this.computeFrustum=function(a){M[0].set(a.n41-a.n11,a.n42-a.n12,a.n43-a.n13,a.n44-a.n14);M[1].set(a.n41+a.n11,a.n42+a.n12,a.n43+a.n13,a.n44+a.n14);M[2].set(a.n41+a.n21,a.n42+a.n22,a.n43+
a.n23,a.n44+a.n24);M[3].set(a.n41-a.n21,a.n42-a.n22,a.n43-a.n23,a.n44-a.n24);M[4].set(a.n41-a.n31,a.n42-a.n32,a.n43-a.n33,a.n44-a.n34);M[5].set(a.n41+a.n31,a.n42+a.n32,a.n43+a.n33,a.n44+a.n34);for(a=0;a<6;a++){var c=M[a];c.divideScalar(Math.sqrt(c.x*c.x+c.y*c.y+c.z*c.z))}};this.projectVector=function(a,c){c.matrixWorldInverse.getInverse(c.matrixWorld);A.multiply(c.projectionMatrix,c.matrixWorldInverse);A.multiplyVector3(a);return a};this.unprojectVector=function(a,c){c.projectionMatrixInverse.getInverse(c.projectionMatrix);
A.multiply(c.matrixWorld,c.projectionMatrixInverse);A.multiplyVector3(a);return a};this.pickingRay=function(a,c){var b;a.z=-1;b=new THREE.Vector3(a.x,a.y,1);this.unprojectVector(a,c);this.unprojectVector(b,c);b.subSelf(a).normalize();return new THREE.Ray(a,b)};this.projectGraph=function(b,d){g=0;H.objects.length=0;H.sprites.length=0;H.lights.length=0;var f=function(c){if(c.visible!==!1){var b;if(b=c instanceof THREE.Mesh||c instanceof THREE.Line)if(!(b=c.frustumCulled===!1))a:{for(var d=c.matrixWorld,
g=-c.geometry.boundingSphere.radius*Math.max(c.scale.x,Math.max(c.scale.y,c.scale.z)),h=0;h<6;h++)if(b=M[h].x*d.n14+M[h].y*d.n24+M[h].z*d.n34+M[h].w,b<=g){b=!1;break a}b=!0}b?(A.multiplyVector3(C.copy(c.position)),e=a(),e.object=c,e.z=C.z,H.objects.push(e)):c instanceof THREE.Sprite||c instanceof THREE.Particle?(A.multiplyVector3(C.copy(c.position)),e=a(),e.object=c,e.z=C.z,H.sprites.push(e)):c instanceof THREE.Light&&H.lights.push(c);b=0;for(d=c.children.length;b<d;b++)f(c.children[b])}};f(b);d&&
H.objects.sort(c);return H};this.projectScene=function(a,e,g){var f=e.near,M=e.far,C,K,J,L,O,U,da,Y,l,Z,X,fa,ia,ba,wa,ta;w=s=o=r=0;H.elements.length=0;e.parent===void 0&&(console.warn("DEPRECATED: Camera hasn't been added to a Scene. Adding it..."),a.add(e));a.updateMatrixWorld();e.matrixWorldInverse.getInverse(e.matrixWorld);A.multiply(e.projectionMatrix,e.matrixWorldInverse);this.computeFrustum(A);H=this.projectGraph(a,!1);a=0;for(C=H.objects.length;a<C;a++)if(l=H.objects[a].object,Z=l.matrixWorld,
fa=l.material,k=0,l instanceof THREE.Mesh){X=l.geometry;ia=l.geometry.materials;L=X.vertices;ba=X.faces;wa=X.faceVertexUvs;X=l.matrixRotationWorld.extractRotation(Z);K=0;for(J=L.length;K<J;K++)h=b(),h.positionWorld.copy(L[K].position),Z.multiplyVector3(h.positionWorld),h.positionScreen.copy(h.positionWorld),A.multiplyVector4(h.positionScreen),h.positionScreen.x/=h.positionScreen.w,h.positionScreen.y/=h.positionScreen.w,h.visible=h.positionScreen.z>f&&h.positionScreen.z<M;L=0;for(K=ba.length;L<K;L++){J=
ba[L];if(J instanceof THREE.Face3)if(O=n[J.a],U=n[J.b],da=n[J.c],O.visible&&U.visible&&da.visible&&(l.doubleSided||l.flipSided!=(da.positionScreen.x-O.positionScreen.x)*(U.positionScreen.y-O.positionScreen.y)-(da.positionScreen.y-O.positionScreen.y)*(U.positionScreen.x-O.positionScreen.x)<0))Y=q[r]=q[r]||new THREE.RenderableFace3,r++,m=Y,m.v1.copy(O),m.v2.copy(U),m.v3.copy(da);else continue;else if(J instanceof THREE.Face4)if(O=n[J.a],U=n[J.b],da=n[J.c],Y=n[J.d],O.visible&&U.visible&&da.visible&&
Y.visible&&(l.doubleSided||l.flipSided!=((Y.positionScreen.x-O.positionScreen.x)*(U.positionScreen.y-O.positionScreen.y)-(Y.positionScreen.y-O.positionScreen.y)*(U.positionScreen.x-O.positionScreen.x)<0||(U.positionScreen.x-da.positionScreen.x)*(Y.positionScreen.y-da.positionScreen.y)-(U.positionScreen.y-da.positionScreen.y)*(Y.positionScreen.x-da.positionScreen.x)<0)))ta=t[o]=t[o]||new THREE.RenderableFace4,o++,m=ta,m.v1.copy(O),m.v2.copy(U),m.v3.copy(da),m.v4.copy(Y);else continue;m.normalWorld.copy(J.normal);
X.multiplyVector3(m.normalWorld);m.centroidWorld.copy(J.centroid);Z.multiplyVector3(m.centroidWorld);m.centroidScreen.copy(m.centroidWorld);A.multiplyVector3(m.centroidScreen);da=J.vertexNormals;O=0;for(U=da.length;O<U;O++)Y=m.vertexNormalsWorld[O],Y.copy(da[O]),X.multiplyVector3(Y);O=0;for(U=wa.length;O<U;O++)if(ta=wa[O][L]){da=0;for(Y=ta.length;da<Y;da++)m.uvs[O][da]=ta[da]}m.material=fa;m.faceMaterial=J.materialIndex!==null?ia[J.materialIndex]:null;m.z=m.centroidScreen.z;H.elements.push(m)}}else if(l instanceof
THREE.Line){x.multiply(A,Z);L=l.geometry.vertices;O=b();O.positionScreen.copy(L[0].position);x.multiplyVector4(O.positionScreen);K=1;for(J=L.length;K<J;K++)if(O=b(),O.positionScreen.copy(L[K].position),x.multiplyVector4(O.positionScreen),U=n[k-2],u.copy(O.positionScreen),G.copy(U.positionScreen),d(u,G))u.multiplyScalar(1/u.w),G.multiplyScalar(1/G.w),l=v[s]=v[s]||new THREE.RenderableLine,s++,p=l,p.v1.positionScreen.copy(u),p.v2.positionScreen.copy(G),p.z=Math.max(u.z,G.z),p.material=fa,H.elements.push(p)}a=
0;for(C=H.sprites.length;a<C;a++)if(l=H.sprites[a].object,Z=l.matrixWorld,l instanceof THREE.Particle&&(z.set(Z.n14,Z.n24,Z.n34,1),A.multiplyVector4(z),z.z/=z.w,z.z>0&&z.z<1))f=D[w]=D[w]||new THREE.RenderableParticle,w++,y=f,y.x=z.x/z.w,y.y=z.y/z.w,y.z=z.z,y.rotation=l.rotation.z,y.scale.x=l.scale.x*Math.abs(y.x-(z.x+e.projectionMatrix.n11)/(z.w+e.projectionMatrix.n14)),y.scale.y=l.scale.y*Math.abs(y.y-(z.y+e.projectionMatrix.n22)/(z.w+e.projectionMatrix.n24)),y.material=l.material,H.elements.push(y);
g&&H.elements.sort(c);return H}};THREE.Quaternion=function(a,b,c,d){this.set(a||0,b||0,c||0,d!==void 0?d:1)};
THREE.Quaternion.prototype={constructor:THREE.Quaternion,set:function(a,b,c,d){this.x=a;this.y=b;this.z=c;this.w=d;return this},copy:function(a){this.x=a.x;this.y=a.y;this.z=a.z;this.w=a.w;return this},setFromEuler:function(a){var b=Math.PI/360,c=a.x*b,d=a.y*b,e=a.z*b,a=Math.cos(d),d=Math.sin(d),b=Math.cos(-e),e=Math.sin(-e),g=Math.cos(c),c=Math.sin(c),f=a*b,h=d*e;this.w=f*g-h*c;this.x=f*c+h*g;this.y=d*b*g+a*e*c;this.z=a*e*g-d*b*c;return this},setFromAxisAngle:function(a,b){var c=b/2,d=Math.sin(c);
this.x=a.x*d;this.y=a.y*d;this.z=a.z*d;this.w=Math.cos(c);return this},setFromRotationMatrix:function(a){var b=Math.pow(a.determinant(),1/3);this.w=Math.sqrt(Math.max(0,b+a.n11+a.n22+a.n33))/2;this.x=Math.sqrt(Math.max(0,b+a.n11-a.n22-a.n33))/2;this.y=Math.sqrt(Math.max(0,b-a.n11+a.n22-a.n33))/2;this.z=Math.sqrt(Math.max(0,b-a.n11-a.n22+a.n33))/2;this.x=a.n32-a.n23<0?-Math.abs(this.x):Math.abs(this.x);this.y=a.n13-a.n31<0?-Math.abs(this.y):Math.abs(this.y);this.z=a.n21-a.n12<0?-Math.abs(this.z):Math.abs(this.z);
this.normalize();return this},calculateW:function(){this.w=-Math.sqrt(Math.abs(1-this.x*this.x-this.y*this.y-this.z*this.z));return this},inverse:function(){this.x*=-1;this.y*=-1;this.z*=-1;return this},length:function(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)},normalize:function(){var a=Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w);a===0?this.w=this.z=this.y=this.x=0:(a=1/a,this.x*=a,this.y*=a,this.z*=a,this.w*=a);return this},multiplySelf:function(a){var b=
this.x,c=this.y,d=this.z,e=this.w,g=a.x,f=a.y,h=a.z,a=a.w;this.x=b*a+e*g+c*h-d*f;this.y=c*a+e*f+d*g-b*h;this.z=d*a+e*h+b*f-c*g;this.w=e*a-b*g-c*f-d*h;return this},multiply:function(a,b){this.x=a.x*b.w+a.y*b.z-a.z*b.y+a.w*b.x;this.y=-a.x*b.z+a.y*b.w+a.z*b.x+a.w*b.y;this.z=a.x*b.y-a.y*b.x+a.z*b.w+a.w*b.z;this.w=-a.x*b.x-a.y*b.y-a.z*b.z+a.w*b.w;return this},multiplyVector3:function(a,b){b||(b=a);var c=a.x,d=a.y,e=a.z,g=this.x,f=this.y,h=this.z,k=this.w,n=k*c+f*e-h*d,m=k*d+h*c-g*e,r=k*e+g*d-f*c,c=-g*
c-f*d-h*e;b.x=n*k+c*-g+m*-h-r*-f;b.y=m*k+c*-f+r*-g-n*-h;b.z=r*k+c*-h+n*-f-m*-g;return b}};
THREE.Quaternion.slerp=function(a,b,c,d){var e=a.w*b.w+a.x*b.x+a.y*b.y+a.z*b.z;e<0?(c.w=-b.w,c.x=-b.x,c.y=-b.y,c.z=-b.z,e=-e):c.copy(b);if(Math.abs(e)>=1)return c.w=a.w,c.x=a.x,c.y=a.y,c.z=a.z,c;var g=Math.acos(e),e=Math.sqrt(1-e*e);if(Math.abs(e)<0.0010)return c.w=0.5*(a.w+b.w),c.x=0.5*(a.x+b.x),c.y=0.5*(a.y+b.y),c.z=0.5*(a.z+b.z),c;b=Math.sin((1-d)*g)/e;d=Math.sin(d*g)/e;c.w=a.w*b+c.w*d;c.x=a.x*b+c.x*d;c.y=a.y*b+c.y*d;c.z=a.z*b+c.z*d;return c};THREE.Vertex=function(a){this.position=a||new THREE.Vector3};
THREE.Face3=function(a,b,c,d,e,g){this.a=a;this.b=b;this.c=c;this.normal=d instanceof THREE.Vector3?d:new THREE.Vector3;this.vertexNormals=d instanceof Array?d:[];this.color=e instanceof THREE.Color?e:new THREE.Color;this.vertexColors=e instanceof Array?e:[];this.vertexTangents=[];this.materialIndex=g;this.centroid=new THREE.Vector3};
THREE.Face4=function(a,b,c,d,e,g,f){this.a=a;this.b=b;this.c=c;this.d=d;this.normal=e instanceof THREE.Vector3?e:new THREE.Vector3;this.vertexNormals=e instanceof Array?e:[];this.color=g instanceof THREE.Color?g:new THREE.Color;this.vertexColors=g instanceof Array?g:[];this.vertexTangents=[];this.materialIndex=f;this.centroid=new THREE.Vector3};THREE.UV=function(a,b){this.u=a||0;this.v=b||0};
THREE.UV.prototype={constructor:THREE.UV,set:function(a,b){this.u=a;this.v=b;return this},copy:function(a){this.u=a.u;this.v=a.v;return this},clone:function(){return new THREE.UV(this.u,this.v)}};
THREE.Geometry=function(){this.id=THREE.GeometryCount++;this.vertices=[];this.colors=[];this.materials=[];this.faces=[];this.faceUvs=[[]];this.faceVertexUvs=[[]];this.morphTargets=[];this.morphColors=[];this.skinWeights=[];this.skinIndices=[];this.boundingSphere=this.boundingBox=null;this.dynamic=this.hasTangents=!1};
THREE.Geometry.prototype={constructor:THREE.Geometry,applyMatrix:function(a){var b=new THREE.Matrix4;b.extractRotation(a,new THREE.Vector3(1,1,1));for(var c=0,d=this.vertices.length;c<d;c++)a.multiplyVector3(this.vertices[c].position);c=0;for(d=this.faces.length;c<d;c++){var e=this.faces[c];b.multiplyVector3(e.normal);for(var g=0,f=e.vertexNormals.length;g<f;g++)b.multiplyVector3(e.vertexNormals[g]);a.multiplyVector3(e.centroid)}},computeCentroids:function(){var a,b,c;a=0;for(b=this.faces.length;a<
b;a++)c=this.faces[a],c.centroid.set(0,0,0),c instanceof THREE.Face3?(c.centroid.addSelf(this.vertices[c.a].position),c.centroid.addSelf(this.vertices[c.b].position),c.centroid.addSelf(this.vertices[c.c].position),c.centroid.divideScalar(3)):c instanceof THREE.Face4&&(c.centroid.addSelf(this.vertices[c.a].position),c.centroid.addSelf(this.vertices[c.b].position),c.centroid.addSelf(this.vertices[c.c].position),c.centroid.addSelf(this.vertices[c.d].position),c.centroid.divideScalar(4))},computeFaceNormals:function(){var a,
b,c,d,e,g,f=new THREE.Vector3,h=new THREE.Vector3;a=0;for(b=this.faces.length;a<b;a++)c=this.faces[a],d=this.vertices[c.a],e=this.vertices[c.b],g=this.vertices[c.c],f.sub(g.position,e.position),h.sub(d.position,e.position),f.crossSelf(h),f.isZero()||f.normalize(),c.normal.copy(f)},computeVertexNormals:function(){var a,b,c,d;if(this.__tmpVertices===void 0){d=this.__tmpVertices=Array(this.vertices.length);a=0;for(b=this.vertices.length;a<b;a++)d[a]=new THREE.Vector3;a=0;for(b=this.faces.length;a<b;a++)if(c=
this.faces[a],c instanceof THREE.Face3)c.vertexNormals=[new THREE.Vector3,new THREE.Vector3,new THREE.Vector3];else if(c instanceof THREE.Face4)c.vertexNormals=[new THREE.Vector3,new THREE.Vector3,new THREE.Vector3,new THREE.Vector3]}else{d=this.__tmpVertices;a=0;for(b=this.vertices.length;a<b;a++)d[a].set(0,0,0)}a=0;for(b=this.faces.length;a<b;a++)c=this.faces[a],c instanceof THREE.Face3?(d[c.a].addSelf(c.normal),d[c.b].addSelf(c.normal),d[c.c].addSelf(c.normal)):c instanceof THREE.Face4&&(d[c.a].addSelf(c.normal),
d[c.b].addSelf(c.normal),d[c.c].addSelf(c.normal),d[c.d].addSelf(c.normal));a=0;for(b=this.vertices.length;a<b;a++)d[a].normalize();a=0;for(b=this.faces.length;a<b;a++)c=this.faces[a],c instanceof THREE.Face3?(c.vertexNormals[0].copy(d[c.a]),c.vertexNormals[1].copy(d[c.b]),c.vertexNormals[2].copy(d[c.c])):c instanceof THREE.Face4&&(c.vertexNormals[0].copy(d[c.a]),c.vertexNormals[1].copy(d[c.b]),c.vertexNormals[2].copy(d[c.c]),c.vertexNormals[3].copy(d[c.d]))},computeTangents:function(){function a(a,
c,b,d,e,g,T){h=a.vertices[c].position;k=a.vertices[b].position;n=a.vertices[d].position;m=f[e];r=f[g];q=f[T];o=k.x-h.x;t=n.x-h.x;p=k.y-h.y;s=n.y-h.y;v=k.z-h.z;y=n.z-h.z;w=r.u-m.u;D=q.u-m.u;H=r.v-m.v;C=q.v-m.v;z=1/(w*C-D*H);u.set((C*o-H*t)*z,(C*p-H*s)*z,(C*v-H*y)*z);G.set((w*t-D*o)*z,(w*s-D*p)*z,(w*y-D*v)*z);x[c].addSelf(u);x[b].addSelf(u);x[d].addSelf(u);M[c].addSelf(G);M[b].addSelf(G);M[d].addSelf(G)}var b,c,d,e,g,f,h,k,n,m,r,q,o,t,p,s,v,y,w,D,H,C,z,A,x=[],M=[],u=new THREE.Vector3,G=new THREE.Vector3,
T=new THREE.Vector3,W=new THREE.Vector3,N=new THREE.Vector3;b=0;for(c=this.vertices.length;b<c;b++)x[b]=new THREE.Vector3,M[b]=new THREE.Vector3;b=0;for(c=this.faces.length;b<c;b++)g=this.faces[b],f=this.faceVertexUvs[0][b],g instanceof THREE.Face3?a(this,g.a,g.b,g.c,0,1,2):g instanceof THREE.Face4&&(a(this,g.a,g.b,g.c,0,1,2),a(this,g.a,g.b,g.d,0,1,3));var R=["a","b","c","d"];b=0;for(c=this.faces.length;b<c;b++){g=this.faces[b];for(d=0;d<g.vertexNormals.length;d++)N.copy(g.vertexNormals[d]),e=g[R[d]],
A=x[e],T.copy(A),T.subSelf(N.multiplyScalar(N.dot(A))).normalize(),W.cross(g.vertexNormals[d],A),e=W.dot(M[e]),e=e<0?-1:1,g.vertexTangents[d]=new THREE.Vector4(T.x,T.y,T.z,e)}this.hasTangents=!0},computeBoundingBox:function(){var a;if(this.vertices.length>0){this.boundingBox={x:[this.vertices[0].position.x,this.vertices[0].position.x],y:[this.vertices[0].position.y,this.vertices[0].position.y],z:[this.vertices[0].position.z,this.vertices[0].position.z]};for(var b=1,c=this.vertices.length;b<c;b++){a=
this.vertices[b];if(a.position.x<this.boundingBox.x[0])this.boundingBox.x[0]=a.position.x;else if(a.position.x>this.boundingBox.x[1])this.boundingBox.x[1]=a.position.x;if(a.position.y<this.boundingBox.y[0])this.boundingBox.y[0]=a.position.y;else if(a.position.y>this.boundingBox.y[1])this.boundingBox.y[1]=a.position.y;if(a.position.z<this.boundingBox.z[0])this.boundingBox.z[0]=a.position.z;else if(a.position.z>this.boundingBox.z[1])this.boundingBox.z[1]=a.position.z}}},computeBoundingSphere:function(){for(var a=
0,b=0,c=this.vertices.length;b<c;b++)a=Math.max(a,this.vertices[b].position.length());this.boundingSphere={radius:a}},mergeVertices:function(){var a={},b=[],c=[],d,e=Math.pow(10,4),g,f;g=0;for(f=this.vertices.length;g<f;g++)d=this.vertices[g].position,d=[Math.round(d.x*e),Math.round(d.y*e),Math.round(d.z*e)].join("_"),a[d]===void 0?(a[d]=g,b.push(this.vertices[g]),c[g]=b.length-1):c[g]=c[a[d]];g=0;for(f=this.faces.length;g<f;g++)if(a=this.faces[g],a instanceof THREE.Face3)a.a=c[a.a],a.b=c[a.b],a.c=
c[a.c];else if(a instanceof THREE.Face4)a.a=c[a.a],a.b=c[a.b],a.c=c[a.c],a.d=c[a.d];this.vertices=b}};THREE.GeometryCount=0;
THREE.Spline=function(a){function b(a,c,b,d,e,g,f){a=(b-a)*0.5;d=(d-c)*0.5;return(2*(c-b)+a+d)*f+(-3*(c-b)-2*a-d)*g+a*e+c}this.points=a;var c=[],d={x:0,y:0,z:0},e,g,f,h,k,n,m,r,q;this.initFromArray=function(a){this.points=[];for(var c=0;c<a.length;c++)this.points[c]={x:a[c][0],y:a[c][1],z:a[c][2]}};this.getPoint=function(a){e=(this.points.length-1)*a;g=Math.floor(e);f=e-g;c[0]=g===0?g:g-1;c[1]=g;c[2]=g>this.points.length-2?g:g+1;c[3]=g>this.points.length-3?g:g+2;n=this.points[c[0]];m=this.points[c[1]];
r=this.points[c[2]];q=this.points[c[3]];h=f*f;k=f*h;d.x=b(n.x,m.x,r.x,q.x,f,h,k);d.y=b(n.y,m.y,r.y,q.y,f,h,k);d.z=b(n.z,m.z,r.z,q.z,f,h,k);return d};this.getControlPointsArray=function(){var a,c,b=this.points.length,d=[];for(a=0;a<b;a++)c=this.points[a],d[a]=[c.x,c.y,c.z];return d};this.getLength=function(a){var c,b,d,e=c=c=0,g=new THREE.Vector3,f=new THREE.Vector3,h=[],k=0;h[0]=0;a||(a=100);b=this.points.length*a;g.copy(this.points[0]);for(a=1;a<b;a++)c=a/b,d=this.getPoint(c),f.copy(d),k+=f.distanceTo(g),
g.copy(d),c*=this.points.length-1,c=Math.floor(c),c!=e&&(h[c]=k,e=c);h[h.length]=k;return{chunks:h,total:k}};this.reparametrizeByArcLength=function(a){var c,b,d,e,g,f,h=[],k=new THREE.Vector3,m=this.getLength();h.push(k.copy(this.points[0]).clone());for(c=1;c<this.points.length;c++){b=m.chunks[c]-m.chunks[c-1];f=Math.ceil(a*b/m.total);e=(c-1)/(this.points.length-1);g=c/(this.points.length-1);for(b=1;b<f-1;b++)d=e+b*(1/f)*(g-e),d=this.getPoint(d),h.push(k.copy(d).clone());h.push(k.copy(this.points[c]).clone())}this.points=
h}};THREE.Edge=function(a,b,c,d){this.vertices=[a,b];this.vertexIndices=[c,d];this.faces=[];this.faceIndices=[]};THREE.Camera=function(){if(arguments.length)return console.warn("DEPRECATED: Camera() is now PerspectiveCamera() or OrthographicCamera()."),new THREE.PerspectiveCamera(arguments[0],arguments[1],arguments[2],arguments[3]);THREE.Object3D.call(this);this.matrixWorldInverse=new THREE.Matrix4;this.projectionMatrix=new THREE.Matrix4;this.projectionMatrixInverse=new THREE.Matrix4};
THREE.Camera.prototype=new THREE.Object3D;THREE.Camera.prototype.constructor=THREE.Camera;THREE.Camera.prototype.lookAt=function(a){this.matrix.lookAt(this.position,a,this.up);this.rotationAutoUpdate&&this.rotation.setRotationFromMatrix(this.matrix)};THREE.OrthographicCamera=function(a,b,c,d,e,g){THREE.Camera.call(this);this.left=a;this.right=b;this.top=c;this.bottom=d;this.near=e!==void 0?e:0.1;this.far=g!==void 0?g:2E3;this.updateProjectionMatrix()};THREE.OrthographicCamera.prototype=new THREE.Camera;
THREE.OrthographicCamera.prototype.constructor=THREE.OrthographicCamera;THREE.OrthographicCamera.prototype.updateProjectionMatrix=function(){this.projectionMatrix=THREE.Matrix4.makeOrtho(this.left,this.right,this.top,this.bottom,this.near,this.far)};THREE.PerspectiveCamera=function(a,b,c,d){THREE.Camera.call(this);this.fov=a!==void 0?a:50;this.aspect=b!==void 0?b:1;this.near=c!==void 0?c:0.1;this.far=d!==void 0?d:2E3;this.updateProjectionMatrix()};THREE.PerspectiveCamera.prototype=new THREE.Camera;
THREE.PerspectiveCamera.prototype.constructor=THREE.PerspectiveCamera;THREE.PerspectiveCamera.prototype.setLens=function(a,b){this.fov=2*Math.atan((b!==void 0?b:43.25)/(a*2));this.fov*=180/Math.PI;this.updateProjectionMatrix()};THREE.PerspectiveCamera.prototype.setViewOffset=function(a,b,c,d,e,g){this.fullWidth=a;this.fullHeight=b;this.x=c;this.y=d;this.width=e;this.height=g;this.updateProjectionMatrix()};
THREE.PerspectiveCamera.prototype.updateProjectionMatrix=function(){if(this.fullWidth){var a=this.fullWidth/this.fullHeight,b=Math.tan(this.fov*Math.PI/360)*this.near,c=-b,d=a*c,a=Math.abs(a*b-d),c=Math.abs(b-c);this.projectionMatrix=THREE.Matrix4.makeFrustum(d+this.x*a/this.fullWidth,d+(this.x+this.width)*a/this.fullWidth,b-(this.y+this.height)*c/this.fullHeight,b-this.y*c/this.fullHeight,this.near,this.far)}else this.projectionMatrix=THREE.Matrix4.makePerspective(this.fov,this.aspect,this.near,
this.far)};THREE.Light=function(a){THREE.Object3D.call(this);this.color=new THREE.Color(a)};THREE.Light.prototype=new THREE.Object3D;THREE.Light.prototype.constructor=THREE.Light;THREE.Light.prototype.supr=THREE.Object3D.prototype;THREE.AmbientLight=function(a){THREE.Light.call(this,a)};THREE.AmbientLight.prototype=new THREE.Light;THREE.AmbientLight.prototype.constructor=THREE.AmbientLight;
THREE.DirectionalLight=function(a,b,c){THREE.Light.call(this,a);this.position=new THREE.Vector3(0,1,0);this.intensity=b!==void 0?b:1;this.distance=c!==void 0?c:0};THREE.DirectionalLight.prototype=new THREE.Light;THREE.DirectionalLight.prototype.constructor=THREE.DirectionalLight;THREE.PointLight=function(a,b,c){THREE.Light.call(this,a);this.position=new THREE.Vector3(0,0,0);this.intensity=b!==void 0?b:1;this.distance=c!==void 0?c:0};THREE.PointLight.prototype=new THREE.Light;
THREE.PointLight.prototype.constructor=THREE.PointLight;THREE.SpotLight=function(a,b,c,d){THREE.Light.call(this,a);this.position=new THREE.Vector3(0,1,0);this.target=new THREE.Object3D;this.intensity=b!==void 0?b:1;this.distance=c!==void 0?c:0;this.castShadow=d!==void 0?d:!1};THREE.SpotLight.prototype=new THREE.Light;THREE.SpotLight.prototype.constructor=THREE.SpotLight;
THREE.Material=function(a){this.name="";this.id=THREE.MaterialCount++;a=a||{};this.opacity=a.opacity!==void 0?a.opacity:1;this.transparent=a.transparent!==void 0?a.transparent:!1;this.blending=a.blending!==void 0?a.blending:THREE.NormalBlending;this.depthTest=a.depthTest!==void 0?a.depthTest:!0;this.depthWrite=a.depthWrite!==void 0?a.depthWrite:!0;this.polygonOffset=a.polygonOffset!==void 0?a.polygonOffset:!1;this.polygonOffsetFactor=a.polygonOffsetFactor!==void 0?a.polygonOffsetFactor:0;this.polygonOffsetUnits=
a.polygonOffsetUnits!==void 0?a.polygonOffsetUnits:0;this.alphaTest=a.alphaTest!==void 0?a.alphaTest:0;this.overdraw=a.overdraw!==void 0?a.overdraw:!1};THREE.MaterialCount=0;THREE.NoShading=0;THREE.FlatShading=1;THREE.SmoothShading=2;THREE.NoColors=0;THREE.FaceColors=1;THREE.VertexColors=2;THREE.NormalBlending=0;THREE.AdditiveBlending=1;THREE.SubtractiveBlending=2;THREE.MultiplyBlending=3;THREE.AdditiveAlphaBlending=4;
THREE.LineBasicMaterial=function(a){THREE.Material.call(this,a);a=a||{};this.color=a.color!==void 0?new THREE.Color(a.color):new THREE.Color(16777215);this.linewidth=a.linewidth!==void 0?a.linewidth:1;this.linecap=a.linecap!==void 0?a.linecap:"round";this.linejoin=a.linejoin!==void 0?a.linejoin:"round";this.vertexColors=a.vertexColors?a.vertexColors:!1;this.fog=a.fog!==void 0?a.fog:!0};THREE.LineBasicMaterial.prototype=new THREE.Material;THREE.LineBasicMaterial.prototype.constructor=THREE.LineBasicMaterial;
THREE.MeshBasicMaterial=function(a){THREE.Material.call(this,a);a=a||{};this.color=a.color!==void 0?new THREE.Color(a.color):new THREE.Color(16777215);this.map=a.map!==void 0?a.map:null;this.lightMap=a.lightMap!==void 0?a.lightMap:null;this.envMap=a.envMap!==void 0?a.envMap:null;this.combine=a.combine!==void 0?a.combine:THREE.MultiplyOperation;this.reflectivity=a.reflectivity!==void 0?a.reflectivity:1;this.refractionRatio=a.refractionRatio!==void 0?a.refractionRatio:0.98;this.fog=a.fog!==void 0?a.fog:
!0;this.shading=a.shading!==void 0?a.shading:THREE.SmoothShading;this.wireframe=a.wireframe!==void 0?a.wireframe:!1;this.wireframeLinewidth=a.wireframeLinewidth!==void 0?a.wireframeLinewidth:1;this.wireframeLinecap=a.wireframeLinecap!==void 0?a.wireframeLinecap:"round";this.wireframeLinejoin=a.wireframeLinejoin!==void 0?a.wireframeLinejoin:"round";this.vertexColors=a.vertexColors!==void 0?a.vertexColors:!1;this.skinning=a.skinning!==void 0?a.skinning:!1;this.morphTargets=a.morphTargets!==void 0?a.morphTargets:
!1};THREE.MeshBasicMaterial.prototype=new THREE.Material;THREE.MeshBasicMaterial.prototype.constructor=THREE.MeshBasicMaterial;
THREE.MeshLambertMaterial=function(a){THREE.Material.call(this,a);a=a||{};this.color=a.color!==void 0?new THREE.Color(a.color):new THREE.Color(16777215);this.ambient=a.ambient!==void 0?new THREE.Color(a.ambient):new THREE.Color(328965);this.map=a.map!==void 0?a.map:null;this.lightMap=a.lightMap!==void 0?a.lightMap:null;this.envMap=a.envMap!==void 0?a.envMap:null;this.combine=a.combine!==void 0?a.combine:THREE.MultiplyOperation;this.reflectivity=a.reflectivity!==void 0?a.reflectivity:1;this.refractionRatio=
a.refractionRatio!==void 0?a.refractionRatio:0.98;this.fog=a.fog!==void 0?a.fog:!0;this.shading=a.shading!==void 0?a.shading:THREE.SmoothShading;this.wireframe=a.wireframe!==void 0?a.wireframe:!1;this.wireframeLinewidth=a.wireframeLinewidth!==void 0?a.wireframeLinewidth:1;this.wireframeLinecap=a.wireframeLinecap!==void 0?a.wireframeLinecap:"round";this.wireframeLinejoin=a.wireframeLinejoin!==void 0?a.wireframeLinejoin:"round";this.vertexColors=a.vertexColors!==void 0?a.vertexColors:!1;this.skinning=
a.skinning!==void 0?a.skinning:!1;this.morphTargets=a.morphTargets!==void 0?a.morphTargets:!1};THREE.MeshLambertMaterial.prototype=new THREE.Material;THREE.MeshLambertMaterial.prototype.constructor=THREE.MeshLambertMaterial;
THREE.MeshPhongMaterial=function(a){THREE.Material.call(this,a);a=a||{};this.color=a.color!==void 0?new THREE.Color(a.color):new THREE.Color(16777215);this.ambient=a.ambient!==void 0?new THREE.Color(a.ambient):new THREE.Color(328965);this.specular=a.specular!==void 0?new THREE.Color(a.specular):new THREE.Color(1118481);this.shininess=a.shininess!==void 0?a.shininess:30;this.metal=a.metal!==void 0?a.metal:!1;this.perPixel=a.perPixel!==void 0?a.perPixel:!1;this.map=a.map!==void 0?a.map:null;this.lightMap=
a.lightMap!==void 0?a.lightMap:null;this.envMap=a.envMap!==void 0?a.envMap:null;this.combine=a.combine!==void 0?a.combine:THREE.MultiplyOperation;this.reflectivity=a.reflectivity!==void 0?a.reflectivity:1;this.refractionRatio=a.refractionRatio!==void 0?a.refractionRatio:0.98;this.fog=a.fog!==void 0?a.fog:!0;this.shading=a.shading!==void 0?a.shading:THREE.SmoothShading;this.wireframe=a.wireframe!==void 0?a.wireframe:!1;this.wireframeLinewidth=a.wireframeLinewidth!==void 0?a.wireframeLinewidth:1;this.wireframeLinecap=
a.wireframeLinecap!==void 0?a.wireframeLinecap:"round";this.wireframeLinejoin=a.wireframeLinejoin!==void 0?a.wireframeLinejoin:"round";this.vertexColors=a.vertexColors!==void 0?a.vertexColors:!1;this.skinning=a.skinning!==void 0?a.skinning:!1;this.morphTargets=a.morphTargets!==void 0?a.morphTargets:!1};THREE.MeshPhongMaterial.prototype=new THREE.Material;THREE.MeshPhongMaterial.prototype.constructor=THREE.MeshPhongMaterial;
THREE.MeshDepthMaterial=function(a){THREE.Material.call(this,a);a=a||{};this.shading=a.shading!==void 0?a.shading:THREE.SmoothShading;this.wireframe=a.wireframe!==void 0?a.wireframe:!1;this.wireframeLinewidth=a.wireframeLinewidth!==void 0?a.wireframeLinewidth:1};THREE.MeshDepthMaterial.prototype=new THREE.Material;THREE.MeshDepthMaterial.prototype.constructor=THREE.MeshDepthMaterial;
THREE.MeshNormalMaterial=function(a){THREE.Material.call(this,a);a=a||{};this.shading=a.shading?a.shading:THREE.FlatShading;this.wireframe=a.wireframe?a.wireframe:!1;this.wireframeLinewidth=a.wireframeLinewidth?a.wireframeLinewidth:1};THREE.MeshNormalMaterial.prototype=new THREE.Material;THREE.MeshNormalMaterial.prototype.constructor=THREE.MeshNormalMaterial;THREE.MeshFaceMaterial=function(){};
THREE.MeshShaderMaterial=function(a){console.warn("DEPRECATED: MeshShaderMaterial() is now ShaderMaterial().");return new THREE.ShaderMaterial(a)};
THREE.ParticleBasicMaterial=function(a){THREE.Material.call(this,a);a=a||{};this.color=a.color!==void 0?new THREE.Color(a.color):new THREE.Color(16777215);this.map=a.map!==void 0?a.map:null;this.size=a.size!==void 0?a.size:1;this.sizeAttenuation=a.sizeAttenuation!==void 0?a.sizeAttenuation:!0;this.vertexColors=a.vertexColors!==void 0?a.vertexColors:!1;this.fog=a.fog!==void 0?a.fog:!0};THREE.ParticleBasicMaterial.prototype=new THREE.Material;THREE.ParticleBasicMaterial.prototype.constructor=THREE.ParticleBasicMaterial;
THREE.ParticleCanvasMaterial=function(a){THREE.Material.call(this,a);a=a||{};this.color=a.color!==void 0?new THREE.Color(a.color):new THREE.Color(16777215);this.program=a.program!==void 0?a.program:function(){}};THREE.ParticleCanvasMaterial.prototype=new THREE.Material;THREE.ParticleCanvasMaterial.prototype.constructor=THREE.ParticleCanvasMaterial;THREE.ParticleDOMMaterial=function(a){THREE.Material.call(this);this.domElement=a};
THREE.ShaderMaterial=function(a){THREE.Material.call(this,a);a=a||{};this.fragmentShader=a.fragmentShader!==void 0?a.fragmentShader:"void main() {}";this.vertexShader=a.vertexShader!==void 0?a.vertexShader:"void main() {}";this.uniforms=a.uniforms!==void 0?a.uniforms:{};this.attributes=a.attributes;this.shading=a.shading!==void 0?a.shading:THREE.SmoothShading;this.wireframe=a.wireframe!==void 0?a.wireframe:!1;this.wireframeLinewidth=a.wireframeLinewidth!==void 0?a.wireframeLinewidth:1;this.fog=a.fog!==
void 0?a.fog:!1;this.lights=a.lights!==void 0?a.lights:!1;this.vertexColors=a.vertexColors!==void 0?a.vertexColors:!1;this.skinning=a.skinning!==void 0?a.skinning:!1;this.morphTargets=a.morphTargets!==void 0?a.morphTargets:!1};THREE.ShaderMaterial.prototype=new THREE.Material;THREE.ShaderMaterial.prototype.constructor=THREE.ShaderMaterial;
THREE.Texture=function(a,b,c,d,e,g){this.id=THREE.TextureCount++;this.image=a;this.mapping=b!==void 0?b:new THREE.UVMapping;this.wrapS=c!==void 0?c:THREE.ClampToEdgeWrapping;this.wrapT=d!==void 0?d:THREE.ClampToEdgeWrapping;this.magFilter=e!==void 0?e:THREE.LinearFilter;this.minFilter=g!==void 0?g:THREE.LinearMipMapLinearFilter;this.offset=new THREE.Vector2(0,0);this.repeat=new THREE.Vector2(1,1);this.needsUpdate=!1;this.onUpdate=null};
THREE.Texture.prototype={constructor:THREE.Texture,clone:function(){var a=new THREE.Texture(this.image,this.mapping,this.wrapS,this.wrapT,this.magFilter,this.minFilter);a.offset.copy(this.offset);a.repeat.copy(this.repeat);return a}};THREE.TextureCount=0;THREE.MultiplyOperation=0;THREE.MixOperation=1;THREE.CubeReflectionMapping=function(){};THREE.CubeRefractionMapping=function(){};THREE.LatitudeReflectionMapping=function(){};THREE.LatitudeRefractionMapping=function(){};
THREE.SphericalReflectionMapping=function(){};THREE.SphericalRefractionMapping=function(){};THREE.UVMapping=function(){};THREE.RepeatWrapping=0;THREE.ClampToEdgeWrapping=1;THREE.MirroredRepeatWrapping=2;THREE.NearestFilter=3;THREE.NearestMipMapNearestFilter=4;THREE.NearestMipMapLinearFilter=5;THREE.LinearFilter=6;THREE.LinearMipMapNearestFilter=7;THREE.LinearMipMapLinearFilter=8;THREE.ByteType=9;THREE.UnsignedByteType=10;THREE.ShortType=11;THREE.UnsignedShortType=12;THREE.IntType=13;
THREE.UnsignedIntType=14;THREE.FloatType=15;THREE.AlphaFormat=16;THREE.RGBFormat=17;THREE.RGBAFormat=18;THREE.LuminanceFormat=19;THREE.LuminanceAlphaFormat=20;THREE.DataTexture=function(a,b,c,d,e,g,f,h,k){THREE.Texture.call(this,null,e,g,f,h,k);this.image={data:a,width:b,height:c};this.format=d!==void 0?d:THREE.RGBAFormat};THREE.DataTexture.prototype=new THREE.Texture;THREE.DataTexture.prototype.constructor=THREE.DataTexture;
THREE.DataTexture.prototype.clone=function(){var a=new THREE.DataTexture(this.data.slice(0),this.mapping,this.wrapS,this.wrapT,this.magFilter,this.minFilter);a.offset.copy(this.offset);a.repeat.copy(this.repeat);return a};THREE.Particle=function(a){THREE.Object3D.call(this);this.material=a};THREE.Particle.prototype=new THREE.Object3D;THREE.Particle.prototype.constructor=THREE.Particle;THREE.ParticleSystem=function(a,b){THREE.Object3D.call(this);this.geometry=a;this.material=b;this.sortParticles=!1};
THREE.ParticleSystem.prototype=new THREE.Object3D;THREE.ParticleSystem.prototype.constructor=THREE.ParticleSystem;THREE.Line=function(a,b,c){THREE.Object3D.call(this);this.geometry=a;this.material=b;this.type=c!==void 0?c:THREE.LineStrip;this.geometry&&(this.geometry.boundingSphere||this.geometry.computeBoundingSphere())};THREE.LineStrip=0;THREE.LinePieces=1;THREE.Line.prototype=new THREE.Object3D;THREE.Line.prototype.constructor=THREE.Line;
THREE.Mesh=function(a,b){THREE.Object3D.call(this);this.geometry=a;this.material=b;if(b instanceof Array)console.warn("DEPRECATED: Mesh material can no longer be an Array. Using material at index 0..."),this.material=b[0];if(this.geometry&&(this.geometry.boundingSphere||this.geometry.computeBoundingSphere(),this.boundRadius=a.boundingSphere.radius,this.geometry.morphTargets.length)){this.morphTargetBase=-1;this.morphTargetForcedOrder=[];this.morphTargetInfluences=[];this.morphTargetDictionary={};
for(var c=0;c<this.geometry.morphTargets.length;c++)this.morphTargetInfluences.push(0),this.morphTargetDictionary[this.geometry.morphTargets[c].name]=c}};THREE.Mesh.prototype=new THREE.Object3D;THREE.Mesh.prototype.constructor=THREE.Mesh;THREE.Mesh.prototype.supr=THREE.Object3D.prototype;
THREE.Mesh.prototype.getMorphTargetIndexByName=function(a){if(this.morphTargetDictionary[a]!==void 0)return this.morphTargetDictionary[a];console.log("THREE.Mesh.getMorphTargetIndexByName: morph target "+a+" does not exist. Returning 0.");return 0};THREE.Bone=function(a){THREE.Object3D.call(this);this.skin=a;this.skinMatrix=new THREE.Matrix4};THREE.Bone.prototype=new THREE.Object3D;THREE.Bone.prototype.constructor=THREE.Bone;THREE.Bone.prototype.supr=THREE.Object3D.prototype;
THREE.Bone.prototype.update=function(a,b){this.matrixAutoUpdate&&(b|=this.updateMatrix());if(b||this.matrixWorldNeedsUpdate)a?this.skinMatrix.multiply(a,this.matrix):this.skinMatrix.copy(this.matrix),this.matrixWorldNeedsUpdate=!1,b=!0;var c,d=this.children.length;for(c=0;c<d;c++)this.children[c].update(this.skinMatrix,b)};
THREE.SkinnedMesh=function(a,b){THREE.Mesh.call(this,a,b);this.identityMatrix=new THREE.Matrix4;this.bones=[];this.boneMatrices=[];var c,d,e,g,f,h;if(this.geometry.bones!==void 0){for(c=0;c<this.geometry.bones.length;c++)e=this.geometry.bones[c],g=e.pos,f=e.rotq,h=e.scl,d=this.addBone(),d.name=e.name,d.position.set(g[0],g[1],g[2]),d.quaternion.set(f[0],f[1],f[2],f[3]),d.useQuaternion=!0,h!==void 0?d.scale.set(h[0],h[1],h[2]):d.scale.set(1,1,1);for(c=0;c<this.bones.length;c++)e=this.geometry.bones[c],
d=this.bones[c],e.parent===-1?this.add(d):this.bones[e.parent].add(d);this.boneMatrices=new Float32Array(16*this.bones.length);this.pose()}};THREE.SkinnedMesh.prototype=new THREE.Mesh;THREE.SkinnedMesh.prototype.constructor=THREE.SkinnedMesh;THREE.SkinnedMesh.prototype.addBone=function(a){a===void 0&&(a=new THREE.Bone(this));this.bones.push(a);return a};
THREE.SkinnedMesh.prototype.updateMatrixWorld=function(a){this.matrixAutoUpdate&&this.updateMatrix();if(this.matrixWorldNeedsUpdate||a)this.parent?this.matrixWorld.multiply(this.parent.matrixWorld,this.matrix):this.matrixWorld.copy(this.matrix),this.matrixWorldNeedsUpdate=!1;for(var a=0,b=this.children.length;a<b;a++){var c=this.children[a];c instanceof THREE.Bone?c.update(this.identityMatrix,!1):c.updateMatrixWorld(!0)}for(var b=this.bones.length,c=this.bones,d=this.boneMatrices,a=0;a<b;a++)c[a].skinMatrix.flattenToArrayOffset(d,
a*16)};
THREE.SkinnedMesh.prototype.pose=function(){this.updateMatrixWorld(!0);for(var a,b=[],c=0;c<this.bones.length;c++){a=this.bones[c];var d=new THREE.Matrix4;d.getInverse(a.skinMatrix);b.push(d);a.skinMatrix.flattenToArrayOffset(this.boneMatrices,c*16)}if(this.geometry.skinVerticesA===void 0){this.geometry.skinVerticesA=[];this.geometry.skinVerticesB=[];for(a=0;a<this.geometry.skinIndices.length;a++){var c=this.geometry.vertices[a].position,e=this.geometry.skinIndices[a].x,g=this.geometry.skinIndices[a].y,d=
new THREE.Vector3(c.x,c.y,c.z);this.geometry.skinVerticesA.push(b[e].multiplyVector3(d));d=new THREE.Vector3(c.x,c.y,c.z);this.geometry.skinVerticesB.push(b[g].multiplyVector3(d));this.geometry.skinWeights[a].x+this.geometry.skinWeights[a].y!==1&&(c=(1-(this.geometry.skinWeights[a].x+this.geometry.skinWeights[a].y))*0.5,this.geometry.skinWeights[a].x+=c,this.geometry.skinWeights[a].y+=c)}}};
THREE.MorphAnimMesh=function(a,b){THREE.Mesh.call(this,a,b);this.duration=1E3;this.mirroredLoop=!1;this.currentKeyframe=this.lastKeyframe=this.time=0;this.direction=1;this.directionBackwards=!1};THREE.MorphAnimMesh.prototype=new THREE.Mesh;THREE.MorphAnimMesh.prototype.constructor=THREE.MorphAnimMesh;
THREE.MorphAnimMesh.prototype.updateAnimation=function(a){var b=this.duration/(this.geometry.morphTargets.length-1);this.time+=this.direction*a;if(this.mirroredLoop){if(this.time>this.duration||this.time<0){this.direction*=-1;if(this.time>this.duration)this.time=this.duration,this.directionBackwards=!0;if(this.time<0)this.time=0,this.directionBackwards=!1}}else this.time%=this.duration;a=THREE.Math.clamp(Math.floor(this.time/b),0,this.geometry.morphTargets.length-1);if(a!=this.currentKeyframe)this.morphTargetInfluences[this.lastKeyframe]=
0,this.morphTargetInfluences[this.currentKeyframe]=1,this.morphTargetInfluences[a]=0,this.lastKeyframe=this.currentKeyframe,this.currentKeyframe=a;b=this.time%b/b;this.directionBackwards&&(b=1-b);this.morphTargetInfluences[this.currentKeyframe]=b;this.morphTargetInfluences[this.lastKeyframe]=1-b};THREE.Ribbon=function(a,b){THREE.Object3D.call(this);this.geometry=a;this.material=b};THREE.Ribbon.prototype=new THREE.Object3D;THREE.Ribbon.prototype.constructor=THREE.Ribbon;
THREE.LOD=function(){THREE.Object3D.call(this);this.LODs=[]};THREE.LOD.prototype=new THREE.Object3D;THREE.LOD.prototype.constructor=THREE.LOD;THREE.LOD.prototype.supr=THREE.Object3D.prototype;THREE.LOD.prototype.addLevel=function(a,b){b===void 0&&(b=0);for(var b=Math.abs(b),c=0;c<this.LODs.length;c++)if(b<this.LODs[c].visibleAtDistance)break;this.LODs.splice(c,0,{visibleAtDistance:b,object3D:a});this.add(a)};
THREE.LOD.prototype.update=function(a){if(this.LODs.length>1){a.matrixWorldInverse.getInverse(a.matrixWorld);a=a.matrixWorldInverse;a=-(a.n31*this.position.x+a.n32*this.position.y+a.n33*this.position.z+a.n34);this.LODs[0].object3D.visible=!0;for(var b=1;b<this.LODs.length;b++)if(a>=this.LODs[b].visibleAtDistance)this.LODs[b-1].object3D.visible=!1,this.LODs[b].object3D.visible=!0;else break;for(;b<this.LODs.length;b++)this.LODs[b].object3D.visible=!1}};
THREE.Sprite=function(a){THREE.Object3D.call(this);this.color=a.color!==void 0?new THREE.Color(a.color):new THREE.Color(16777215);this.map=a.map instanceof THREE.Texture?a.map:THREE.ImageUtils.loadTexture(a.map);this.blending=a.blending!==void 0?a.blending:THREE.NormalBlending;this.useScreenCoordinates=a.useScreenCoordinates!==void 0?a.useScreenCoordinates:!0;this.mergeWith3D=a.mergeWith3D!==void 0?a.mergeWith3D:!this.useScreenCoordinates;this.affectedByDistance=a.affectedByDistance!==void 0?a.affectedByDistance:
!this.useScreenCoordinates;this.scaleByViewport=a.scaleByViewport!==void 0?a.scaleByViewport:!this.affectedByDistance;this.alignment=a.alignment instanceof THREE.Vector2?a.alignment:THREE.SpriteAlignment.center;this.rotation3d=this.rotation;this.rotation=0;this.opacity=1;this.uvOffset=new THREE.Vector2(0,0);this.uvScale=new THREE.Vector2(1,1)};THREE.Sprite.prototype=new THREE.Object3D;THREE.Sprite.prototype.constructor=THREE.Sprite;
THREE.Sprite.prototype.updateMatrix=function(){this.matrix.setPosition(this.position);this.rotation3d.set(0,0,this.rotation);this.matrix.setRotationFromEuler(this.rotation3d);if(this.scale.x!==1||this.scale.y!==1)this.matrix.scale(this.scale),this.boundRadiusScale=Math.max(this.scale.x,this.scale.y);this.matrixWorldNeedsUpdate=!0};THREE.SpriteAlignment={};THREE.SpriteAlignment.topLeft=new THREE.Vector2(1,-1);THREE.SpriteAlignment.topCenter=new THREE.Vector2(0,-1);
THREE.SpriteAlignment.topRight=new THREE.Vector2(-1,-1);THREE.SpriteAlignment.centerLeft=new THREE.Vector2(1,0);THREE.SpriteAlignment.center=new THREE.Vector2(0,0);THREE.SpriteAlignment.centerRight=new THREE.Vector2(-1,0);THREE.SpriteAlignment.bottomLeft=new THREE.Vector2(1,1);THREE.SpriteAlignment.bottomCenter=new THREE.Vector2(0,1);THREE.SpriteAlignment.bottomRight=new THREE.Vector2(-1,1);
THREE.PlaneGeometry=function(a,b,c,d){THREE.Geometry.call(this);for(var e=a/2,g=b/2,c=c||1,d=d||1,f=c+1,h=d+1,k=a/c,n=b/d,m=new THREE.Vector3(0,0,1),a=0;a<h;a++)for(b=0;b<f;b++)this.vertices.push(new THREE.Vertex(new THREE.Vector3(b*k-e,-(a*n-g),0)));for(a=0;a<d;a++)for(b=0;b<c;b++)e=new THREE.Face4(b+f*a,b+f*(a+1),b+1+f*(a+1),b+1+f*a),e.normal.copy(m),e.vertexNormals.push(m.clone(),m.clone(),m.clone(),m.clone()),this.faces.push(e),this.faceVertexUvs[0].push([new THREE.UV(b/c,a/d),new THREE.UV(b/
c,(a+1)/d),new THREE.UV((b+1)/c,(a+1)/d),new THREE.UV((b+1)/c,a/d)]);this.computeCentroids()};THREE.PlaneGeometry.prototype=new THREE.Geometry;THREE.PlaneGeometry.prototype.constructor=THREE.PlaneGeometry;THREE.Scene=function(){THREE.Object3D.call(this);this.overrideMaterial=this.fog=null;this.matrixAutoUpdate=!1;this.objects=[];this.lights=[];this.__objectsAdded=[];this.__objectsRemoved=[]};THREE.Scene.prototype=new THREE.Object3D;THREE.Scene.prototype.constructor=THREE.Scene;
THREE.Scene.prototype.addObject=function(a){if(a instanceof THREE.Light)this.lights.indexOf(a)===-1&&this.lights.push(a);else if(!(a instanceof THREE.Camera||a instanceof THREE.Bone)&&this.objects.indexOf(a)===-1){this.objects.push(a);this.__objectsAdded.push(a);var b=this.__objectsRemoved.indexOf(a);b!==-1&&this.__objectsRemoved.splice(b,1)}for(b=0;b<a.children.length;b++)this.addObject(a.children[b])};
THREE.Scene.prototype.removeObject=function(a){if(a instanceof THREE.Light){var b=this.lights.indexOf(a);b!==-1&&this.lights.splice(b,1)}else a instanceof THREE.Camera||(b=this.objects.indexOf(a),b!==-1&&(this.objects.splice(b,1),this.__objectsRemoved.push(a),b=this.__objectsAdded.indexOf(a),b!==-1&&this.__objectsAdded.splice(b,1)));for(b=0;b<a.children.length;b++)this.removeObject(a.children[b])};
THREE.Fog=function(a,b,c){this.color=new THREE.Color(a);this.near=b!==void 0?b:1;this.far=c!==void 0?c:1E3};THREE.FogExp2=function(a,b){this.color=new THREE.Color(a);this.density=b!==void 0?b:2.5E-4};
THREE.DOMRenderer=function(){THREE.Renderer.call(this);var a=null,b=new THREE.Projector,c,d,e,g;this.domElement=document.createElement("div");this.setSize=function(a,b){c=a;d=b;e=c/2;g=d/2};this.render=function(c,d){var k,n,m,r,q,o,t,p;a=b.projectScene(c,d);k=0;for(n=a.length;k<n;k++)if(q=a[k],q instanceof THREE.RenderableParticle){t=q.x*e+e;p=q.y*g+g;m=0;for(r=q.material.length;m<r;m++)if(o=q.material[m],o instanceof THREE.ParticleDOMMaterial)o=o.domElement,o.style.left=t+"px",o.style.top=p+"px"}}};
THREE.CanvasRenderer=function(a){function b(a){if(y!=a)p.globalAlpha=y=a}function c(a){if(w!=a){switch(a){case THREE.NormalBlending:p.globalCompositeOperation="source-over";break;case THREE.AdditiveBlending:p.globalCompositeOperation="lighter";break;case THREE.SubtractiveBlending:p.globalCompositeOperation="darker"}w=a}}function d(a){if(D!=a)p.strokeStyle=D=a}function e(a){if(H!=a)p.fillStyle=H=a}var g=this,f,h,k,n=new THREE.Projector,a=a||{},m=a.canvas!==void 0?a.canvas:document.createElement("canvas"),
r,q,o,t,p=m.getContext("2d"),s=new THREE.Color(0),v=0,y=1,w=0,D=null,H=null,C=null,z=null,A=null,x,M,u,G,T=new THREE.RenderableVertex,W=new THREE.RenderableVertex,N,R,Q,ca,K,J,L,O,U,da,Y,l,Z=new THREE.Color,X=new THREE.Color,fa=new THREE.Color,ia=new THREE.Color,ba=new THREE.Color,wa=[],ta=[],sa,pa,qa,ra,Fa,Ba,Ca,Da,I,aa,S=new THREE.Rectangle,ga=new THREE.Rectangle,ja=new THREE.Rectangle,P=!1,ea=new THREE.Color,na=new THREE.Color,oa=new THREE.Color,ha=new THREE.Vector3,$,za,xa,va,V,ya,a=16;$=document.createElement("canvas");
$.width=$.height=2;za=$.getContext("2d");za.fillStyle="rgba(0,0,0,1)";za.fillRect(0,0,2,2);xa=za.getImageData(0,0,2,2);va=xa.data;V=document.createElement("canvas");V.width=V.height=a;ya=V.getContext("2d");ya.translate(-a/2,-a/2);ya.scale(a,a);a--;this.domElement=m;this.sortElements=this.sortObjects=this.autoClear=!0;this.info={render:{vertices:0,faces:0}};this.setSize=function(a,c){r=a;q=c;o=Math.floor(r/2);t=Math.floor(q/2);m.width=r;m.height=q;S.set(-o,-t,o,t);ga.set(-o,-t,o,t);y=1;w=0;A=z=C=H=
D=null};this.setClearColor=function(a,c){s.copy(a);v=c;ga.set(-o,-t,o,t)};this.setClearColorHex=function(a,c){s.setHex(a);v=c;ga.set(-o,-t,o,t)};this.clear=function(){p.setTransform(1,0,0,-1,o,t);ga.isEmpty()||(ga.minSelf(S),ga.inflate(2),v<1&&p.clearRect(Math.floor(ga.getX()),Math.floor(ga.getY()),Math.floor(ga.getWidth()),Math.floor(ga.getHeight())),v>0&&(c(THREE.NormalBlending),b(1),e("rgba("+Math.floor(s.r*255)+","+Math.floor(s.g*255)+","+Math.floor(s.b*255)+","+v+")"),p.fillRect(Math.floor(ga.getX()),
Math.floor(ga.getY()),Math.floor(ga.getWidth()),Math.floor(ga.getHeight()))),ga.empty())};this.render=function(a,m){function q(a){var c,b,d,e;ea.setRGB(0,0,0);na.setRGB(0,0,0);oa.setRGB(0,0,0);c=0;for(b=a.length;c<b;c++)d=a[c],e=d.color,d instanceof THREE.AmbientLight?(ea.r+=e.r,ea.g+=e.g,ea.b+=e.b):d instanceof THREE.DirectionalLight?(na.r+=e.r,na.g+=e.g,na.b+=e.b):d instanceof THREE.PointLight&&(oa.r+=e.r,oa.g+=e.g,oa.b+=e.b)}function r(a,c,b,d){var e,g,f,l,h,k;e=0;for(g=a.length;e<g;e++)f=a[e],
l=f.color,f instanceof THREE.DirectionalLight?(h=f.matrixWorld.getPosition(),k=b.dot(h),k<=0||(k*=f.intensity,d.r+=l.r*k,d.g+=l.g*k,d.b+=l.b*k)):f instanceof THREE.PointLight&&(h=f.matrixWorld.getPosition(),k=b.dot(ha.sub(h,c).normalize()),k<=0||(k*=f.distance==0?1:1-Math.min(c.distanceTo(h)/f.distance,1),k!=0&&(k*=f.intensity,d.r+=l.r*k,d.g+=l.g*k,d.b+=l.b*k)))}function s(a,g,f){b(f.opacity);c(f.blending);var l,h,k,m,n,ka;if(f instanceof THREE.ParticleBasicMaterial){if(f.map)m=f.map.image,n=m.width>>
1,ka=m.height>>1,f=g.scale.x*o,k=g.scale.y*t,l=f*n,h=k*ka,ja.set(a.x-l,a.y-h,a.x+l,a.y+h),S.intersects(ja)&&(p.save(),p.translate(a.x,a.y),p.rotate(-g.rotation),p.scale(f,-k),p.translate(-n,-ka),p.drawImage(m,0,0),p.restore())}else f instanceof THREE.ParticleCanvasMaterial&&(l=g.scale.x*o,h=g.scale.y*t,ja.set(a.x-l,a.y-h,a.x+l,a.y+h),S.intersects(ja)&&(d(f.color.getContextStyle()),e(f.color.getContextStyle()),p.save(),p.translate(a.x,a.y),p.rotate(-g.rotation),p.scale(l,h),f.program(p),p.restore()))}
function v(a,e,g,f){b(f.opacity);c(f.blending);p.beginPath();p.moveTo(a.positionScreen.x,a.positionScreen.y);p.lineTo(e.positionScreen.x,e.positionScreen.y);p.closePath();if(f instanceof THREE.LineBasicMaterial){a=f.linewidth;if(C!=a)p.lineWidth=C=a;a=f.linecap;if(z!=a)p.lineCap=z=a;a=f.linejoin;if(A!=a)p.lineJoin=A=a;d(f.color.getContextStyle());p.stroke();ja.inflate(f.linewidth*2)}}function y(a,d,e,f,l,h,o,p){g.info.render.vertices+=3;g.info.render.faces++;b(p.opacity);c(p.blending);N=a.positionScreen.x;
R=a.positionScreen.y;Q=d.positionScreen.x;ca=d.positionScreen.y;K=e.positionScreen.x;J=e.positionScreen.y;Ja(N,R,Q,ca,K,J);if(p instanceof THREE.MeshBasicMaterial)if(p.map)p.map.mapping instanceof THREE.UVMapping&&(ra=o.uvs[0],D(N,R,Q,ca,K,J,ra[f].u,ra[f].v,ra[l].u,ra[l].v,ra[h].u,ra[h].v,p.map));else if(p.envMap){if(p.envMap.mapping instanceof THREE.SphericalReflectionMapping)a=m.matrixWorldInverse,ha.copy(o.vertexNormalsWorld[f]),Fa=(ha.x*a.n11+ha.y*a.n12+ha.z*a.n13)*0.5+0.5,Ba=-(ha.x*a.n21+ha.y*
a.n22+ha.z*a.n23)*0.5+0.5,ha.copy(o.vertexNormalsWorld[l]),Ca=(ha.x*a.n11+ha.y*a.n12+ha.z*a.n13)*0.5+0.5,Da=-(ha.x*a.n21+ha.y*a.n22+ha.z*a.n23)*0.5+0.5,ha.copy(o.vertexNormalsWorld[h]),I=(ha.x*a.n11+ha.y*a.n12+ha.z*a.n13)*0.5+0.5,aa=-(ha.x*a.n21+ha.y*a.n22+ha.z*a.n23)*0.5+0.5,D(N,R,Q,ca,K,J,Fa,Ba,Ca,Da,I,aa,p.envMap)}else p.wireframe?w(p.color,p.wireframeLinewidth,p.wireframeLinecap,p.wireframeLinejoin):Ea(p.color);else if(p instanceof THREE.MeshLambertMaterial)p.map&&!p.wireframe&&(p.map.mapping instanceof
THREE.UVMapping&&(ra=o.uvs[0],D(N,R,Q,ca,K,J,ra[f].u,ra[f].v,ra[l].u,ra[l].v,ra[h].u,ra[h].v,p.map)),c(THREE.SubtractiveBlending)),P?!p.wireframe&&p.shading==THREE.SmoothShading&&o.vertexNormalsWorld.length==3?(X.r=fa.r=ia.r=ea.r,X.g=fa.g=ia.g=ea.g,X.b=fa.b=ia.b=ea.b,r(k,o.v1.positionWorld,o.vertexNormalsWorld[0],X),r(k,o.v2.positionWorld,o.vertexNormalsWorld[1],fa),r(k,o.v3.positionWorld,o.vertexNormalsWorld[2],ia),X.r=Math.max(0,Math.min(p.color.r*X.r,1)),X.g=Math.max(0,Math.min(p.color.g*X.g,1)),
X.b=Math.max(0,Math.min(p.color.b*X.b,1)),fa.r=Math.max(0,Math.min(p.color.r*fa.r,1)),fa.g=Math.max(0,Math.min(p.color.g*fa.g,1)),fa.b=Math.max(0,Math.min(p.color.b*fa.b,1)),ia.r=Math.max(0,Math.min(p.color.r*ia.r,1)),ia.g=Math.max(0,Math.min(p.color.g*ia.g,1)),ia.b=Math.max(0,Math.min(p.color.b*ia.b,1)),ba.r=(fa.r+ia.r)*0.5,ba.g=(fa.g+ia.g)*0.5,ba.b=(fa.b+ia.b)*0.5,qa=Ka(X,fa,ia,ba),Ha(N,R,Q,ca,K,J,0,0,1,0,0,1,qa)):(Z.r=ea.r,Z.g=ea.g,Z.b=ea.b,r(k,o.centroidWorld,o.normalWorld,Z),Z.r=Math.max(0,Math.min(p.color.r*
Z.r,1)),Z.g=Math.max(0,Math.min(p.color.g*Z.g,1)),Z.b=Math.max(0,Math.min(p.color.b*Z.b,1)),p.wireframe?w(Z,p.wireframeLinewidth,p.wireframeLinecap,p.wireframeLinejoin):Ea(Z)):p.wireframe?w(p.color,p.wireframeLinewidth,p.wireframeLinecap,p.wireframeLinejoin):Ea(p.color);else if(p instanceof THREE.MeshDepthMaterial)sa=m.near,pa=m.far,X.r=X.g=X.b=1-H(a.positionScreen.z,sa,pa),fa.r=fa.g=fa.b=1-H(d.positionScreen.z,sa,pa),ia.r=ia.g=ia.b=1-H(e.positionScreen.z,sa,pa),ba.r=(fa.r+ia.r)*0.5,ba.g=(fa.g+ia.g)*
0.5,ba.b=(fa.b+ia.b)*0.5,qa=Ka(X,fa,ia,ba),Ha(N,R,Q,ca,K,J,0,0,1,0,0,1,qa);else if(p instanceof THREE.MeshNormalMaterial)Z.r=Ia(o.normalWorld.x),Z.g=Ia(o.normalWorld.y),Z.b=Ia(o.normalWorld.z),p.wireframe?w(Z,p.wireframeLinewidth,p.wireframeLinecap,p.wireframeLinejoin):Ea(Z)}function Oa(a,d,e,f,h,p,o,n,q){g.info.render.vertices+=4;g.info.render.faces++;b(n.opacity);c(n.blending);if(n.map||n.envMap)y(a,d,f,0,1,3,o,n,q),y(h,e,p,1,2,3,o,n,q);else if(N=a.positionScreen.x,R=a.positionScreen.y,Q=d.positionScreen.x,
ca=d.positionScreen.y,K=e.positionScreen.x,J=e.positionScreen.y,L=f.positionScreen.x,O=f.positionScreen.y,U=h.positionScreen.x,da=h.positionScreen.y,Y=p.positionScreen.x,l=p.positionScreen.y,n instanceof THREE.MeshBasicMaterial)La(N,R,Q,ca,K,J,L,O),n.wireframe?w(n.color,n.wireframeLinewidth,n.wireframeLinecap,n.wireframeLinejoin):Ea(n.color);else if(n instanceof THREE.MeshLambertMaterial)P?!n.wireframe&&n.shading==THREE.SmoothShading&&o.vertexNormalsWorld.length==4?(X.r=fa.r=ia.r=ba.r=ea.r,X.g=fa.g=
ia.g=ba.g=ea.g,X.b=fa.b=ia.b=ba.b=ea.b,r(k,o.v1.positionWorld,o.vertexNormalsWorld[0],X),r(k,o.v2.positionWorld,o.vertexNormalsWorld[1],fa),r(k,o.v4.positionWorld,o.vertexNormalsWorld[3],ia),r(k,o.v3.positionWorld,o.vertexNormalsWorld[2],ba),X.r=Math.max(0,Math.min(n.color.r*X.r,1)),X.g=Math.max(0,Math.min(n.color.g*X.g,1)),X.b=Math.max(0,Math.min(n.color.b*X.b,1)),fa.r=Math.max(0,Math.min(n.color.r*fa.r,1)),fa.g=Math.max(0,Math.min(n.color.g*fa.g,1)),fa.b=Math.max(0,Math.min(n.color.b*fa.b,1)),ia.r=
Math.max(0,Math.min(n.color.r*ia.r,1)),ia.g=Math.max(0,Math.min(n.color.g*ia.g,1)),ia.b=Math.max(0,Math.min(n.color.b*ia.b,1)),ba.r=Math.max(0,Math.min(n.color.r*ba.r,1)),ba.g=Math.max(0,Math.min(n.color.g*ba.g,1)),ba.b=Math.max(0,Math.min(n.color.b*ba.b,1)),qa=Ka(X,fa,ia,ba),Ja(N,R,Q,ca,L,O),Ha(N,R,Q,ca,L,O,0,0,1,0,0,1,qa),Ja(U,da,K,J,Y,l),Ha(U,da,K,J,Y,l,1,0,1,1,0,1,qa)):(Z.r=ea.r,Z.g=ea.g,Z.b=ea.b,r(k,o.centroidWorld,o.normalWorld,Z),Z.r=Math.max(0,Math.min(n.color.r*Z.r,1)),Z.g=Math.max(0,Math.min(n.color.g*
Z.g,1)),Z.b=Math.max(0,Math.min(n.color.b*Z.b,1)),La(N,R,Q,ca,K,J,L,O),n.wireframe?w(Z,n.wireframeLinewidth,n.wireframeLinecap,n.wireframeLinejoin):Ea(Z)):(La(N,R,Q,ca,K,J,L,O),n.wireframe?w(n.color,n.wireframeLinewidth,n.wireframeLinecap,n.wireframeLinejoin):Ea(n.color));else if(n instanceof THREE.MeshNormalMaterial)Z.r=Ia(o.normalWorld.x),Z.g=Ia(o.normalWorld.y),Z.b=Ia(o.normalWorld.z),La(N,R,Q,ca,K,J,L,O),n.wireframe?w(Z,n.wireframeLinewidth,n.wireframeLinecap,n.wireframeLinejoin):Ea(Z);else if(n instanceof
THREE.MeshDepthMaterial)sa=m.near,pa=m.far,X.r=X.g=X.b=1-H(a.positionScreen.z,sa,pa),fa.r=fa.g=fa.b=1-H(d.positionScreen.z,sa,pa),ia.r=ia.g=ia.b=1-H(f.positionScreen.z,sa,pa),ba.r=ba.g=ba.b=1-H(e.positionScreen.z,sa,pa),qa=Ka(X,fa,ia,ba),Ja(N,R,Q,ca,L,O),Ha(N,R,Q,ca,L,O,0,0,1,0,0,1,qa),Ja(U,da,K,J,Y,l),Ha(U,da,K,J,Y,l,1,0,1,1,0,1,qa)}function Ja(a,c,b,d,e,g){p.beginPath();p.moveTo(a,c);p.lineTo(b,d);p.lineTo(e,g);p.lineTo(a,c);p.closePath()}function La(a,c,b,d,e,g,f,l){p.beginPath();p.moveTo(a,c);
p.lineTo(b,d);p.lineTo(e,g);p.lineTo(f,l);p.lineTo(a,c);p.closePath()}function w(a,c,b,e){if(C!=c)p.lineWidth=C=c;if(z!=b)p.lineCap=z=b;if(A!=e)p.lineJoin=A=e;d(a.getContextStyle());p.stroke();ja.inflate(c*2)}function Ea(a){e(a.getContextStyle());p.fill()}function D(a,c,b,d,g,f,l,h,k,o,m,n,ka){if(ka.image.width!=0){if(ka.needsUpdate==!0||wa[ka.id]==void 0){var q=ka.wrapS==THREE.RepeatWrapping,r=ka.wrapT==THREE.RepeatWrapping;wa[ka.id]=p.createPattern(ka.image,q&&r?"repeat":q&&!r?"repeat-x":!q&&r?
"repeat-y":"no-repeat");ka.needsUpdate=!1}e(wa[ka.id]);var q=ka.offset.x/ka.repeat.x,r=ka.offset.y/ka.repeat.y,s=ka.image.width*ka.repeat.x,I=ka.image.height*ka.repeat.y,l=(l+q)*s,h=(h+r)*I,k=(k+q)*s,o=(o+r)*I,m=(m+q)*s,n=(n+r)*I;b-=a;d-=c;g-=a;f-=c;k-=l;o-=h;m-=l;n-=h;q=k*n-m*o;if(q==0){if(ta[ka.id]==void 0)c=document.createElement("canvas"),c.width=ka.image.width,c.height=ka.image.height,a=c.getContext("2d"),a.drawImage(ka.image,0,0),ta[ka.id]=a.getImageData(0,0,ka.image.width,ka.image.height).data,
delete c;c=ta[ka.id];l=(Math.floor(l)+Math.floor(h)*ka.image.width)*4;Z.setRGB(c[l]/255,c[l+1]/255,c[l+2]/255);Ea(Z)}else q=1/q,ka=(n*b-o*g)*q,o=(n*d-o*f)*q,b=(k*g-m*b)*q,d=(k*f-m*d)*q,a=a-ka*l-b*h,l=c-o*l-d*h,p.save(),p.transform(ka,o,b,d,a,l),p.fill(),p.restore()}}function Ha(a,c,b,d,e,g,f,l,h,k,o,m,n){var ka,q;ka=n.width-1;q=n.height-1;f*=ka;l*=q;h*=ka;k*=q;o*=ka;m*=q;b-=a;d-=c;e-=a;g-=c;h-=f;k-=l;o-=f;m-=l;q=1/(h*m-o*k);ka=(m*b-k*e)*q;k=(m*d-k*g)*q;b=(h*e-o*b)*q;d=(h*g-o*d)*q;a=a-ka*f-b*l;c=c-
k*f-d*l;p.save();p.transform(ka,k,b,d,a,c);p.clip();p.drawImage(n,0,0);p.restore()}function Ka(a,c,b,d){var e=~~(a.r*255),g=~~(a.g*255),a=~~(a.b*255),f=~~(c.r*255),l=~~(c.g*255),c=~~(c.b*255),h=~~(b.r*255),k=~~(b.g*255),b=~~(b.b*255),o=~~(d.r*255),m=~~(d.g*255),d=~~(d.b*255);va[0]=e<0?0:e>255?255:e;va[1]=g<0?0:g>255?255:g;va[2]=a<0?0:a>255?255:a;va[4]=f<0?0:f>255?255:f;va[5]=l<0?0:l>255?255:l;va[6]=c<0?0:c>255?255:c;va[8]=h<0?0:h>255?255:h;va[9]=k<0?0:k>255?255:k;va[10]=b<0?0:b>255?255:b;va[12]=o<
0?0:o>255?255:o;va[13]=m<0?0:m>255?255:m;va[14]=d<0?0:d>255?255:d;za.putImageData(xa,0,0);ya.drawImage($,0,0);return V}function H(a,c,b){a=(a-c)/(b-c);return a*a*(3-2*a)}function Ia(a){a=(a+1)*0.5;return a<0?0:a>1?1:a}function Ga(a,c){var b=c.x-a.x,d=c.y-a.y,e=b*b+d*d;e!=0&&(e=1/Math.sqrt(e),b*=e,d*=e,c.x+=b,c.y+=d,a.x-=b,a.y-=d)}var Ma,Na,ua,F;this.autoClear?this.clear():p.setTransform(1,0,0,-1,o,t);g.info.render.vertices=0;g.info.render.faces=0;f=n.projectScene(a,m,this.sortElements);h=f.elements;
k=f.lights;(P=k.length>0)&&q(k);Ma=0;for(Na=h.length;Ma<Na;Ma++)if(ua=h[Ma],F=ua.material,F=F instanceof THREE.MeshFaceMaterial?ua.faceMaterial:F,!(F==null||F.opacity==0)){ja.empty();if(ua instanceof THREE.RenderableParticle)x=ua,x.x*=o,x.y*=t,s(x,ua,F,a);else if(ua instanceof THREE.RenderableLine)x=ua.v1,M=ua.v2,x.positionScreen.x*=o,x.positionScreen.y*=t,M.positionScreen.x*=o,M.positionScreen.y*=t,ja.addPoint(x.positionScreen.x,x.positionScreen.y),ja.addPoint(M.positionScreen.x,M.positionScreen.y),
S.intersects(ja)&&v(x,M,ua,F,a);else if(ua instanceof THREE.RenderableFace3)x=ua.v1,M=ua.v2,u=ua.v3,x.positionScreen.x*=o,x.positionScreen.y*=t,M.positionScreen.x*=o,M.positionScreen.y*=t,u.positionScreen.x*=o,u.positionScreen.y*=t,F.overdraw&&(Ga(x.positionScreen,M.positionScreen),Ga(M.positionScreen,u.positionScreen),Ga(u.positionScreen,x.positionScreen)),ja.add3Points(x.positionScreen.x,x.positionScreen.y,M.positionScreen.x,M.positionScreen.y,u.positionScreen.x,u.positionScreen.y),S.intersects(ja)&&
y(x,M,u,0,1,2,ua,F,a);else if(ua instanceof THREE.RenderableFace4)x=ua.v1,M=ua.v2,u=ua.v3,G=ua.v4,x.positionScreen.x*=o,x.positionScreen.y*=t,M.positionScreen.x*=o,M.positionScreen.y*=t,u.positionScreen.x*=o,u.positionScreen.y*=t,G.positionScreen.x*=o,G.positionScreen.y*=t,T.positionScreen.copy(M.positionScreen),W.positionScreen.copy(G.positionScreen),F.overdraw&&(Ga(x.positionScreen,M.positionScreen),Ga(M.positionScreen,G.positionScreen),Ga(G.positionScreen,x.positionScreen),Ga(u.positionScreen,
T.positionScreen),Ga(u.positionScreen,W.positionScreen)),ja.addPoint(x.positionScreen.x,x.positionScreen.y),ja.addPoint(M.positionScreen.x,M.positionScreen.y),ja.addPoint(u.positionScreen.x,u.positionScreen.y),ja.addPoint(G.positionScreen.x,G.positionScreen.y),S.intersects(ja)&&Oa(x,M,u,G,T,W,ua,F,a);ga.addRectangle(ja)}p.setTransform(1,0,0,1,0,0)}};
THREE.SVGRenderer=function(){function a(a,c,b,d){var e,g,f,h,k,o;e=0;for(g=a.length;e<g;e++)f=a[e],h=f.color,f instanceof THREE.DirectionalLight?(k=f.matrixWorld.getPosition(),o=b.dot(k),o<=0||(o*=f.intensity,d.r+=h.r*o,d.g+=h.g*o,d.b+=h.b*o)):f instanceof THREE.PointLight&&(k=f.matrixWorld.getPosition(),o=b.dot(x.sub(k,c).normalize()),o<=0||(o*=f.distance==0?1:1-Math.min(c.distanceTo(k)/f.distance,1),o!=0&&(o*=f.intensity,d.r+=h.r*o,d.g+=h.g*o,d.b+=h.b*o)))}function b(a){M[a]==null&&(M[a]=document.createElementNS("http://www.w3.org/2000/svg",
"path"),N==0&&M[a].setAttribute("shape-rendering","crispEdges"));return M[a]}function c(a){a=(a+1)*0.5;return a<0?0:a>1?1:a}var d=this,e,g,f,h=new THREE.Projector,k=document.createElementNS("http://www.w3.org/2000/svg","svg"),n,m,r,q,o,t,p,s,v=new THREE.Rectangle,y=new THREE.Rectangle,w=!1,D=new THREE.Color,H=new THREE.Color,C=new THREE.Color,z=new THREE.Color,A,x=new THREE.Vector3,M=[],u=[],G,T,W,N=1;this.domElement=k;this.sortElements=this.sortObjects=this.autoClear=!0;this.info={render:{vertices:0,
faces:0}};this.setQuality=function(a){switch(a){case "high":N=1;break;case "low":N=0}};this.setSize=function(a,c){n=a;m=c;r=n/2;q=m/2;k.setAttribute("viewBox",-r+" "+-q+" "+n+" "+m);k.setAttribute("width",n);k.setAttribute("height",m);v.set(-r,-q,r,q)};this.clear=function(){for(;k.childNodes.length>0;)k.removeChild(k.childNodes[0])};this.render=function(m,n){var M,x,J,L;this.autoClear&&this.clear();d.info.render.vertices=0;d.info.render.faces=0;e=h.projectScene(m,n,this.sortElements);g=e.elements;
f=e.lights;W=T=0;if(w=f.length>0){H.setRGB(0,0,0);C.setRGB(0,0,0);z.setRGB(0,0,0);M=0;for(x=f.length;M<x;M++)L=f[M],J=L.color,L instanceof THREE.AmbientLight?(H.r+=J.r,H.g+=J.g,H.b+=J.b):L instanceof THREE.DirectionalLight?(C.r+=J.r,C.g+=J.g,C.b+=J.b):L instanceof THREE.PointLight&&(z.r+=J.r,z.g+=J.g,z.b+=J.b)}M=0;for(x=g.length;M<x;M++)if(J=g[M],L=J.material,L=L instanceof THREE.MeshFaceMaterial?J.faceMaterial:L,!(L==null||L.opacity==0))if(y.empty(),J instanceof THREE.RenderableParticle)o=J,o.x*=
r,o.y*=-q;else if(J instanceof THREE.RenderableLine){if(o=J.v1,t=J.v2,o.positionScreen.x*=r,o.positionScreen.y*=-q,t.positionScreen.x*=r,t.positionScreen.y*=-q,y.addPoint(o.positionScreen.x,o.positionScreen.y),y.addPoint(t.positionScreen.x,t.positionScreen.y),v.intersects(y)){J=o;var O=t,U=W++;u[U]==null&&(u[U]=document.createElementNS("http://www.w3.org/2000/svg","line"),N==0&&u[U].setAttribute("shape-rendering","crispEdges"));G=u[U];G.setAttribute("x1",J.positionScreen.x);G.setAttribute("y1",J.positionScreen.y);
G.setAttribute("x2",O.positionScreen.x);G.setAttribute("y2",O.positionScreen.y);L instanceof THREE.LineBasicMaterial&&(G.setAttribute("style","fill: none; stroke: "+L.color.getContextStyle()+"; stroke-width: "+L.linewidth+"; stroke-opacity: "+L.opacity+"; stroke-linecap: "+L.linecap+"; stroke-linejoin: "+L.linejoin),k.appendChild(G))}}else if(J instanceof THREE.RenderableFace3){if(o=J.v1,t=J.v2,p=J.v3,o.positionScreen.x*=r,o.positionScreen.y*=-q,t.positionScreen.x*=r,t.positionScreen.y*=-q,p.positionScreen.x*=
r,p.positionScreen.y*=-q,y.addPoint(o.positionScreen.x,o.positionScreen.y),y.addPoint(t.positionScreen.x,t.positionScreen.y),y.addPoint(p.positionScreen.x,p.positionScreen.y),v.intersects(y)){var O=o,U=t,da=p;d.info.render.vertices+=3;d.info.render.faces++;G=b(T++);G.setAttribute("d","M "+O.positionScreen.x+" "+O.positionScreen.y+" L "+U.positionScreen.x+" "+U.positionScreen.y+" L "+da.positionScreen.x+","+da.positionScreen.y+"z");L instanceof THREE.MeshBasicMaterial?D.copy(L.color):L instanceof THREE.MeshLambertMaterial?
w?(D.r=H.r,D.g=H.g,D.b=H.b,a(f,J.centroidWorld,J.normalWorld,D),D.r=Math.max(0,Math.min(L.color.r*D.r,1)),D.g=Math.max(0,Math.min(L.color.g*D.g,1)),D.b=Math.max(0,Math.min(L.color.b*D.b,1))):D.copy(L.color):L instanceof THREE.MeshDepthMaterial?(A=1-L.__2near/(L.__farPlusNear-J.z*L.__farMinusNear),D.setRGB(A,A,A)):L instanceof THREE.MeshNormalMaterial&&D.setRGB(c(J.normalWorld.x),c(J.normalWorld.y),c(J.normalWorld.z));L.wireframe?G.setAttribute("style","fill: none; stroke: "+D.getContextStyle()+"; stroke-width: "+
L.wireframeLinewidth+"; stroke-opacity: "+L.opacity+"; stroke-linecap: "+L.wireframeLinecap+"; stroke-linejoin: "+L.wireframeLinejoin):G.setAttribute("style","fill: "+D.getContextStyle()+"; fill-opacity: "+L.opacity);k.appendChild(G)}}else if(J instanceof THREE.RenderableFace4&&(o=J.v1,t=J.v2,p=J.v3,s=J.v4,o.positionScreen.x*=r,o.positionScreen.y*=-q,t.positionScreen.x*=r,t.positionScreen.y*=-q,p.positionScreen.x*=r,p.positionScreen.y*=-q,s.positionScreen.x*=r,s.positionScreen.y*=-q,y.addPoint(o.positionScreen.x,
o.positionScreen.y),y.addPoint(t.positionScreen.x,t.positionScreen.y),y.addPoint(p.positionScreen.x,p.positionScreen.y),y.addPoint(s.positionScreen.x,s.positionScreen.y),v.intersects(y))){var O=o,U=t,da=p,Y=s;d.info.render.vertices+=4;d.info.render.faces++;G=b(T++);G.setAttribute("d","M "+O.positionScreen.x+" "+O.positionScreen.y+" L "+U.positionScreen.x+" "+U.positionScreen.y+" L "+da.positionScreen.x+","+da.positionScreen.y+" L "+Y.positionScreen.x+","+Y.positionScreen.y+"z");L instanceof THREE.MeshBasicMaterial?
D.copy(L.color):L instanceof THREE.MeshLambertMaterial?w?(D.r=H.r,D.g=H.g,D.b=H.b,a(f,J.centroidWorld,J.normalWorld,D),D.r=Math.max(0,Math.min(L.color.r*D.r,1)),D.g=Math.max(0,Math.min(L.color.g*D.g,1)),D.b=Math.max(0,Math.min(L.color.b*D.b,1))):D.copy(L.color):L instanceof THREE.MeshDepthMaterial?(A=1-L.__2near/(L.__farPlusNear-J.z*L.__farMinusNear),D.setRGB(A,A,A)):L instanceof THREE.MeshNormalMaterial&&D.setRGB(c(J.normalWorld.x),c(J.normalWorld.y),c(J.normalWorld.z));L.wireframe?G.setAttribute("style",
"fill: none; stroke: "+D.getContextStyle()+"; stroke-width: "+L.wireframeLinewidth+"; stroke-opacity: "+L.opacity+"; stroke-linecap: "+L.wireframeLinecap+"; stroke-linejoin: "+L.wireframeLinejoin):G.setAttribute("style","fill: "+D.getContextStyle()+"; fill-opacity: "+L.opacity);k.appendChild(G)}}};
THREE.ShaderChunk={fog_pars_fragment:"#ifdef USE_FOG\nuniform vec3 fogColor;\n#ifdef FOG_EXP2\nuniform float fogDensity;\n#else\nuniform float fogNear;\nuniform float fogFar;\n#endif\n#endif",fog_fragment:"#ifdef USE_FOG\nfloat depth = gl_FragCoord.z / gl_FragCoord.w;\n#ifdef FOG_EXP2\nconst float LOG2 = 1.442695;\nfloat fogFactor = exp2( - fogDensity * fogDensity * depth * depth * LOG2 );\nfogFactor = 1.0 - clamp( fogFactor, 0.0, 1.0 );\n#else\nfloat fogFactor = smoothstep( fogNear, fogFar, depth );\n#endif\ngl_FragColor = mix( gl_FragColor, vec4( fogColor, gl_FragColor.w ), fogFactor );\n#endif",envmap_pars_fragment:"#ifdef USE_ENVMAP\nvarying vec3 vReflect;\nuniform float reflectivity;\nuniform samplerCube envMap;\nuniform float flipEnvMap;\nuniform int combine;\n#endif",
envmap_fragment:"#ifdef USE_ENVMAP\nvec4 cubeColor = textureCube( envMap, vec3( flipEnvMap * vReflect.x, vReflect.yz ) );\n#ifdef GAMMA_INPUT\ncubeColor.xyz *= cubeColor.xyz;\n#endif\nif ( combine == 1 ) {\ngl_FragColor.xyz = mix( gl_FragColor.xyz, cubeColor.xyz, reflectivity );\n} else {\ngl_FragColor.xyz = gl_FragColor.xyz * cubeColor.xyz;\n}\n#endif",envmap_pars_vertex:"#ifdef USE_ENVMAP\nvarying vec3 vReflect;\nuniform float refractionRatio;\nuniform bool useRefract;\n#endif",envmap_vertex:"#ifdef USE_ENVMAP\nvec4 mPosition = objectMatrix * vec4( position, 1.0 );\nvec3 nWorld = mat3( objectMatrix[ 0 ].xyz, objectMatrix[ 1 ].xyz, objectMatrix[ 2 ].xyz ) * normal;\nif ( useRefract ) {\nvReflect = refract( normalize( mPosition.xyz - cameraPosition ), normalize( nWorld.xyz ), refractionRatio );\n} else {\nvReflect = reflect( normalize( mPosition.xyz - cameraPosition ), normalize( nWorld.xyz ) );\n}\n#endif",
map_particle_pars_fragment:"#ifdef USE_MAP\nuniform sampler2D map;\n#endif",map_particle_fragment:"#ifdef USE_MAP\ngl_FragColor = gl_FragColor * texture2D( map, gl_PointCoord );\n#endif",map_pars_vertex:"#ifdef USE_MAP\nvarying vec2 vUv;\nuniform vec4 offsetRepeat;\n#endif",map_pars_fragment:"#ifdef USE_MAP\nvarying vec2 vUv;\nuniform sampler2D map;\n#endif",map_vertex:"#ifdef USE_MAP\nvUv = uv * offsetRepeat.zw + offsetRepeat.xy;\n#endif",map_fragment:"#ifdef USE_MAP\n#ifdef GAMMA_INPUT\nvec4 texelColor = texture2D( map, vUv );\ntexelColor.xyz *= texelColor.xyz;\ngl_FragColor = gl_FragColor * texelColor;\n#else\ngl_FragColor = gl_FragColor * texture2D( map, vUv );\n#endif\n#endif",
lightmap_pars_fragment:"#ifdef USE_LIGHTMAP\nvarying vec2 vUv2;\nuniform sampler2D lightMap;\n#endif",lightmap_pars_vertex:"#ifdef USE_LIGHTMAP\nvarying vec2 vUv2;\n#endif",lightmap_fragment:"#ifdef USE_LIGHTMAP\ngl_FragColor = gl_FragColor * texture2D( lightMap, vUv2 );\n#endif",lightmap_vertex:"#ifdef USE_LIGHTMAP\nvUv2 = uv2;\n#endif",lights_lambert_pars_vertex:"uniform vec3 ambient;\nuniform vec3 diffuse;\nuniform vec3 ambientLightColor;\n#if MAX_DIR_LIGHTS > 0\nuniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];\nuniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];\n#endif\n#if MAX_POINT_LIGHTS > 0\nuniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];\nuniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\nuniform float pointLightDistance[ MAX_POINT_LIGHTS ];\n#endif",
lights_lambert_vertex:"vLightWeighting = vec3( 0.0 );\n#if MAX_DIR_LIGHTS > 0\nfor( int i = 0; i < MAX_DIR_LIGHTS; i ++ ) {\nvec4 lDirection = viewMatrix * vec4( directionalLightDirection[ i ], 0.0 );\nfloat directionalLightWeighting = max( dot( transformedNormal, normalize( lDirection.xyz ) ), 0.0 );\nvLightWeighting += directionalLightColor[ i ] * directionalLightWeighting;\n}\n#endif\n#if MAX_POINT_LIGHTS > 0\nfor( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {\nvec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );\nvec3 lVector = lPosition.xyz - mvPosition.xyz;\nfloat lDistance = 1.0;\nif ( pointLightDistance[ i ] > 0.0 )\nlDistance = 1.0 - min( ( length( lVector ) / pointLightDistance[ i ] ), 1.0 );\nlVector = normalize( lVector );\nfloat pointLightWeighting = max( dot( transformedNormal, lVector ), 0.0 );\nvLightWeighting += pointLightColor[ i ] * pointLightWeighting * lDistance;\n}\n#endif\nvLightWeighting = vLightWeighting * diffuse + ambient * ambientLightColor;",
lights_phong_pars_vertex:"#if MAX_POINT_LIGHTS > 0\n#ifndef PHONG_PER_PIXEL\nuniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\nuniform float pointLightDistance[ MAX_POINT_LIGHTS ];\nvarying vec4 vPointLight[ MAX_POINT_LIGHTS ];\n#endif\n#endif",lights_phong_vertex:"#if MAX_POINT_LIGHTS > 0\n#ifndef PHONG_PER_PIXEL\nfor( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {\nvec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );\nvec3 lVector = lPosition.xyz - mvPosition.xyz;\nfloat lDistance = 1.0;\nif ( pointLightDistance[ i ] > 0.0 )\nlDistance = 1.0 - min( ( length( lVector ) / pointLightDistance[ i ] ), 1.0 );\nlVector = normalize( lVector );\nvPointLight[ i ] = vec4( lVector, lDistance );\n}\n#endif\n#endif",
lights_phong_pars_fragment:"uniform vec3 ambientLightColor;\n#if MAX_DIR_LIGHTS > 0\nuniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];\nuniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];\n#endif\n#if MAX_POINT_LIGHTS > 0\nuniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];\n#ifdef PHONG_PER_PIXEL\nuniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\nuniform float pointLightDistance[ MAX_POINT_LIGHTS ];\n#else\nvarying vec4 vPointLight[ MAX_POINT_LIGHTS ];\n#endif\n#endif\nvarying vec3 vViewPosition;\nvarying vec3 vNormal;",
lights_phong_fragment:"vec3 normal = normalize( vNormal );\nvec3 viewPosition = normalize( vViewPosition );\n#if MAX_POINT_LIGHTS > 0\nvec3 pointDiffuse  = vec3( 0.0 );\nvec3 pointSpecular = vec3( 0.0 );\nfor ( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {\n#ifdef PHONG_PER_PIXEL\nvec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );\nvec3 lVector = lPosition.xyz + vViewPosition.xyz;\nfloat lDistance = 1.0;\nif ( pointLightDistance[ i ] > 0.0 )\nlDistance = 1.0 - min( ( length( lVector ) / pointLightDistance[ i ] ), 1.0 );\nlVector = normalize( lVector );\n#else\nvec3 lVector = normalize( vPointLight[ i ].xyz );\nfloat lDistance = vPointLight[ i ].w;\n#endif\nvec3 pointHalfVector = normalize( lVector + viewPosition );\nfloat pointDistance = lDistance;\nfloat pointDotNormalHalf = max( dot( normal, pointHalfVector ), 0.0 );\nfloat pointDiffuseWeight = max( dot( normal, lVector ), 0.0 );\nfloat pointSpecularWeight = pow( pointDotNormalHalf, shininess );\n#ifdef PHYSICALLY_BASED_SHADING\nvec3 schlick = specular + vec3( 1.0 - specular ) * pow( dot( lVector, pointHalfVector ), 5.0 );\npointSpecular += schlick * pointLightColor[ i ] * pointSpecularWeight * pointDiffuseWeight * pointDistance;\n#else\npointSpecular += specular * pointLightColor[ i ] * pointSpecularWeight * pointDiffuseWeight * pointDistance;\n#endif\npointDiffuse  += diffuse * pointLightColor[ i ] * pointDiffuseWeight * pointDistance;\n}\n#endif\n#if MAX_DIR_LIGHTS > 0\nvec3 dirDiffuse  = vec3( 0.0 );\nvec3 dirSpecular = vec3( 0.0 );\nfor( int i = 0; i < MAX_DIR_LIGHTS; i ++ ) {\nvec4 lDirection = viewMatrix * vec4( directionalLightDirection[ i ], 0.0 );\nvec3 dirVector = normalize( lDirection.xyz );\nvec3 dirHalfVector = normalize( lDirection.xyz + viewPosition );\nfloat dirDotNormalHalf = max( dot( normal, dirHalfVector ), 0.0 );\nfloat dirDiffuseWeight = max( dot( normal, dirVector ), 0.0 );\nfloat dirSpecularWeight = pow( dirDotNormalHalf, shininess );\n#ifdef PHYSICALLY_BASED_SHADING\nvec3 schlick = specular + vec3( 1.0 - specular ) * pow( dot( dirVector, dirHalfVector ), 5.0 );\ndirSpecular += schlick * directionalLightColor[ i ] * dirSpecularWeight * dirDiffuseWeight;\n#else\ndirSpecular += specular * directionalLightColor[ i ] * dirSpecularWeight * dirDiffuseWeight;\n#endif\ndirDiffuse  += diffuse * directionalLightColor[ i ] * dirDiffuseWeight;\n}\n#endif\nvec3 totalDiffuse = vec3( 0.0 );\nvec3 totalSpecular = vec3( 0.0 );\n#if MAX_DIR_LIGHTS > 0\ntotalDiffuse += dirDiffuse;\ntotalSpecular += dirSpecular;\n#endif\n#if MAX_POINT_LIGHTS > 0\ntotalDiffuse += pointDiffuse;\ntotalSpecular += pointSpecular;\n#endif\n#ifdef METAL\ngl_FragColor.xyz = gl_FragColor.xyz * ( totalDiffuse + ambientLightColor * ambient + totalSpecular );\n#else\ngl_FragColor.xyz = gl_FragColor.xyz * ( totalDiffuse + ambientLightColor * ambient ) + totalSpecular;\n#endif",
color_pars_fragment:"#ifdef USE_COLOR\nvarying vec3 vColor;\n#endif",color_fragment:"#ifdef USE_COLOR\ngl_FragColor = gl_FragColor * vec4( vColor, opacity );\n#endif",color_pars_vertex:"#ifdef USE_COLOR\nvarying vec3 vColor;\n#endif",color_vertex:"#ifdef USE_COLOR\n#ifdef GAMMA_INPUT\nvColor = color * color;\n#else\nvColor = color;\n#endif\n#endif",skinning_pars_vertex:"#ifdef USE_SKINNING\nuniform mat4 boneGlobalMatrices[ MAX_BONES ];\n#endif",skinning_vertex:"#ifdef USE_SKINNING\ngl_Position  = ( boneGlobalMatrices[ int( skinIndex.x ) ] * skinVertexA ) * skinWeight.x;\ngl_Position += ( boneGlobalMatrices[ int( skinIndex.y ) ] * skinVertexB ) * skinWeight.y;\ngl_Position  = projectionMatrix * viewMatrix * objectMatrix * gl_Position;\n#endif",
morphtarget_pars_vertex:"#ifdef USE_MORPHTARGETS\nuniform float morphTargetInfluences[ 8 ];\n#endif",morphtarget_vertex:"#ifdef USE_MORPHTARGETS\nvec3 morphed = vec3( 0.0, 0.0, 0.0 );\nmorphed += ( morphTarget0 - position ) * morphTargetInfluences[ 0 ];\nmorphed += ( morphTarget1 - position ) * morphTargetInfluences[ 1 ];\nmorphed += ( morphTarget2 - position ) * morphTargetInfluences[ 2 ];\nmorphed += ( morphTarget3 - position ) * morphTargetInfluences[ 3 ];\nmorphed += ( morphTarget4 - position ) * morphTargetInfluences[ 4 ];\nmorphed += ( morphTarget5 - position ) * morphTargetInfluences[ 5 ];\nmorphed += ( morphTarget6 - position ) * morphTargetInfluences[ 6 ];\nmorphed += ( morphTarget7 - position ) * morphTargetInfluences[ 7 ];\nmorphed += position;\ngl_Position = projectionMatrix * modelViewMatrix * vec4( morphed, 1.0 );\n#endif",
default_vertex:"#ifndef USE_MORPHTARGETS\n#ifndef USE_SKINNING\ngl_Position = projectionMatrix * mvPosition;\n#endif\n#endif",shadowmap_pars_fragment:"#ifdef USE_SHADOWMAP\nuniform sampler2D shadowMap[ MAX_SHADOWS ];\nuniform float shadowDarkness;\nuniform float shadowBias;\nvarying vec4 vShadowCoord[ MAX_SHADOWS ];\nfloat unpackDepth( const in vec4 rgba_depth ) {\nconst vec4 bit_shift = vec4( 1.0 / ( 256.0 * 256.0 * 256.0 ), 1.0 / ( 256.0 * 256.0 ), 1.0 / 256.0, 1.0 );\nfloat depth = dot( rgba_depth, bit_shift );\nreturn depth;\n}\n#endif",
shadowmap_fragment:"#ifdef USE_SHADOWMAP\n#ifdef SHADOWMAP_SOFT\nconst float xPixelOffset = 1.0 / SHADOWMAP_WIDTH;\nconst float yPixelOffset = 1.0 / SHADOWMAP_HEIGHT;\n#endif\nvec3 shadowColor = vec3( 1.0 );\nfor( int i = 0; i < MAX_SHADOWS; i ++ ) {\nvec3 shadowCoord = vShadowCoord[ i ].xyz / vShadowCoord[ i ].w;\nshadowCoord.z += shadowBias;\nif ( shadowCoord.x >= 0.0 && shadowCoord.x <= 1.0 && shadowCoord.y >= 0.0 && shadowCoord.y <= 1.0 ) {\n#ifdef SHADOWMAP_SOFT\nfloat shadow = 0.0;\nfor ( float y = -1.25; y <= 1.25; y += 1.25 )\nfor ( float x = -1.25; x <= 1.25; x += 1.25 ) {\nvec4 rgbaDepth = texture2D( shadowMap[ i ], vec2( x * xPixelOffset, y * yPixelOffset ) + shadowCoord.xy );\nfloat fDepth = unpackDepth( rgbaDepth );\nif ( fDepth < shadowCoord.z )\nshadow += 1.0;\n}\nshadow /= 9.0;\nshadowColor = shadowColor * vec3( ( 1.0 - shadowDarkness * shadow ) );\n#else\nvec4 rgbaDepth = texture2D( shadowMap[ i ], shadowCoord.xy );\nfloat fDepth = unpackDepth( rgbaDepth );\nif ( fDepth < shadowCoord.z )\nshadowColor = shadowColor * vec3( shadowDarkness );\n#endif\n}\n}\n#ifdef GAMMA_OUTPUT\nshadowColor *= shadowColor;\n#endif\ngl_FragColor.xyz = gl_FragColor.xyz * shadowColor;\n#endif",
shadowmap_pars_vertex:"#ifdef USE_SHADOWMAP\nvarying vec4 vShadowCoord[ MAX_SHADOWS ];\nuniform mat4 shadowMatrix[ MAX_SHADOWS ];\n#endif",shadowmap_vertex:"#ifdef USE_SHADOWMAP\nfor( int i = 0; i < MAX_SHADOWS; i ++ ) {\nvShadowCoord[ i ] = shadowMatrix[ i ] * objectMatrix * vec4( position, 1.0 );\n}\n#endif",alphatest_fragment:"#ifdef ALPHATEST\nif ( gl_FragColor.a < ALPHATEST ) discard;\n#endif",linear_to_gamma_fragment:"#ifdef GAMMA_OUTPUT\ngl_FragColor.xyz = sqrt( gl_FragColor.xyz );\n#endif"};
THREE.UniformsUtils={merge:function(a){var b,c,d,e={};for(b=0;b<a.length;b++)for(c in d=this.clone(a[b]),d)e[c]=d[c];return e},clone:function(a){var b,c,d,e={};for(b in a)for(c in e[b]={},a[b])d=a[b][c],e[b][c]=d instanceof THREE.Color||d instanceof THREE.Vector2||d instanceof THREE.Vector3||d instanceof THREE.Vector4||d instanceof THREE.Matrix4||d instanceof THREE.Texture?d.clone():d instanceof Array?d.slice():d;return e}};
THREE.UniformsLib={common:{diffuse:{type:"c",value:new THREE.Color(15658734)},opacity:{type:"f",value:1},map:{type:"t",value:0,texture:null},offsetRepeat:{type:"v4",value:new THREE.Vector4(0,0,1,1)},lightMap:{type:"t",value:2,texture:null},envMap:{type:"t",value:1,texture:null},flipEnvMap:{type:"f",value:-1},useRefract:{type:"i",value:0},reflectivity:{type:"f",value:1},refractionRatio:{type:"f",value:0.98},combine:{type:"i",value:0},morphTargetInfluences:{type:"f",value:0}},fog:{fogDensity:{type:"f",
value:2.5E-4},fogNear:{type:"f",value:1},fogFar:{type:"f",value:2E3},fogColor:{type:"c",value:new THREE.Color(16777215)}},lights:{ambientLightColor:{type:"fv",value:[]},directionalLightDirection:{type:"fv",value:[]},directionalLightColor:{type:"fv",value:[]},pointLightColor:{type:"fv",value:[]},pointLightPosition:{type:"fv",value:[]},pointLightDistance:{type:"fv1",value:[]}},particle:{psColor:{type:"c",value:new THREE.Color(15658734)},opacity:{type:"f",value:1},size:{type:"f",value:1},scale:{type:"f",
value:1},map:{type:"t",value:0,texture:null},fogDensity:{type:"f",value:2.5E-4},fogNear:{type:"f",value:1},fogFar:{type:"f",value:2E3},fogColor:{type:"c",value:new THREE.Color(16777215)}},shadowmap:{shadowMap:{type:"tv",value:6,texture:[]},shadowMatrix:{type:"m4v",value:[]},shadowBias:{type:"f",value:0.0039},shadowDarkness:{type:"f",value:0.2}}};
THREE.ShaderLib={sprite:{vertexShader:"uniform int useScreenCoordinates;\nuniform int affectedByDistance;\nuniform vec3 screenPosition;\nuniform mat4 modelViewMatrix;\nuniform mat4 projectionMatrix;\nuniform float rotation;\nuniform vec2 scale;\nuniform vec2 alignment;\nuniform vec2 uvOffset;\nuniform vec2 uvScale;\nattribute vec2 position;\nattribute vec2 uv;\nvarying vec2 vUV;\nvoid main() {\nvUV = uvOffset + uv * uvScale;\nvec2 alignedPosition = position + alignment;\nvec2 rotatedPosition;\nrotatedPosition.x = ( cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y ) * scale.x;\nrotatedPosition.y = ( sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y ) * scale.y;\nvec4 finalPosition;\nif( useScreenCoordinates != 0 ) {\nfinalPosition = vec4( screenPosition.xy + rotatedPosition, screenPosition.z, 1.0 );\n} else {\nfinalPosition = projectionMatrix * modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );\nfinalPosition.xy += rotatedPosition * ( affectedByDistance == 1 ? 1.0 : finalPosition.z );\n}\ngl_Position = finalPosition;\n}",fragmentShader:"#ifdef GL_ES\nprecision highp float;\n#endif\nuniform vec3 color;\nuniform sampler2D map;\nuniform float opacity;\nvarying vec2 vUV;\nvoid main() {\nvec4 texture = texture2D( map, vUV );\ngl_FragColor = vec4( color * texture.xyz, texture.a * opacity );\n}"},
depth:{uniforms:{mNear:{type:"f",value:1},mFar:{type:"f",value:2E3},opacity:{type:"f",value:1}},vertexShader:"void main() {\ngl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",fragmentShader:"uniform float mNear;\nuniform float mFar;\nuniform float opacity;\nvoid main() {\nfloat depth = gl_FragCoord.z / gl_FragCoord.w;\nfloat color = 1.0 - smoothstep( mNear, mFar, depth );\ngl_FragColor = vec4( vec3( color ), opacity );\n}"},normal:{uniforms:{opacity:{type:"f",value:1}},
vertexShader:"varying vec3 vNormal;\nvoid main() {\nvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\nvNormal = normalize( normalMatrix * normal );\ngl_Position = projectionMatrix * mvPosition;\n}",fragmentShader:"uniform float opacity;\nvarying vec3 vNormal;\nvoid main() {\ngl_FragColor = vec4( 0.5 * normalize( vNormal ) + 0.5, opacity );\n}"},basic:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.common,THREE.UniformsLib.fog,THREE.UniformsLib.shadowmap]),vertexShader:[THREE.ShaderChunk.map_pars_vertex,
THREE.ShaderChunk.lightmap_pars_vertex,THREE.ShaderChunk.envmap_pars_vertex,THREE.ShaderChunk.color_pars_vertex,THREE.ShaderChunk.skinning_pars_vertex,THREE.ShaderChunk.morphtarget_pars_vertex,THREE.ShaderChunk.shadowmap_pars_vertex,"void main() {\nvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );",THREE.ShaderChunk.map_vertex,THREE.ShaderChunk.lightmap_vertex,THREE.ShaderChunk.envmap_vertex,THREE.ShaderChunk.color_vertex,THREE.ShaderChunk.skinning_vertex,THREE.ShaderChunk.morphtarget_vertex,
THREE.ShaderChunk.default_vertex,THREE.ShaderChunk.shadowmap_vertex,"}"].join("\n"),fragmentShader:["uniform vec3 diffuse;\nuniform float opacity;",THREE.ShaderChunk.color_pars_fragment,THREE.ShaderChunk.map_pars_fragment,THREE.ShaderChunk.lightmap_pars_fragment,THREE.ShaderChunk.envmap_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,THREE.ShaderChunk.shadowmap_pars_fragment,"void main() {\ngl_FragColor = vec4( diffuse, opacity );",THREE.ShaderChunk.map_fragment,THREE.ShaderChunk.alphatest_fragment,
THREE.ShaderChunk.lightmap_fragment,THREE.ShaderChunk.color_fragment,THREE.ShaderChunk.envmap_fragment,THREE.ShaderChunk.shadowmap_fragment,THREE.ShaderChunk.linear_to_gamma_fragment,THREE.ShaderChunk.fog_fragment,"}"].join("\n")},lambert:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.common,THREE.UniformsLib.fog,THREE.UniformsLib.lights,THREE.UniformsLib.shadowmap,{ambient:{type:"c",value:new THREE.Color(328965)}}]),vertexShader:["varying vec3 vLightWeighting;",THREE.ShaderChunk.map_pars_vertex,
THREE.ShaderChunk.lightmap_pars_vertex,THREE.ShaderChunk.envmap_pars_vertex,THREE.ShaderChunk.lights_lambert_pars_vertex,THREE.ShaderChunk.color_pars_vertex,THREE.ShaderChunk.skinning_pars_vertex,THREE.ShaderChunk.morphtarget_pars_vertex,THREE.ShaderChunk.shadowmap_pars_vertex,"void main() {\nvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );",THREE.ShaderChunk.map_vertex,THREE.ShaderChunk.lightmap_vertex,THREE.ShaderChunk.envmap_vertex,THREE.ShaderChunk.color_vertex,"vec3 transformedNormal = normalize( normalMatrix * normal );",
THREE.ShaderChunk.lights_lambert_vertex,THREE.ShaderChunk.skinning_vertex,THREE.ShaderChunk.morphtarget_vertex,THREE.ShaderChunk.default_vertex,THREE.ShaderChunk.shadowmap_vertex,"}"].join("\n"),fragmentShader:["uniform float opacity;\nvarying vec3 vLightWeighting;",THREE.ShaderChunk.color_pars_fragment,THREE.ShaderChunk.map_pars_fragment,THREE.ShaderChunk.lightmap_pars_fragment,THREE.ShaderChunk.envmap_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,THREE.ShaderChunk.shadowmap_pars_fragment,"void main() {\ngl_FragColor = vec4( vec3 ( 1.0 ), opacity );",
THREE.ShaderChunk.map_fragment,THREE.ShaderChunk.alphatest_fragment,"gl_FragColor.xyz = gl_FragColor.xyz * vLightWeighting;",THREE.ShaderChunk.lightmap_fragment,THREE.ShaderChunk.color_fragment,THREE.ShaderChunk.envmap_fragment,THREE.ShaderChunk.shadowmap_fragment,THREE.ShaderChunk.linear_to_gamma_fragment,THREE.ShaderChunk.fog_fragment,"}"].join("\n")},phong:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.common,THREE.UniformsLib.fog,THREE.UniformsLib.lights,THREE.UniformsLib.shadowmap,{ambient:{type:"c",
value:new THREE.Color(328965)},specular:{type:"c",value:new THREE.Color(1118481)},shininess:{type:"f",value:30}}]),vertexShader:["varying vec3 vViewPosition;\nvarying vec3 vNormal;",THREE.ShaderChunk.map_pars_vertex,THREE.ShaderChunk.lightmap_pars_vertex,THREE.ShaderChunk.envmap_pars_vertex,THREE.ShaderChunk.lights_phong_pars_vertex,THREE.ShaderChunk.color_pars_vertex,THREE.ShaderChunk.skinning_pars_vertex,THREE.ShaderChunk.morphtarget_pars_vertex,THREE.ShaderChunk.shadowmap_pars_vertex,"void main() {\nvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );",
THREE.ShaderChunk.map_vertex,THREE.ShaderChunk.lightmap_vertex,THREE.ShaderChunk.envmap_vertex,THREE.ShaderChunk.color_vertex,"#ifndef USE_ENVMAP\nvec4 mPosition = objectMatrix * vec4( position, 1.0 );\n#endif\nvViewPosition = -mvPosition.xyz;\nvec3 transformedNormal = normalMatrix * normal;\nvNormal = transformedNormal;",THREE.ShaderChunk.lights_phong_vertex,THREE.ShaderChunk.skinning_vertex,THREE.ShaderChunk.morphtarget_vertex,THREE.ShaderChunk.default_vertex,THREE.ShaderChunk.shadowmap_vertex,
"}"].join("\n"),fragmentShader:["uniform vec3 diffuse;\nuniform float opacity;\nuniform vec3 ambient;\nuniform vec3 specular;\nuniform float shininess;",THREE.ShaderChunk.color_pars_fragment,THREE.ShaderChunk.map_pars_fragment,THREE.ShaderChunk.lightmap_pars_fragment,THREE.ShaderChunk.envmap_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,THREE.ShaderChunk.lights_phong_pars_fragment,THREE.ShaderChunk.shadowmap_pars_fragment,"void main() {\ngl_FragColor = vec4( vec3 ( 1.0 ), opacity );",THREE.ShaderChunk.map_fragment,
THREE.ShaderChunk.alphatest_fragment,THREE.ShaderChunk.lights_phong_fragment,THREE.ShaderChunk.lightmap_fragment,THREE.ShaderChunk.color_fragment,THREE.ShaderChunk.envmap_fragment,THREE.ShaderChunk.shadowmap_fragment,THREE.ShaderChunk.linear_to_gamma_fragment,THREE.ShaderChunk.fog_fragment,"}"].join("\n")},particle_basic:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.particle,THREE.UniformsLib.shadowmap]),vertexShader:["uniform float size;\nuniform float scale;",THREE.ShaderChunk.color_pars_vertex,
THREE.ShaderChunk.shadowmap_pars_vertex,"void main() {",THREE.ShaderChunk.color_vertex,"vec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\n#ifdef USE_SIZEATTENUATION\ngl_PointSize = size * ( scale / length( mvPosition.xyz ) );\n#else\ngl_PointSize = size;\n#endif\ngl_Position = projectionMatrix * mvPosition;",THREE.ShaderChunk.shadowmap_vertex,"}"].join("\n"),fragmentShader:["uniform vec3 psColor;\nuniform float opacity;",THREE.ShaderChunk.color_pars_fragment,THREE.ShaderChunk.map_particle_pars_fragment,
THREE.ShaderChunk.fog_pars_fragment,THREE.ShaderChunk.shadowmap_pars_fragment,"void main() {\ngl_FragColor = vec4( psColor, opacity );",THREE.ShaderChunk.map_particle_fragment,THREE.ShaderChunk.alphatest_fragment,THREE.ShaderChunk.color_fragment,THREE.ShaderChunk.shadowmap_fragment,THREE.ShaderChunk.fog_fragment,"}"].join("\n")},depthRGBA:{uniforms:{},vertexShader:[THREE.ShaderChunk.morphtarget_pars_vertex,"void main() {\nvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );",THREE.ShaderChunk.morphtarget_vertex,
THREE.ShaderChunk.default_vertex,"}"].join("\n"),fragmentShader:"vec4 pack_depth( const in float depth ) {\nconst vec4 bit_shift = vec4( 256.0 * 256.0 * 256.0, 256.0 * 256.0, 256.0, 1.0 );\nconst vec4 bit_mask  = vec4( 0.0, 1.0 / 256.0, 1.0 / 256.0, 1.0 / 256.0 );\nvec4 res = fract( depth * bit_shift );\nres -= res.xxyz * bit_mask;\nreturn res;\n}\nvoid main() {\ngl_FragData[ 0 ] = pack_depth( gl_FragCoord.z );\n}"}};
THREE.WebGLRenderer=function(a){function b(a,c){var b=a.vertices.length,d=c.material;if(d.attributes){if(a.__webglCustomAttributesList===void 0)a.__webglCustomAttributesList=[];for(var e in d.attributes){var f=d.attributes[e];if(!f.__webglInitialized||f.createUniqueBuffers){f.__webglInitialized=!0;var g=1;f.type==="v2"?g=2:f.type==="v3"?g=3:f.type==="v4"?g=4:f.type==="c"&&(g=3);f.size=g;f.array=new Float32Array(b*g);f.buffer=l.createBuffer();f.buffer.belongsToAttribute=e;f.needsUpdate=!0}a.__webglCustomAttributesList.push(f)}}}
function c(a,c){if(a.material&&!(a.material instanceof THREE.MeshFaceMaterial))return a.material;else if(c.materialIndex>=0)return a.geometry.materials[c.materialIndex]}function d(a){if(a instanceof THREE.MeshBasicMaterial&&!a.envMap||a instanceof THREE.MeshDepthMaterial)return!1;return a&&a.shading!==void 0&&a.shading===THREE.SmoothShading?THREE.SmoothShading:THREE.FlatShading}function e(a){if(a.vertexColors)return a.vertexColors;return!1}function g(a){if(a.map||a.lightMap||a instanceof THREE.ShaderMaterial)return!0;
return!1}function f(a,c,b){var d,e,f,g,h=a.vertices;g=h.length;var k=a.colors,o=k.length,m=a.__vertexArray,p=a.__colorArray,n=a.__sortArray,q=a.__dirtyVertices,r=a.__dirtyColors,s=a.__webglCustomAttributesList;if(b.sortParticles){P.multiplySelf(b.matrixWorld);for(d=0;d<g;d++)e=h[d].position,oa.copy(e),P.multiplyVector3(oa),n[d]=[oa.z,d];n.sort(function(a,c){return c[0]-a[0]});for(d=0;d<g;d++)e=h[n[d][1]].position,f=d*3,m[f]=e.x,m[f+1]=e.y,m[f+2]=e.z;for(d=0;d<o;d++)f=d*3,e=k[n[d][1]],p[f]=e.r,p[f+
1]=e.g,p[f+2]=e.b;if(s){k=0;for(o=s.length;k<o;k++)if(h=s[k],h.boundTo===void 0||h.boundTo==="vertices")if(f=0,e=h.value.length,h.size===1)for(d=0;d<e;d++)g=n[d][1],h.array[d]=h.value[g];else if(h.size===2)for(d=0;d<e;d++)g=n[d][1],g=h.value[g],h.array[f]=g.x,h.array[f+1]=g.y,f+=2;else if(h.size===3)if(h.type==="c")for(d=0;d<e;d++)g=n[d][1],g=h.value[g],h.array[f]=g.r,h.array[f+1]=g.g,h.array[f+2]=g.b,f+=3;else for(d=0;d<e;d++)g=n[d][1],g=h.value[g],h.array[f]=g.x,h.array[f+1]=g.y,h.array[f+2]=g.z,
f+=3;else if(h.size===4)for(d=0;d<e;d++)g=n[d][1],g=h.value[g],h.array[f]=g.x,h.array[f+1]=g.y,h.array[f+2]=g.z,h.array[f+3]=g.w,f+=4}}else{if(q)for(d=0;d<g;d++)e=h[d].position,f=d*3,m[f]=e.x,m[f+1]=e.y,m[f+2]=e.z;if(r)for(d=0;d<o;d++)e=k[d],f=d*3,p[f]=e.r,p[f+1]=e.g,p[f+2]=e.b;if(s){k=0;for(o=s.length;k<o;k++)if(h=s[k],h.needsUpdate&&(h.boundTo===void 0||h.boundTo==="vertices"))if(e=h.value.length,f=0,h.size===1)for(d=0;d<e;d++)h.array[d]=h.value[d];else if(h.size===2)for(d=0;d<e;d++)g=h.value[d],
h.array[f]=g.x,h.array[f+1]=g.y,f+=2;else if(h.size===3)if(h.type==="c")for(d=0;d<e;d++)g=h.value[d],h.array[f]=g.r,h.array[f+1]=g.g,h.array[f+2]=g.b,f+=3;else for(d=0;d<e;d++)g=h.value[d],h.array[f]=g.x,h.array[f+1]=g.y,h.array[f+2]=g.z,f+=3;else if(h.size===4)for(d=0;d<e;d++)g=h.value[d],h.array[f]=g.x,h.array[f+1]=g.y,h.array[f+2]=g.z,h.array[f+3]=g.w,f+=4}}if(q||b.sortParticles)l.bindBuffer(l.ARRAY_BUFFER,a.__webglVertexBuffer),l.bufferData(l.ARRAY_BUFFER,m,c);if(r||b.sortParticles)l.bindBuffer(l.ARRAY_BUFFER,
a.__webglColorBuffer),l.bufferData(l.ARRAY_BUFFER,p,c);if(s){k=0;for(o=s.length;k<o;k++)if(h=s[k],h.needsUpdate||b.sortParticles)l.bindBuffer(l.ARRAY_BUFFER,h.buffer),l.bufferData(l.ARRAY_BUFFER,h.array,c)}}function h(a,c,b){if(!a.__webglVertexBuffer)a.__webglVertexBuffer=l.createBuffer();if(!a.__webglNormalBuffer)a.__webglNormalBuffer=l.createBuffer();a.hasPos&&(l.bindBuffer(l.ARRAY_BUFFER,a.__webglVertexBuffer),l.bufferData(l.ARRAY_BUFFER,a.positionArray,l.DYNAMIC_DRAW),l.enableVertexAttribArray(c.attributes.position),
l.vertexAttribPointer(c.attributes.position,3,l.FLOAT,!1,0,0));if(a.hasNormal){l.bindBuffer(l.ARRAY_BUFFER,a.__webglNormalBuffer);if(b===THREE.FlatShading){var d,e,f,g,h,k,o,m,p,n,q=a.count*3;for(n=0;n<q;n+=9)b=a.normalArray,d=b[n],e=b[n+1],f=b[n+2],g=b[n+3],k=b[n+4],m=b[n+5],h=b[n+6],o=b[n+7],p=b[n+8],d=(d+g+h)/3,e=(e+k+o)/3,f=(f+m+p)/3,b[n]=d,b[n+1]=e,b[n+2]=f,b[n+3]=d,b[n+4]=e,b[n+5]=f,b[n+6]=d,b[n+7]=e,b[n+8]=f}l.bufferData(l.ARRAY_BUFFER,a.normalArray,l.DYNAMIC_DRAW);l.enableVertexAttribArray(c.attributes.normal);
l.vertexAttribPointer(c.attributes.normal,3,l.FLOAT,!1,0,0)}l.drawArrays(l.TRIANGLES,0,a.count);a.count=0}function k(a,c,b,d,e,f){if(d.opacity!==0){var g,h,b=w(a,c,b,d,f),c=b.attributes,a=!1,b=e.id*16777215+b.id*2+(d.wireframe?1:0);b!==ba&&(ba=b,a=!0);if(!d.morphTargets&&c.position>=0)a&&(l.bindBuffer(l.ARRAY_BUFFER,e.__webglVertexBuffer),l.vertexAttribPointer(c.position,3,l.FLOAT,!1,0,0));else if(f.morphTargetBase){b=d.program.attributes;f.morphTargetBase!==-1?(l.bindBuffer(l.ARRAY_BUFFER,e.__webglMorphTargetsBuffers[f.morphTargetBase]),
l.vertexAttribPointer(b.position,3,l.FLOAT,!1,0,0)):b.position>=0&&(l.bindBuffer(l.ARRAY_BUFFER,e.__webglVertexBuffer),l.vertexAttribPointer(b.position,3,l.FLOAT,!1,0,0));if(f.morphTargetForcedOrder.length){g=0;var k=f.morphTargetForcedOrder;for(h=f.morphTargetInfluences;g<d.numSupportedMorphTargets&&g<k.length;)l.bindBuffer(l.ARRAY_BUFFER,e.__webglMorphTargetsBuffers[k[g]]),l.vertexAttribPointer(b["morphTarget"+g],3,l.FLOAT,!1,0,0),f.__webglMorphTargetInfluences[g]=h[k[g]],g++}else{var k=[],o=-1,
m=0;h=f.morphTargetInfluences;var n,p=h.length;g=0;for(f.morphTargetBase!==-1&&(k[f.morphTargetBase]=!0);g<d.numSupportedMorphTargets;){for(n=0;n<p;n++)!k[n]&&h[n]>o&&(m=n,o=h[m]);l.bindBuffer(l.ARRAY_BUFFER,e.__webglMorphTargetsBuffers[m]);l.vertexAttribPointer(b["morphTarget"+g],3,l.FLOAT,!1,0,0);f.__webglMorphTargetInfluences[g]=o;k[m]=1;o=-1;g++}}d.program.uniforms.morphTargetInfluences!==null&&l.uniform1fv(d.program.uniforms.morphTargetInfluences,f.__webglMorphTargetInfluences)}if(a){if(e.__webglCustomAttributesList){g=
0;for(h=e.__webglCustomAttributesList.length;g<h;g++)b=e.__webglCustomAttributesList[g],c[b.buffer.belongsToAttribute]>=0&&(l.bindBuffer(l.ARRAY_BUFFER,b.buffer),l.vertexAttribPointer(c[b.buffer.belongsToAttribute],b.size,l.FLOAT,!1,0,0))}c.color>=0&&(l.bindBuffer(l.ARRAY_BUFFER,e.__webglColorBuffer),l.vertexAttribPointer(c.color,3,l.FLOAT,!1,0,0));c.normal>=0&&(l.bindBuffer(l.ARRAY_BUFFER,e.__webglNormalBuffer),l.vertexAttribPointer(c.normal,3,l.FLOAT,!1,0,0));c.tangent>=0&&(l.bindBuffer(l.ARRAY_BUFFER,
e.__webglTangentBuffer),l.vertexAttribPointer(c.tangent,4,l.FLOAT,!1,0,0));c.uv>=0&&(e.__webglUVBuffer?(l.bindBuffer(l.ARRAY_BUFFER,e.__webglUVBuffer),l.vertexAttribPointer(c.uv,2,l.FLOAT,!1,0,0),l.enableVertexAttribArray(c.uv)):l.disableVertexAttribArray(c.uv));c.uv2>=0&&(e.__webglUV2Buffer?(l.bindBuffer(l.ARRAY_BUFFER,e.__webglUV2Buffer),l.vertexAttribPointer(c.uv2,2,l.FLOAT,!1,0,0),l.enableVertexAttribArray(c.uv2)):l.disableVertexAttribArray(c.uv2));d.skinning&&c.skinVertexA>=0&&c.skinVertexB>=
0&&c.skinIndex>=0&&c.skinWeight>=0&&(l.bindBuffer(l.ARRAY_BUFFER,e.__webglSkinVertexABuffer),l.vertexAttribPointer(c.skinVertexA,4,l.FLOAT,!1,0,0),l.bindBuffer(l.ARRAY_BUFFER,e.__webglSkinVertexBBuffer),l.vertexAttribPointer(c.skinVertexB,4,l.FLOAT,!1,0,0),l.bindBuffer(l.ARRAY_BUFFER,e.__webglSkinIndicesBuffer),l.vertexAttribPointer(c.skinIndex,4,l.FLOAT,!1,0,0),l.bindBuffer(l.ARRAY_BUFFER,e.__webglSkinWeightsBuffer),l.vertexAttribPointer(c.skinWeight,4,l.FLOAT,!1,0,0))}f instanceof THREE.Mesh?(d.wireframe?
(d=d.wireframeLinewidth,d!==Da&&(l.lineWidth(d),Da=d),a&&l.bindBuffer(l.ELEMENT_ARRAY_BUFFER,e.__webglLineBuffer),l.drawElements(l.LINES,e.__webglLineCount,l.UNSIGNED_SHORT,0)):(a&&l.bindBuffer(l.ELEMENT_ARRAY_BUFFER,e.__webglFaceBuffer),l.drawElements(l.TRIANGLES,e.__webglFaceCount,l.UNSIGNED_SHORT,0)),Y.info.render.calls++,Y.info.render.vertices+=e.__webglFaceCount,Y.info.render.faces+=e.__webglFaceCount/3):f instanceof THREE.Line?(f=f.type===THREE.LineStrip?l.LINE_STRIP:l.LINES,d=d.linewidth,d!==
Da&&(l.lineWidth(d),Da=d),l.drawArrays(f,0,e.__webglLineCount),Y.info.render.calls++):f instanceof THREE.ParticleSystem?(l.drawArrays(l.POINTS,0,e.__webglParticleCount),Y.info.render.calls++):f instanceof THREE.Ribbon&&(l.drawArrays(l.TRIANGLE_STRIP,0,e.__webglVertexCount),Y.info.render.calls++)}}function n(a){ja[0].set(a.n41-a.n11,a.n42-a.n12,a.n43-a.n13,a.n44-a.n14);ja[1].set(a.n41+a.n11,a.n42+a.n12,a.n43+a.n13,a.n44+a.n14);ja[2].set(a.n41+a.n21,a.n42+a.n22,a.n43+a.n23,a.n44+a.n24);ja[3].set(a.n41-
a.n21,a.n42-a.n22,a.n43-a.n23,a.n44-a.n24);ja[4].set(a.n41-a.n31,a.n42-a.n32,a.n43-a.n33,a.n44-a.n34);ja[5].set(a.n41+a.n31,a.n42+a.n32,a.n43+a.n33,a.n44+a.n34);for(var c,a=0;a<6;a++)c=ja[a],c.divideScalar(Math.sqrt(c.x*c.x+c.y*c.y+c.z*c.z))}function m(a){for(var c=a.matrixWorld,b=-a.geometry.boundingSphere.radius*Math.max(a.scale.x,Math.max(a.scale.y,a.scale.z)),d=0;d<6;d++)if(a=ja[d].x*c.n14+ja[d].y*c.n24+ja[d].z*c.n34+ja[d].w,a<=b)return!1;return!0}function r(a,c){return c.z-a.z}function q(a){var c,
b,d,e,f,g,o,p,q=0,r=a.lights;$||($=new THREE.PerspectiveCamera(Y.shadowCameraFov,Y.shadowMapWidth/Y.shadowMapHeight,Y.shadowCameraNear,Y.shadowCameraFar));c=0;for(b=r.length;c<b;c++)if(p=r[c],p.castShadow&&p instanceof THREE.SpotLight){ia=-1;Y.shadowMap[q]||(Y.shadowMap[q]=new THREE.WebGLRenderTarget(Y.shadowMapWidth,Y.shadowMapHeight,{minFilter:THREE.LinearFilter,magFilter:THREE.LinearFilter,format:THREE.RGBAFormat}),za[q]=new THREE.Matrix4);d=Y.shadowMap[q];e=za[q];$.position.copy(p.position);$.lookAt(p.target.position);
$.parent==null&&(console.warn("Camera is not on the Scene. Adding it..."),a.add($),this.autoUpdateScene&&a.updateMatrixWorld());$.matrixWorldInverse.getInverse($.matrixWorld);e.set(0.5,0,0,0.5,0,0.5,0,0.5,0,0,0.5,0.5,0,0,0,1);e.multiplySelf($.projectionMatrix);e.multiplySelf($.matrixWorldInverse);$.matrixWorldInverse.flattenToArray(na);$.projectionMatrix.flattenToArray(ea);P.multiply($.projectionMatrix,$.matrixWorldInverse);n(P);W(d);l.clearColor(1,1,1,1);Y.clear();l.clearColor(O.r,O.g,O.b,U);e=a.__webglObjects.length;
for(d=0;d<e;d++)if(g=a.__webglObjects[d],p=g.object,g.render=!1,p.visible&&p.castShadow&&(!(p instanceof THREE.Mesh)||!p.frustumCulled||m(p)))p.matrixWorld.flattenToArray(p._objectMatrixArray),D(p,$,!1),g.render=!0;C(!0);x(THREE.NormalBlending);for(d=0;d<e;d++)if(g=a.__webglObjects[d],g.render)p=g.object,g=g.buffer,H(p),o=p.customDepthMaterial?p.customDepthMaterial:p.geometry.morphTargets.length?va:xa,k($,r,null,o,g,p);e=a.__webglObjectsImmediate.length;for(d=0;d<e;d++)g=a.__webglObjectsImmediate[d],
p=g.object,p.visible&&p.castShadow&&(p.matrixAutoUpdate&&p.matrixWorld.flattenToArray(p._objectMatrixArray),ba=-1,D(p,$,!1),H(p),f=w($,r,null,xa,p),p.immediateRenderCallback?p.immediateRenderCallback(f,l,ja):p.render(function(a){h(a,f,xa.shading)}));q++}}function o(a,c,b,d,e,f,g,h){var l,o,p,m;c?(o=a.length-1,m=c=-1):(o=0,c=a.length,m=1);for(var n=o;n!==c;n+=m)if(l=a[n],l.render){o=l.object;p=l.buffer;if(h)l=h;else{l=l[b];if(!l)continue;g&&x(l.blending);C(l.depthTest);z(l.depthWrite);A(l.polygonOffset,
l.polygonOffsetFactor,l.polygonOffsetUnits)}H(o);k(d,e,f,l,p,o)}}function t(a,c,b,d,e,f,g){for(var k,o,p,m,n=0,q=a.length;n<q;n++)if(k=a[n],o=k.object,o.visible){ba=-1;if(g)p=g;else{p=k[c];if(!p)continue;f&&x(p.blending);C(p.depthTest);z(p.depthWrite);A(p.polygonOffset,p.polygonOffsetFactor,p.polygonOffsetUnits)}H(o);m=w(b,d,e,p,o);o.immediateRenderCallback?o.immediateRenderCallback(m,l,ja):o.render(function(a){h(a,m,p.shading)})}}function p(a,c,b){a.push({buffer:c,object:b,opaque:null,transparent:null})}
function s(a){for(var c in a.attributes)if(a.attributes[c].needsUpdate)return!0;return!1}function v(a){for(var c in a.attributes)a.attributes[c].needsUpdate=!1}function y(a,c){for(var b=a.length-1;b>=0;b--)a[b].object===c&&a.splice(b,1)}function w(a,c,b,d,e){d.program||Y.initMaterial(d,c,b,e);if(d.morphTargets&&!e.__webglMorphTargetInfluences){e.__webglMorphTargetInfluences=new Float32Array(Y.maxMorphTargets);for(var f=0,g=Y.maxMorphTargets;f<g;f++)e.__webglMorphTargetInfluences[f]=0}var h=!1,f=d.program,
g=f.uniforms,k=d.uniforms;f!==X&&(l.useProgram(f),X=f,h=!0);if(d.id!==ia)ia=d.id,h=!0;if(h){l.uniformMatrix4fv(g.projectionMatrix,!1,ea);if(b&&d.fog)if(k.fogColor.value=b.color,b instanceof THREE.Fog)k.fogNear.value=b.near,k.fogFar.value=b.far;else if(b instanceof THREE.FogExp2)k.fogDensity.value=b.density;if(d instanceof THREE.MeshPhongMaterial||d instanceof THREE.MeshLambertMaterial||d.lights){for(var o,p,m=0,n=0,q=0,r,s,I,t=ha,v=t.directional.colors,S=t.directional.positions,aa=t.point.colors,
y=t.point.positions,w=t.point.distances,M=0,ga=0,b=o=I=0,h=c.length;b<h;b++)if(o=c[b],p=o.color,r=o.position,s=o.intensity,I=o.distance,o instanceof THREE.AmbientLight)Y.gammaInput?(m+=p.r*p.r,n+=p.g*p.g,q+=p.b*p.b):(m+=p.r,n+=p.g,q+=p.b);else if(o instanceof THREE.DirectionalLight)I=M*3,Y.gammaInput?(v[I]=p.r*p.r*s*s,v[I+1]=p.g*p.g*s*s,v[I+2]=p.b*p.b*s*s):(v[I]=p.r*s,v[I+1]=p.g*s,v[I+2]=p.b*s),S[I]=r.x,S[I+1]=r.y,S[I+2]=r.z,M+=1;else if(o instanceof THREE.SpotLight)I=M*3,Y.gammaInput?(v[I]=p.r*p.r*
s*s,v[I+1]=p.g*p.g*s*s,v[I+2]=p.b*p.b*s*s):(v[I]=p.r*s,v[I+1]=p.g*s,v[I+2]=p.b*s),p=1/r.length(),S[I]=r.x*p,S[I+1]=r.y*p,S[I+2]=r.z*p,M+=1;else if(o instanceof THREE.PointLight)o=ga*3,Y.gammaInput?(aa[o]=p.r*p.r*s*s,aa[o+1]=p.g*p.g*s*s,aa[o+2]=p.b*p.b*s*s):(aa[o]=p.r*s,aa[o+1]=p.g*s,aa[o+2]=p.b*s),y[o]=r.x,y[o+1]=r.y,y[o+2]=r.z,w[ga]=I,ga+=1;b=M*3;for(h=v.length;b<h;b++)v[b]=0;b=ga*3;for(h=aa.length;b<h;b++)aa[b]=0;t.point.length=ga;t.directional.length=M;t.ambient[0]=m;t.ambient[1]=n;t.ambient[2]=
q;c=ha;k.ambientLightColor.value=c.ambient;k.directionalLightColor.value=c.directional.colors;k.directionalLightDirection.value=c.directional.positions;k.pointLightColor.value=c.point.colors;k.pointLightPosition.value=c.point.positions;k.pointLightDistance.value=c.point.distances}if(d instanceof THREE.MeshBasicMaterial||d instanceof THREE.MeshLambertMaterial||d instanceof THREE.MeshPhongMaterial)k.opacity.value=d.opacity,Y.gammaInput?k.diffuse.value.copyGammaToLinear(d.color):k.diffuse.value=d.color,
(k.map.texture=d.map)&&k.offsetRepeat.value.set(d.map.offset.x,d.map.offset.y,d.map.repeat.x,d.map.repeat.y),k.lightMap.texture=d.lightMap,k.envMap.texture=d.envMap,k.flipEnvMap.value=d.envMap instanceof THREE.WebGLRenderTargetCube?1:-1,k.reflectivity.value=d.reflectivity,k.refractionRatio.value=d.refractionRatio,k.combine.value=d.combine,k.useRefract.value=d.envMap&&d.envMap.mapping instanceof THREE.CubeRefractionMapping;if(d instanceof THREE.LineBasicMaterial)k.diffuse.value=d.color,k.opacity.value=
d.opacity;else if(d instanceof THREE.ParticleBasicMaterial)k.psColor.value=d.color,k.opacity.value=d.opacity,k.size.value=d.size,k.scale.value=Q.height/2,k.map.texture=d.map;else if(d instanceof THREE.MeshPhongMaterial)k.shininess.value=d.shininess,Y.gammaInput?(k.ambient.value.copyGammaToLinear(d.ambient),k.specular.value.copyGammaToLinear(d.specular)):(k.ambient.value=d.ambient,k.specular.value=d.specular);else if(d instanceof THREE.MeshLambertMaterial)Y.gammaInput?k.ambient.value.copyGammaToLinear(d.ambient):
k.ambient.value=d.ambient;else if(d instanceof THREE.MeshDepthMaterial)k.mNear.value=a.near,k.mFar.value=a.far,k.opacity.value=d.opacity;else if(d instanceof THREE.MeshNormalMaterial)k.opacity.value=d.opacity;if(e.receiveShadow&&!d._shadowPass&&k.shadowMatrix){for(c=0;c<za.length;c++)k.shadowMatrix.value[c]=za[c],k.shadowMap.texture[c]=Y.shadowMap[c];k.shadowDarkness.value=Y.shadowMapDarkness;k.shadowBias.value=Y.shadowMapBias}c=d.uniformsList;k=0;for(b=c.length;k<b;k++)if(n=f.uniforms[c[k][1]])if(m=
c[k][0],q=m.type,h=m.value,q==="i")l.uniform1i(n,h);else if(q==="f")l.uniform1f(n,h);else if(q==="v2")l.uniform2f(n,h.x,h.y);else if(q==="v3")l.uniform3f(n,h.x,h.y,h.z);else if(q==="v4")l.uniform4f(n,h.x,h.y,h.z,h.w);else if(q==="c")l.uniform3f(n,h.r,h.g,h.b);else if(q==="fv1")l.uniform1fv(n,h);else if(q==="fv")l.uniform3fv(n,h);else if(q==="v3v"){if(!m._array)m._array=new Float32Array(3*h.length);q=0;for(r=h.length;q<r;q++)t=q*3,m._array[t]=h[q].x,m._array[t+1]=h[q].y,m._array[t+2]=h[q].z;l.uniform3fv(n,
m._array)}else if(q==="m4"){if(!m._array)m._array=new Float32Array(16);h.flattenToArray(m._array);l.uniformMatrix4fv(n,!1,m._array)}else if(q==="m4v"){if(!m._array)m._array=new Float32Array(16*h.length);q=0;for(r=h.length;q<r;q++)h[q].flattenToArrayOffset(m._array,q*16);l.uniformMatrix4fv(n,!1,m._array)}else if(q==="t"){if(l.uniform1i(n,h),n=m.texture)if(n.image instanceof Array&&n.image.length===6){if(m=n,m.image.length===6)if(m.needsUpdate){if(!m.image.__webglTextureCube)m.image.__webglTextureCube=
l.createTexture();l.activeTexture(l.TEXTURE0+h);l.bindTexture(l.TEXTURE_CUBE_MAP,m.image.__webglTextureCube);h=u(l.TEXTURE_CUBE_MAP,m,m.image[0]);for(n=0;n<6;n++)l.texImage2D(l.TEXTURE_CUBE_MAP_POSITIVE_X+n,0,l.RGBA,l.RGBA,l.UNSIGNED_BYTE,m.image[n]);h&&l.generateMipmap(l.TEXTURE_CUBE_MAP);m.needsUpdate=!1}else l.activeTexture(l.TEXTURE0+h),l.bindTexture(l.TEXTURE_CUBE_MAP,m.image.__webglTextureCube)}else n instanceof THREE.WebGLRenderTargetCube?(m=n,l.activeTexture(l.TEXTURE0+h),l.bindTexture(l.TEXTURE_CUBE_MAP,
m.__webglTexture)):G(n,h)}else if(q==="tv"){if(!m._array){m._array=[];q=0;for(r=m.texture.length;q<r;q++)m._array[q]=h+q}l.uniform1iv(n,m._array);q=0;for(r=m.texture.length;q<r;q++)(n=m.texture[q])&&G(n,m._array[q])}(d instanceof THREE.ShaderMaterial||d instanceof THREE.MeshPhongMaterial||d.envMap)&&g.cameraPosition!==null&&l.uniform3f(g.cameraPosition,a.position.x,a.position.y,a.position.z);(d instanceof THREE.MeshPhongMaterial||d instanceof THREE.MeshLambertMaterial||d instanceof THREE.ShaderMaterial||
d.skinning)&&g.viewMatrix!==null&&l.uniformMatrix4fv(g.viewMatrix,!1,na);d.skinning&&(l.uniformMatrix4fv(g.cameraInverseMatrix,!1,na),l.uniformMatrix4fv(g.boneGlobalMatrices,!1,e.boneMatrices))}l.uniformMatrix4fv(g.modelViewMatrix,!1,e._modelViewMatrixArray);g.normalMatrix&&l.uniformMatrix3fv(g.normalMatrix,!1,e._normalMatrixArray);(d instanceof THREE.ShaderMaterial||d.envMap||d.skinning||e.receiveShadow)&&g.objectMatrix!==null&&l.uniformMatrix4fv(g.objectMatrix,!1,e._objectMatrixArray);return f}
function D(a,c,b){a._modelViewMatrix.multiplyToArray(c.matrixWorldInverse,a.matrixWorld,a._modelViewMatrixArray);b&&THREE.Matrix4.makeInvert3x3(a._modelViewMatrix).transposeIntoArray(a._normalMatrixArray)}function H(a){if(ta!==a.doubleSided)a.doubleSided?l.disable(l.CULL_FACE):l.enable(l.CULL_FACE),ta=a.doubleSided;if(sa!==a.flipSided)a.flipSided?l.frontFace(l.CW):l.frontFace(l.CCW),sa=a.flipSided}function C(a){qa!==a&&(a?l.enable(l.DEPTH_TEST):l.disable(l.DEPTH_TEST),qa=a)}function z(a){ra!==a&&
(l.depthMask(a),ra=a)}function A(a,c,b){Fa!==a&&(a?l.enable(l.POLYGON_OFFSET_FILL):l.disable(l.POLYGON_OFFSET_FILL),Fa=a);if(a&&(Ba!==c||Ca!==b))l.polygonOffset(c,b),Ba=c,Ca=b}function x(a){if(a!==pa){switch(a){case THREE.AdditiveBlending:l.blendEquation(l.FUNC_ADD);l.blendFunc(l.SRC_ALPHA,l.ONE);break;case THREE.SubtractiveBlending:l.blendEquation(l.FUNC_ADD);l.blendFunc(l.ZERO,l.ONE_MINUS_SRC_COLOR);break;case THREE.MultiplyBlending:l.blendEquation(l.FUNC_ADD);l.blendFunc(l.ZERO,l.SRC_COLOR);break;
default:l.blendEquationSeparate(l.FUNC_ADD,l.FUNC_ADD),l.blendFuncSeparate(l.SRC_ALPHA,l.ONE_MINUS_SRC_ALPHA,l.ONE,l.ONE_MINUS_SRC_ALPHA)}pa=a}}function M(a,c){var b;a==="fragment"?b=l.createShader(l.FRAGMENT_SHADER):a==="vertex"&&(b=l.createShader(l.VERTEX_SHADER));l.shaderSource(b,c);l.compileShader(b);if(!l.getShaderParameter(b,l.COMPILE_STATUS))return console.error(l.getShaderInfoLog(b)),console.error(c),null;return b}function u(a,c,b){return(b.width&b.width-1)===0&&(b.height&b.height-1)===0?
(l.texParameteri(a,l.TEXTURE_WRAP_S,R(c.wrapS)),l.texParameteri(a,l.TEXTURE_WRAP_T,R(c.wrapT)),l.texParameteri(a,l.TEXTURE_MAG_FILTER,R(c.magFilter)),l.texParameteri(a,l.TEXTURE_MIN_FILTER,R(c.minFilter)),!0):(l.texParameteri(a,l.TEXTURE_WRAP_S,l.CLAMP_TO_EDGE),l.texParameteri(a,l.TEXTURE_WRAP_T,l.CLAMP_TO_EDGE),l.texParameteri(a,l.TEXTURE_MAG_FILTER,N(c.magFilter)),l.texParameteri(a,l.TEXTURE_MIN_FILTER,N(c.minFilter)),!1)}function G(a,c){if(a.needsUpdate){if(!a.__webglInit)a.__webglInit=!0,a.__webglTexture=
l.createTexture(),Y.info.memory.textures++;l.activeTexture(l.TEXTURE0+c);l.bindTexture(l.TEXTURE_2D,a.__webglTexture);var b=u(l.TEXTURE_2D,a,a.image);a instanceof THREE.DataTexture?l.texImage2D(l.TEXTURE_2D,0,R(a.format),a.image.width,a.image.height,0,R(a.format),l.FLOAT,a.image.data):l.texImage2D(l.TEXTURE_2D,0,l.RGBA,l.RGBA,l.UNSIGNED_BYTE,a.image);b&&l.generateMipmap(l.TEXTURE_2D);a.needsUpdate=!1;if(a.onUpdated)a.onUpdated()}else l.activeTexture(l.TEXTURE0+c),l.bindTexture(l.TEXTURE_2D,a.__webglTexture)}
function T(a,c){l.bindRenderbuffer(l.RENDERBUFFER,a);c.depthBuffer&&!c.stencilBuffer?(l.renderbufferStorage(l.RENDERBUFFER,l.DEPTH_COMPONENT16,c.width,c.height),l.framebufferRenderbuffer(l.FRAMEBUFFER,l.DEPTH_ATTACHMENT,l.RENDERBUFFER,a)):c.depthBuffer&&c.stencilBuffer?(l.renderbufferStorage(l.RENDERBUFFER,l.DEPTH_STENCIL,c.width,c.height),l.framebufferRenderbuffer(l.FRAMEBUFFER,l.DEPTH_STENCIL_ATTACHMENT,l.RENDERBUFFER,a)):l.renderbufferStorage(l.RENDERBUFFER,l.RGBA4,c.width,c.height)}function W(a){var c=
a instanceof THREE.WebGLRenderTargetCube;if(a&&!a.__webglFramebuffer){if(a.depthBuffer===void 0)a.depthBuffer=!0;if(a.stencilBuffer===void 0)a.stencilBuffer=!0;a.__webglTexture=l.createTexture();if(c){a.__webglFramebuffer=[];a.__webglRenderbuffer=[];l.bindTexture(l.TEXTURE_CUBE_MAP,a.__webglTexture);u(l.TEXTURE_CUBE_MAP,a,a);for(var b=0;b<6;b++){a.__webglFramebuffer[b]=l.createFramebuffer();a.__webglRenderbuffer[b]=l.createRenderbuffer();l.texImage2D(l.TEXTURE_CUBE_MAP_POSITIVE_X+b,0,R(a.format),
a.width,a.height,0,R(a.format),R(a.type),null);var d=a,e=l.TEXTURE_CUBE_MAP_POSITIVE_X+b;l.bindFramebuffer(l.FRAMEBUFFER,a.__webglFramebuffer[b]);l.framebufferTexture2D(l.FRAMEBUFFER,l.COLOR_ATTACHMENT0,e,d.__webglTexture,0);T(a.__webglRenderbuffer[b],a)}}else a.__webglFramebuffer=l.createFramebuffer(),a.__webglRenderbuffer=l.createRenderbuffer(),l.bindTexture(l.TEXTURE_2D,a.__webglTexture),u(l.TEXTURE_2D,a,a),l.texImage2D(l.TEXTURE_2D,0,R(a.format),a.width,a.height,0,R(a.format),R(a.type),null),
b=l.TEXTURE_2D,l.bindFramebuffer(l.FRAMEBUFFER,a.__webglFramebuffer),l.framebufferTexture2D(l.FRAMEBUFFER,l.COLOR_ATTACHMENT0,b,a.__webglTexture,0),T(a.__webglRenderbuffer,a);c?l.bindTexture(l.TEXTURE_CUBE_MAP,null):l.bindTexture(l.TEXTURE_2D,null);l.bindRenderbuffer(l.RENDERBUFFER,null);l.bindFramebuffer(l.FRAMEBUFFER,null)}a?(c=c?a.__webglFramebuffer[a.activeCubeFace]:a.__webglFramebuffer,b=a.width,a=a.height,e=d=0):(c=null,b=S,a=ga,d=I,e=aa);c!==fa&&(l.bindFramebuffer(l.FRAMEBUFFER,c),l.viewport(d,
e,b,a),fa=c)}function N(a){switch(a){case THREE.NearestFilter:case THREE.NearestMipMapNearestFilter:case THREE.NearestMipMapLinearFilter:return l.NEAREST;default:return l.LINEAR}}function R(a){switch(a){case THREE.RepeatWrapping:return l.REPEAT;case THREE.ClampToEdgeWrapping:return l.CLAMP_TO_EDGE;case THREE.MirroredRepeatWrapping:return l.MIRRORED_REPEAT;case THREE.NearestFilter:return l.NEAREST;case THREE.NearestMipMapNearestFilter:return l.NEAREST_MIPMAP_NEAREST;case THREE.NearestMipMapLinearFilter:return l.NEAREST_MIPMAP_LINEAR;
case THREE.LinearFilter:return l.LINEAR;case THREE.LinearMipMapNearestFilter:return l.LINEAR_MIPMAP_NEAREST;case THREE.LinearMipMapLinearFilter:return l.LINEAR_MIPMAP_LINEAR;case THREE.ByteType:return l.BYTE;case THREE.UnsignedByteType:return l.UNSIGNED_BYTE;case THREE.ShortType:return l.SHORT;case THREE.UnsignedShortType:return l.UNSIGNED_SHORT;case THREE.IntType:return l.INT;case THREE.UnsignedShortType:return l.UNSIGNED_INT;case THREE.FloatType:return l.FLOAT;case THREE.AlphaFormat:return l.ALPHA;
case THREE.RGBFormat:return l.RGB;case THREE.RGBAFormat:return l.RGBA;case THREE.LuminanceFormat:return l.LUMINANCE;case THREE.LuminanceAlphaFormat:return l.LUMINANCE_ALPHA}return 0}var a=a||{},Q=a.canvas!==void 0?a.canvas:document.createElement("canvas"),ca=a.precision!==void 0?a.precision:"highp",K=a.antialias!==void 0?a.antialias:!1,J=a.stencil!==void 0?a.stencil:!0,L=a.preserveDrawingBuffer!==void 0?a.preserveDrawingBuffer:!1,O=a.clearColor!==void 0?new THREE.Color(a.clearColor):new THREE.Color(0),
U=a.clearAlpha!==void 0?a.clearAlpha:0,da=a.maxLights!==void 0?a.maxLights:4;this.domElement=Q;this.context=null;this.autoUpdateScene=this.autoUpdateObjects=this.sortObjects=this.autoClearStencil=this.autoClearDepth=this.autoClearColor=this.autoClear=!0;this.physicallyBasedShading=this.gammaOutput=this.gammaInput=!1;this.shadowMapBias=0.0039;this.shadowMapDarkness=0.5;this.shadowMapHeight=this.shadowMapWidth=512;this.shadowCameraNear=1;this.shadowCameraFar=5E3;this.shadowCameraFov=50;this.shadowMap=
[];this.shadowMapEnabled=!1;this.shadowMapSoft=this.shadowMapAutoUpdate=!0;this.maxMorphTargets=8;this.info={memory:{programs:0,geometries:0,textures:0},render:{calls:0,vertices:0,faces:0}};var Y=this,l,Z=[],X=null,fa=null,ia=-1,ba=null,wa=0,ta=null,sa=null,pa=null,qa=null,ra=null,Fa=null,Ba=null,Ca=null,Da=null,I=0,aa=0,S=0,ga=0,ja=[new THREE.Vector4,new THREE.Vector4,new THREE.Vector4,new THREE.Vector4,new THREE.Vector4,new THREE.Vector4],P=new THREE.Matrix4,ea=new Float32Array(16),na=new Float32Array(16),
oa=new THREE.Vector4,ha={ambient:[0,0,0],directional:{length:0,colors:[],positions:[]},point:{length:0,colors:[],positions:[],distances:[]}},$,za=[],xa,va,V={},ya=!1;l=function(){var a;try{if(!(a=Q.getContext("experimental-webgl",{antialias:K,stencil:J,preserveDrawingBuffer:L})))throw"Error creating WebGL context.";console.log(navigator.userAgent+" | "+a.getParameter(a.VERSION)+" | "+a.getParameter(a.VENDOR)+" | "+a.getParameter(a.RENDERER)+" | "+a.getParameter(a.SHADING_LANGUAGE_VERSION))}catch(c){console.error(c)}return a}();
l.clearColor(0,0,0,1);l.clearDepth(1);l.clearStencil(0);l.enable(l.DEPTH_TEST);l.depthFunc(l.LEQUAL);l.frontFace(l.CCW);l.cullFace(l.BACK);l.enable(l.CULL_FACE);l.enable(l.BLEND);l.blendEquation(l.FUNC_ADD);l.blendFunc(l.SRC_ALPHA,l.ONE_MINUS_SRC_ALPHA);l.clearColor(O.r,O.g,O.b,U);(function(){V.vertices=new Float32Array(16);V.faces=new Uint16Array(6);var a=0;V.vertices[a++]=-1;V.vertices[a++]=-1;V.vertices[a++]=0;V.vertices[a++]=1;V.vertices[a++]=1;V.vertices[a++]=-1;V.vertices[a++]=1;V.vertices[a++]=
1;V.vertices[a++]=1;V.vertices[a++]=1;V.vertices[a++]=1;V.vertices[a++]=0;V.vertices[a++]=-1;V.vertices[a++]=1;V.vertices[a++]=0;a=V.vertices[a++]=0;V.faces[a++]=0;V.faces[a++]=1;V.faces[a++]=2;V.faces[a++]=0;V.faces[a++]=2;V.faces[a++]=3;V.vertexBuffer=l.createBuffer();V.elementBuffer=l.createBuffer();l.bindBuffer(l.ARRAY_BUFFER,V.vertexBuffer);l.bufferData(l.ARRAY_BUFFER,V.vertices,l.STATIC_DRAW);l.bindBuffer(l.ELEMENT_ARRAY_BUFFER,V.elementBuffer);l.bufferData(l.ELEMENT_ARRAY_BUFFER,V.faces,l.STATIC_DRAW);
V.program=l.createProgram();l.attachShader(V.program,M("fragment",THREE.ShaderLib.sprite.fragmentShader));l.attachShader(V.program,M("vertex",THREE.ShaderLib.sprite.vertexShader));l.linkProgram(V.program);V.attributes={};V.uniforms={};V.attributes.position=l.getAttribLocation(V.program,"position");V.attributes.uv=l.getAttribLocation(V.program,"uv");V.uniforms.uvOffset=l.getUniformLocation(V.program,"uvOffset");V.uniforms.uvScale=l.getUniformLocation(V.program,"uvScale");V.uniforms.rotation=l.getUniformLocation(V.program,
"rotation");V.uniforms.scale=l.getUniformLocation(V.program,"scale");V.uniforms.alignment=l.getUniformLocation(V.program,"alignment");V.uniforms.color=l.getUniformLocation(V.program,"color");V.uniforms.map=l.getUniformLocation(V.program,"map");V.uniforms.opacity=l.getUniformLocation(V.program,"opacity");V.uniforms.useScreenCoordinates=l.getUniformLocation(V.program,"useScreenCoordinates");V.uniforms.affectedByDistance=l.getUniformLocation(V.program,"affectedByDistance");V.uniforms.screenPosition=
l.getUniformLocation(V.program,"screenPosition");V.uniforms.modelViewMatrix=l.getUniformLocation(V.program,"modelViewMatrix");V.uniforms.projectionMatrix=l.getUniformLocation(V.program,"projectionMatrix")})();(function(){var a=THREE.ShaderLib.depthRGBA,c=THREE.UniformsUtils.clone(a.uniforms);xa=new THREE.ShaderMaterial({fragmentShader:a.fragmentShader,vertexShader:a.vertexShader,uniforms:c});va=new THREE.ShaderMaterial({fragmentShader:a.fragmentShader,vertexShader:a.vertexShader,uniforms:c,morphTargets:!0});
xa._shadowPass=!0;va._shadowPass=!0})();this.context=l;var Aa=l.getParameter(l.MAX_VERTEX_TEXTURE_IMAGE_UNITS)>0;this.getContext=function(){return l};this.supportsVertexTextures=function(){return Aa};this.setSize=function(a,c){Q.width=a;Q.height=c;this.setViewport(0,0,Q.width,Q.height)};this.setViewport=function(a,c,b,d){I=a;aa=c;S=b;ga=d;l.viewport(I,aa,S,ga)};this.setScissor=function(a,c,b,d){l.scissor(a,c,b,d)};this.enableScissorTest=function(a){a?l.enable(l.SCISSOR_TEST):l.disable(l.SCISSOR_TEST)};
this.setClearColorHex=function(a,c){O.setHex(a);U=c;l.clearColor(O.r,O.g,O.b,U)};this.setClearColor=function(a,c){O.copy(a);U=c;l.clearColor(O.r,O.g,O.b,U)};this.getClearColor=function(){return O};this.getClearAlpha=function(){return U};this.clear=function(a,c,b){var d=0;if(a===void 0||a)d|=l.COLOR_BUFFER_BIT;if(c===void 0||c)d|=l.DEPTH_BUFFER_BIT;if(b===void 0||b)d|=l.STENCIL_BUFFER_BIT;l.clear(d)};this.clearTarget=function(a,c,b,d){W(a);this.clear(c,b,d)};this.deallocateObject=function(a){if(a.__webglInit)if(a.__webglInit=
!1,delete a._modelViewMatrix,delete a._normalMatrixArray,delete a._modelViewMatrixArray,delete a._objectMatrixArray,a instanceof THREE.Mesh)for(var c in a.geometry.geometryGroups){var b=a.geometry.geometryGroups[c];l.deleteBuffer(b.__webglVertexBuffer);l.deleteBuffer(b.__webglNormalBuffer);l.deleteBuffer(b.__webglTangentBuffer);l.deleteBuffer(b.__webglColorBuffer);l.deleteBuffer(b.__webglUVBuffer);l.deleteBuffer(b.__webglUV2Buffer);l.deleteBuffer(b.__webglSkinVertexABuffer);l.deleteBuffer(b.__webglSkinVertexBBuffer);
l.deleteBuffer(b.__webglSkinIndicesBuffer);l.deleteBuffer(b.__webglSkinWeightsBuffer);l.deleteBuffer(b.__webglFaceBuffer);l.deleteBuffer(b.__webglLineBuffer);if(b.numMorphTargets)for(var d=0,e=b.numMorphTargets;d<e;d++)l.deleteBuffer(b.__webglMorphTargetsBuffers[d]);if(b.__webglCustomAttributesList)for(d in d=void 0,b.__webglCustomAttributesList)l.deleteBuffer(b.__webglCustomAttributesList[d].buffer);Y.info.memory.geometries--}else if(a instanceof THREE.Ribbon)a=a.geometry,l.deleteBuffer(a.__webglVertexBuffer),
l.deleteBuffer(a.__webglColorBuffer),Y.info.memory.geometries--;else if(a instanceof THREE.Line)a=a.geometry,l.deleteBuffer(a.__webglVertexBuffer),l.deleteBuffer(a.__webglColorBuffer),Y.info.memory.geometries--;else if(a instanceof THREE.ParticleSystem)a=a.geometry,l.deleteBuffer(a.__webglVertexBuffer),l.deleteBuffer(a.__webglColorBuffer),Y.info.memory.geometries--};this.deallocateTexture=function(a){if(a.__webglInit)a.__webglInit=!1,l.deleteTexture(a.__webglTexture),Y.info.memory.textures--};this.updateShadowMap=
function(a,c){q(a,c)};this.render=function(a,c,b,d){var e,f,g,h,k=a.lights,p=a.fog;ia=-1;this.autoUpdateObjects&&this.initWebGLObjects(a);c.parent===void 0&&(console.warn("DEPRECATED: Camera hasn't been added to a Scene. Adding it..."),a.add(c));this.autoUpdateScene&&a.updateMatrixWorld();this.shadowMapEnabled&&this.shadowMapAutoUpdate&&q(a,c);Y.info.render.calls=0;Y.info.render.vertices=0;Y.info.render.faces=0;c.matrixWorldInverse.getInverse(c.matrixWorld);c.matrixWorldInverse.flattenToArray(na);
c.projectionMatrix.flattenToArray(ea);P.multiply(c.projectionMatrix,c.matrixWorldInverse);n(P);W(b);(this.autoClear||d)&&this.clear(this.autoClearColor,this.autoClearDepth,this.autoClearStencil);h=a.__webglObjects;d=0;for(e=h.length;d<e;d++)if(f=h[d],g=f.object,f.render=!1,g.visible&&(!(g instanceof THREE.Mesh)||!g.frustumCulled||m(g))){g.matrixWorld.flattenToArray(g._objectMatrixArray);D(g,c,!0);var s=f,I=s.object,v=s.buffer,aa=void 0,aa=aa=void 0,aa=I.material;if(aa instanceof THREE.MeshFaceMaterial){if(aa=
v.materialIndex,aa>=0)aa=I.geometry.materials[aa],aa.transparent?(s.transparent=aa,s.opaque=null):(s.opaque=aa,s.transparent=null)}else if(aa)aa.transparent?(s.transparent=aa,s.opaque=null):(s.opaque=aa,s.transparent=null);f.render=!0;if(this.sortObjects)g.renderDepth?f.z=g.renderDepth:(oa.copy(g.position),P.multiplyVector3(oa),f.z=oa.z)}this.sortObjects&&h.sort(r);h=a.__webglObjectsImmediate;d=0;for(e=h.length;d<e;d++)if(f=h[d],g=f.object,g.visible)g.matrixAutoUpdate&&g.matrixWorld.flattenToArray(g._objectMatrixArray),
D(g,c,!0),g=f.object.material,g.transparent?(f.transparent=g,f.opaque=null):(f.opaque=g,f.transparent=null);a.overrideMaterial?(x(a.overrideMaterial.blending),C(a.overrideMaterial.depthTest),z(a.overrideMaterial.depthWrite),A(a.overrideMaterial.polygonOffset,a.overrideMaterial.polygonOffsetFactor,a.overrideMaterial.polygonOffsetUnits),o(a.__webglObjects,!1,"",c,k,p,!0,a.overrideMaterial),t(a.__webglObjectsImmediate,"",c,k,p,!1,a.overrideMaterial)):(x(THREE.NormalBlending),o(a.__webglObjects,!0,"opaque",
c,k,p,!1),t(a.__webglObjectsImmediate,"opaque",c,k,p,!1),o(a.__webglObjects,!1,"transparent",c,k,p,!0),t(a.__webglObjectsImmediate,"transparent",c,k,p,!0));if(a.__webglSprites.length){g=V.attributes;k=V.uniforms;p=ga/S;d=[];e=S*0.5;h=ga*0.5;f=!0;l.useProgram(V.program);X=V.program;ba=qa=pa=-1;ya||(l.enableVertexAttribArray(V.attributes.position),l.enableVertexAttribArray(V.attributes.uv),ya=!0);l.disable(l.CULL_FACE);l.enable(l.BLEND);l.depthMask(!0);l.bindBuffer(l.ARRAY_BUFFER,V.vertexBuffer);l.vertexAttribPointer(g.position,
2,l.FLOAT,!1,16,0);l.vertexAttribPointer(g.uv,2,l.FLOAT,!1,16,8);l.bindBuffer(l.ELEMENT_ARRAY_BUFFER,V.elementBuffer);l.uniformMatrix4fv(k.projectionMatrix,!1,ea);l.activeTexture(l.TEXTURE0);l.uniform1i(k.map,0);g=0;for(s=a.__webglSprites.length;g<s;g++)if(I=a.__webglSprites[g],I.visible&&I.opacity!==0)I.useScreenCoordinates?I.z=-I.position.z:(I._modelViewMatrix.multiplyToArray(c.matrixWorldInverse,I.matrixWorld,I._modelViewMatrixArray),I.z=-I._modelViewMatrix.n34);a.__webglSprites.sort(r);g=0;for(s=
a.__webglSprites.length;g<s;g++)I=a.__webglSprites[g],I.visible&&I.opacity!==0&&I.map&&I.map.image&&I.map.image.width&&(I.useScreenCoordinates?(l.uniform1i(k.useScreenCoordinates,1),l.uniform3f(k.screenPosition,(I.position.x-e)/e,(h-I.position.y)/h,Math.max(0,Math.min(1,I.position.z)))):(l.uniform1i(k.useScreenCoordinates,0),l.uniform1i(k.affectedByDistance,I.affectedByDistance?1:0),l.uniformMatrix4fv(k.modelViewMatrix,!1,I._modelViewMatrixArray)),c=I.map.image.width/(I.scaleByViewport?ga:1),d[0]=
c*p*I.scale.x,d[1]=c*I.scale.y,l.uniform2f(k.uvScale,I.uvScale.x,I.uvScale.y),l.uniform2f(k.uvOffset,I.uvOffset.x,I.uvOffset.y),l.uniform2f(k.alignment,I.alignment.x,I.alignment.y),l.uniform1f(k.opacity,I.opacity),l.uniform3f(k.color,I.color.r,I.color.g,I.color.b),l.uniform1f(k.rotation,I.rotation),l.uniform2fv(k.scale,d),I.mergeWith3D&&!f?(l.enable(l.DEPTH_TEST),f=!0):!I.mergeWith3D&&f&&(l.disable(l.DEPTH_TEST),f=!1),x(I.blending),G(I.map,0),l.drawElements(l.TRIANGLES,6,l.UNSIGNED_SHORT,0));l.enable(l.CULL_FACE);
l.enable(l.DEPTH_TEST);l.depthMask(ra)}b&&b.minFilter!==THREE.NearestFilter&&b.minFilter!==THREE.LinearFilter&&(b instanceof THREE.WebGLRenderTargetCube?(l.bindTexture(l.TEXTURE_CUBE_MAP,b.__webglTexture),l.generateMipmap(l.TEXTURE_CUBE_MAP),l.bindTexture(l.TEXTURE_CUBE_MAP,null)):(l.bindTexture(l.TEXTURE_2D,b.__webglTexture),l.generateMipmap(l.TEXTURE_2D),l.bindTexture(l.TEXTURE_2D,null)))};this.initWebGLObjects=function(a){if(!a.__webglObjects)a.__webglObjects=[],a.__webglObjectsImmediate=[],a.__webglSprites=
[];for(;a.__objectsAdded.length;){var h=a.__objectsAdded[0],k=a,o=void 0,m=void 0,n=void 0;if(!h.__webglInit)if(h.__webglInit=!0,h._modelViewMatrix=new THREE.Matrix4,h._normalMatrixArray=new Float32Array(9),h._modelViewMatrixArray=new Float32Array(16),h._objectMatrixArray=new Float32Array(16),h.matrixWorld.flattenToArray(h._objectMatrixArray),h instanceof THREE.Mesh){m=h.geometry;if(m.geometryGroups===void 0){var n=m,q=void 0,r=void 0,I=void 0,t=void 0,S=void 0,aa=void 0,u=void 0,w={},M=n.morphTargets.length;
n.geometryGroups={};q=0;for(r=n.faces.length;q<r;q++)I=n.faces[q],t=I.materialIndex,aa=t!==void 0?t:-1,w[aa]===void 0&&(w[aa]={hash:aa,counter:0}),u=w[aa].hash+"_"+w[aa].counter,n.geometryGroups[u]===void 0&&(n.geometryGroups[u]={faces3:[],faces4:[],materialIndex:t,vertices:0,numMorphTargets:M}),S=I instanceof THREE.Face3?3:4,n.geometryGroups[u].vertices+S>65535&&(w[aa].counter+=1,u=w[aa].hash+"_"+w[aa].counter,n.geometryGroups[u]===void 0&&(n.geometryGroups[u]={faces3:[],faces4:[],materialIndex:t,
vertices:0,numMorphTargets:M})),I instanceof THREE.Face3?n.geometryGroups[u].faces3.push(q):n.geometryGroups[u].faces4.push(q),n.geometryGroups[u].vertices+=S;n.geometryGroupsList=[];q=void 0;for(q in n.geometryGroups)n.geometryGroups[q].id=wa++,n.geometryGroupsList.push(n.geometryGroups[q])}for(o in m.geometryGroups)if(n=m.geometryGroups[o],!n.__webglVertexBuffer){q=n;q.__webglVertexBuffer=l.createBuffer();q.__webglNormalBuffer=l.createBuffer();q.__webglTangentBuffer=l.createBuffer();q.__webglColorBuffer=
l.createBuffer();q.__webglUVBuffer=l.createBuffer();q.__webglUV2Buffer=l.createBuffer();q.__webglSkinVertexABuffer=l.createBuffer();q.__webglSkinVertexBBuffer=l.createBuffer();q.__webglSkinIndicesBuffer=l.createBuffer();q.__webglSkinWeightsBuffer=l.createBuffer();q.__webglFaceBuffer=l.createBuffer();q.__webglLineBuffer=l.createBuffer();if(q.numMorphTargets){I=r=void 0;q.__webglMorphTargetsBuffers=[];r=0;for(I=q.numMorphTargets;r<I;r++)q.__webglMorphTargetsBuffers.push(l.createBuffer())}Y.info.memory.geometries++;
t=h;S=t.geometry;r=n.faces3;aa=n.faces4;q=r.length*3+aa.length*4;I=r.length*1+aa.length*2;aa=r.length*3+aa.length*4;r=c(t,n);u=g(r);w=d(r);M=e(r);n.__vertexArray=new Float32Array(q*3);if(w)n.__normalArray=new Float32Array(q*3);if(S.hasTangents)n.__tangentArray=new Float32Array(q*4);if(M)n.__colorArray=new Float32Array(q*3);if(u){if(S.faceUvs.length>0||S.faceVertexUvs.length>0)n.__uvArray=new Float32Array(q*2);if(S.faceUvs.length>1||S.faceVertexUvs.length>1)n.__uv2Array=new Float32Array(q*2)}if(t.geometry.skinWeights.length&&
t.geometry.skinIndices.length)n.__skinVertexAArray=new Float32Array(q*4),n.__skinVertexBArray=new Float32Array(q*4),n.__skinIndexArray=new Float32Array(q*4),n.__skinWeightArray=new Float32Array(q*4);n.__faceArray=new Uint16Array(I*3);n.__lineArray=new Uint16Array(aa*2);if(n.numMorphTargets){n.__morphTargetsArrays=[];t=0;for(S=n.numMorphTargets;t<S;t++)n.__morphTargetsArrays.push(new Float32Array(q*3))}n.__webglFaceCount=I*3;n.__webglLineCount=aa*2;if(r.attributes){if(n.__webglCustomAttributesList===
void 0)n.__webglCustomAttributesList=[];I=void 0;for(I in r.attributes){var t=r.attributes[I],S={},ga;for(ga in t)S[ga]=t[ga];if(!S.__webglInitialized||S.createUniqueBuffers)S.__webglInitialized=!0,aa=1,S.type==="v2"?aa=2:S.type==="v3"?aa=3:S.type==="v4"?aa=4:S.type==="c"&&(aa=3),S.size=aa,S.array=new Float32Array(q*aa),S.buffer=l.createBuffer(),S.buffer.belongsToAttribute=I,t.needsUpdate=!0,S.__original=t;n.__webglCustomAttributesList.push(S)}}n.__inittedArrays=!0;m.__dirtyVertices=!0;m.__dirtyMorphTargets=
!0;m.__dirtyElements=!0;m.__dirtyUvs=!0;m.__dirtyNormals=!0;m.__dirtyTangents=!0;m.__dirtyColors=!0}}else if(h instanceof THREE.Ribbon){if(m=h.geometry,!m.__webglVertexBuffer)n=m,n.__webglVertexBuffer=l.createBuffer(),n.__webglColorBuffer=l.createBuffer(),Y.info.memory.geometries++,n=m,q=n.vertices.length,n.__vertexArray=new Float32Array(q*3),n.__colorArray=new Float32Array(q*3),n.__webglVertexCount=q,m.__dirtyVertices=!0,m.__dirtyColors=!0}else if(h instanceof THREE.Line){if(m=h.geometry,!m.__webglVertexBuffer)n=
m,n.__webglVertexBuffer=l.createBuffer(),n.__webglColorBuffer=l.createBuffer(),Y.info.memory.geometries++,n=m,q=h,r=n.vertices.length,n.__vertexArray=new Float32Array(r*3),n.__colorArray=new Float32Array(r*3),n.__webglLineCount=r,b(n,q),m.__dirtyVertices=!0,m.__dirtyColors=!0}else if(h instanceof THREE.ParticleSystem&&(m=h.geometry,!m.__webglVertexBuffer))n=m,n.__webglVertexBuffer=l.createBuffer(),n.__webglColorBuffer=l.createBuffer(),Y.info.geometries++,n=m,q=h,r=n.vertices.length,n.__vertexArray=
new Float32Array(r*3),n.__colorArray=new Float32Array(r*3),n.__sortArray=[],n.__webglParticleCount=r,b(n,q),m.__dirtyVertices=!0,m.__dirtyColors=!0;if(!h.__webglActive){if(h instanceof THREE.Mesh)for(o in m=h.geometry,m.geometryGroups)n=m.geometryGroups[o],p(k.__webglObjects,n,h);else h instanceof THREE.Ribbon||h instanceof THREE.Line||h instanceof THREE.ParticleSystem?(m=h.geometry,p(k.__webglObjects,m,h)):THREE.MarchingCubes!==void 0&&h instanceof THREE.MarchingCubes||h.immediateRenderCallback?
k.__webglObjectsImmediate.push({object:h,opaque:null,transparent:null}):h instanceof THREE.Sprite&&k.__webglSprites.push(h);h.__webglActive=!0}a.__objectsAdded.splice(0,1)}for(;a.__objectsRemoved.length;){h=a.__objectsRemoved[0];k=a;if(h instanceof THREE.Mesh||h instanceof THREE.ParticleSystem||h instanceof THREE.Ribbon||h instanceof THREE.Line)y(k.__webglObjects,h);else if(h instanceof THREE.Sprite){k=k.__webglSprites;o=h;for(m=k.length-1;m>=0;m--)k[m]===o&&k.splice(m,1)}else(h instanceof THREE.MarchingCubes||
h.immediateRenderCallback)&&y(k.__webglObjectsImmediate,h);h.__webglActive=!1;a.__objectsRemoved.splice(0,1)}h=0;for(k=a.__webglObjects.length;h<k;h++)if(ga=a.__webglObjects[h].object,o=ga.geometry,m=I=r=void 0,ga instanceof THREE.Mesh){n=0;for(q=o.geometryGroupsList.length;n<q;n++)if(r=o.geometryGroupsList[n],m=c(ga,r),I=m.attributes&&s(m),o.__dirtyVertices||o.__dirtyMorphTargets||o.__dirtyElements||o.__dirtyUvs||o.__dirtyNormals||o.__dirtyColors||o.__dirtyTangents||I){var G=ga,I=l.DYNAMIC_DRAW,
t=!o.dynamic,u=m;if(r.__inittedArrays){var S=d(u),aa=e(u),D=g(u),T=S===THREE.SmoothShading,O=w=u=void 0,F=void 0,J=void 0,L=void 0,x=void 0,C=void 0,ja=void 0,H=O=void 0,A=void 0,z=void 0,P=void 0,K=F=void 0,R=void 0,U=void 0,ea=F=ja=void 0,W=void 0,Z=P=z=A=x=void 0,N=F=P=z=A=Z=P=z=A=Z=P=z=A=void 0,Q=void 0,na=L=void 0,V=void 0,X=void 0,ia=void 0,ca=void 0,da=H=X=Q=0,fa=0,oa=N=O=0,$=x=K=0,E=0,ha=void 0,$=r.__vertexArray,V=r.__uvArray,E=r.__uv2Array,na=r.__normalArray,J=r.__tangentArray,R=r.__colorArray,
ea=r.__skinVertexAArray,W=r.__skinVertexBArray,C=r.__skinIndexArray,ba=r.__skinWeightArray,Z=r.__morphTargetsArrays,M=r.__webglCustomAttributesList,B=void 0,B=r.__faceArray,ha=r.__lineArray,U=G.geometry,za=U.__dirtyElements,va=U.__dirtyUvs,L=U.__dirtyNormals,ja=U.__dirtyTangents,ta=U.__dirtyColors,ia=U.__dirtyMorphTargets,ca=U.vertices,G=r.faces3,la=r.faces4,ma=U.faces,sa=U.faceVertexUvs[0],ra=U.faceVertexUvs[1],xa=U.skinVerticesA,ya=U.skinVerticesB,qa=U.skinIndices,pa=U.skinWeights,Aa=U.morphTargets;
if(U.__dirtyVertices){u=0;for(w=G.length;u<w;u++)F=ma[G[u]],A=ca[F.a].position,z=ca[F.b].position,P=ca[F.c].position,$[X]=A.x,$[X+1]=A.y,$[X+2]=A.z,$[X+3]=z.x,$[X+4]=z.y,$[X+5]=z.z,$[X+6]=P.x,$[X+7]=P.y,$[X+8]=P.z,X+=9;u=0;for(w=la.length;u<w;u++)F=ma[la[u]],A=ca[F.a].position,z=ca[F.b].position,P=ca[F.c].position,F=ca[F.d].position,$[X]=A.x,$[X+1]=A.y,$[X+2]=A.z,$[X+3]=z.x,$[X+4]=z.y,$[X+5]=z.z,$[X+6]=P.x,$[X+7]=P.y,$[X+8]=P.z,$[X+9]=F.x,$[X+10]=F.y,$[X+11]=F.z,X+=12;l.bindBuffer(l.ARRAY_BUFFER,
r.__webglVertexBuffer);l.bufferData(l.ARRAY_BUFFER,$,I)}if(ia){X=0;for(ia=Aa.length;X<ia;X++){u=$=0;for(w=G.length;u<w;u++)F=ma[G[u]],A=Aa[X].vertices[F.a].position,z=Aa[X].vertices[F.b].position,P=Aa[X].vertices[F.c].position,ca=Z[X],ca[$]=A.x,ca[$+1]=A.y,ca[$+2]=A.z,ca[$+3]=z.x,ca[$+4]=z.y,ca[$+5]=z.z,ca[$+6]=P.x,ca[$+7]=P.y,ca[$+8]=P.z,$+=9;u=0;for(w=la.length;u<w;u++)F=ma[la[u]],A=Aa[X].vertices[F.a].position,z=Aa[X].vertices[F.b].position,P=Aa[X].vertices[F.c].position,F=Aa[X].vertices[F.d].position,
ca=Z[X],ca[$]=A.x,ca[$+1]=A.y,ca[$+2]=A.z,ca[$+3]=z.x,ca[$+4]=z.y,ca[$+5]=z.z,ca[$+6]=P.x,ca[$+7]=P.y,ca[$+8]=P.z,ca[$+9]=F.x,ca[$+10]=F.y,ca[$+11]=F.z,$+=12;l.bindBuffer(l.ARRAY_BUFFER,r.__webglMorphTargetsBuffers[X]);l.bufferData(l.ARRAY_BUFFER,Z[X],I)}}if(pa.length){u=0;for(w=G.length;u<w;u++)F=ma[G[u]],A=pa[F.a],z=pa[F.b],P=pa[F.c],ba[x]=A.x,ba[x+1]=A.y,ba[x+2]=A.z,ba[x+3]=A.w,ba[x+4]=z.x,ba[x+5]=z.y,ba[x+6]=z.z,ba[x+7]=z.w,ba[x+8]=P.x,ba[x+9]=P.y,ba[x+10]=P.z,ba[x+11]=P.w,A=qa[F.a],z=qa[F.b],
P=qa[F.c],C[x]=A.x,C[x+1]=A.y,C[x+2]=A.z,C[x+3]=A.w,C[x+4]=z.x,C[x+5]=z.y,C[x+6]=z.z,C[x+7]=z.w,C[x+8]=P.x,C[x+9]=P.y,C[x+10]=P.z,C[x+11]=P.w,A=xa[F.a],z=xa[F.b],P=xa[F.c],ea[x]=A.x,ea[x+1]=A.y,ea[x+2]=A.z,ea[x+3]=1,ea[x+4]=z.x,ea[x+5]=z.y,ea[x+6]=z.z,ea[x+7]=1,ea[x+8]=P.x,ea[x+9]=P.y,ea[x+10]=P.z,ea[x+11]=1,A=ya[F.a],z=ya[F.b],P=ya[F.c],W[x]=A.x,W[x+1]=A.y,W[x+2]=A.z,W[x+3]=1,W[x+4]=z.x,W[x+5]=z.y,W[x+6]=z.z,W[x+7]=1,W[x+8]=P.x,W[x+9]=P.y,W[x+10]=P.z,W[x+11]=1,x+=12;u=0;for(w=la.length;u<w;u++)F=
ma[la[u]],A=pa[F.a],z=pa[F.b],P=pa[F.c],Z=pa[F.d],ba[x]=A.x,ba[x+1]=A.y,ba[x+2]=A.z,ba[x+3]=A.w,ba[x+4]=z.x,ba[x+5]=z.y,ba[x+6]=z.z,ba[x+7]=z.w,ba[x+8]=P.x,ba[x+9]=P.y,ba[x+10]=P.z,ba[x+11]=P.w,ba[x+12]=Z.x,ba[x+13]=Z.y,ba[x+14]=Z.z,ba[x+15]=Z.w,A=qa[F.a],z=qa[F.b],P=qa[F.c],Z=qa[F.d],C[x]=A.x,C[x+1]=A.y,C[x+2]=A.z,C[x+3]=A.w,C[x+4]=z.x,C[x+5]=z.y,C[x+6]=z.z,C[x+7]=z.w,C[x+8]=P.x,C[x+9]=P.y,C[x+10]=P.z,C[x+11]=P.w,C[x+12]=Z.x,C[x+13]=Z.y,C[x+14]=Z.z,C[x+15]=Z.w,A=xa[F.a],z=xa[F.b],P=xa[F.c],Z=xa[F.d],
ea[x]=A.x,ea[x+1]=A.y,ea[x+2]=A.z,ea[x+3]=1,ea[x+4]=z.x,ea[x+5]=z.y,ea[x+6]=z.z,ea[x+7]=1,ea[x+8]=P.x,ea[x+9]=P.y,ea[x+10]=P.z,ea[x+11]=1,ea[x+12]=Z.x,ea[x+13]=Z.y,ea[x+14]=Z.z,ea[x+15]=1,A=ya[F.a],z=ya[F.b],P=ya[F.c],F=ya[F.d],W[x]=A.x,W[x+1]=A.y,W[x+2]=A.z,W[x+3]=1,W[x+4]=z.x,W[x+5]=z.y,W[x+6]=z.z,W[x+7]=1,W[x+8]=P.x,W[x+9]=P.y,W[x+10]=P.z,W[x+11]=1,W[x+12]=F.x,W[x+13]=F.y,W[x+14]=F.z,W[x+15]=1,x+=16;x>0&&(l.bindBuffer(l.ARRAY_BUFFER,r.__webglSkinVertexABuffer),l.bufferData(l.ARRAY_BUFFER,ea,I),
l.bindBuffer(l.ARRAY_BUFFER,r.__webglSkinVertexBBuffer),l.bufferData(l.ARRAY_BUFFER,W,I),l.bindBuffer(l.ARRAY_BUFFER,r.__webglSkinIndicesBuffer),l.bufferData(l.ARRAY_BUFFER,C,I),l.bindBuffer(l.ARRAY_BUFFER,r.__webglSkinWeightsBuffer),l.bufferData(l.ARRAY_BUFFER,ba,I))}if(ta&&aa){u=0;for(w=G.length;u<w;u++)F=ma[G[u]],x=F.vertexColors,C=F.color,x.length===3&&aa===THREE.VertexColors?(F=x[0],ea=x[1],W=x[2]):W=ea=F=C,R[K]=F.r,R[K+1]=F.g,R[K+2]=F.b,R[K+3]=ea.r,R[K+4]=ea.g,R[K+5]=ea.b,R[K+6]=W.r,R[K+7]=
W.g,R[K+8]=W.b,K+=9;u=0;for(w=la.length;u<w;u++)F=ma[la[u]],x=F.vertexColors,C=F.color,x.length===4&&aa===THREE.VertexColors?(F=x[0],ea=x[1],W=x[2],x=x[3]):x=W=ea=F=C,R[K]=F.r,R[K+1]=F.g,R[K+2]=F.b,R[K+3]=ea.r,R[K+4]=ea.g,R[K+5]=ea.b,R[K+6]=W.r,R[K+7]=W.g,R[K+8]=W.b,R[K+9]=x.r,R[K+10]=x.g,R[K+11]=x.b,K+=12;K>0&&(l.bindBuffer(l.ARRAY_BUFFER,r.__webglColorBuffer),l.bufferData(l.ARRAY_BUFFER,R,I))}if(ja&&U.hasTangents){u=0;for(w=G.length;u<w;u++)F=ma[G[u]],ja=F.vertexTangents,K=ja[0],R=ja[1],U=ja[2],
J[N]=K.x,J[N+1]=K.y,J[N+2]=K.z,J[N+3]=K.w,J[N+4]=R.x,J[N+5]=R.y,J[N+6]=R.z,J[N+7]=R.w,J[N+8]=U.x,J[N+9]=U.y,J[N+10]=U.z,J[N+11]=U.w,N+=12;u=0;for(w=la.length;u<w;u++)F=ma[la[u]],ja=F.vertexTangents,K=ja[0],R=ja[1],U=ja[2],ja=ja[3],J[N]=K.x,J[N+1]=K.y,J[N+2]=K.z,J[N+3]=K.w,J[N+4]=R.x,J[N+5]=R.y,J[N+6]=R.z,J[N+7]=R.w,J[N+8]=U.x,J[N+9]=U.y,J[N+10]=U.z,J[N+11]=U.w,J[N+12]=ja.x,J[N+13]=ja.y,J[N+14]=ja.z,J[N+15]=ja.w,N+=16;l.bindBuffer(l.ARRAY_BUFFER,r.__webglTangentBuffer);l.bufferData(l.ARRAY_BUFFER,
J,I)}if(L&&S){u=0;for(w=G.length;u<w;u++)if(F=ma[G[u]],J=F.vertexNormals,L=F.normal,J.length===3&&T)for(N=0;N<3;N++)L=J[N],na[O]=L.x,na[O+1]=L.y,na[O+2]=L.z,O+=3;else for(N=0;N<3;N++)na[O]=L.x,na[O+1]=L.y,na[O+2]=L.z,O+=3;u=0;for(w=la.length;u<w;u++)if(F=ma[la[u]],J=F.vertexNormals,L=F.normal,J.length===4&&T)for(N=0;N<4;N++)L=J[N],na[O]=L.x,na[O+1]=L.y,na[O+2]=L.z,O+=3;else for(N=0;N<4;N++)na[O]=L.x,na[O+1]=L.y,na[O+2]=L.z,O+=3;l.bindBuffer(l.ARRAY_BUFFER,r.__webglNormalBuffer);l.bufferData(l.ARRAY_BUFFER,
na,I)}if(va&&sa&&D){u=0;for(w=G.length;u<w;u++)if(O=G[u],O=sa[O],O!==void 0)for(N=0;N<3;N++)na=O[N],V[H]=na.u,V[H+1]=na.v,H+=2;u=0;for(w=la.length;u<w;u++)if(O=la[u],O=sa[O],O!==void 0)for(N=0;N<4;N++)na=O[N],V[H]=na.u,V[H+1]=na.v,H+=2;H>0&&(l.bindBuffer(l.ARRAY_BUFFER,r.__webglUVBuffer),l.bufferData(l.ARRAY_BUFFER,V,I))}if(va&&ra&&D){u=0;for(w=G.length;u<w;u++)if(O=G[u],H=ra[O],H!==void 0)for(N=0;N<3;N++)V=H[N],E[da]=V.u,E[da+1]=V.v,da+=2;u=0;for(w=la.length;u<w;u++)if(O=la[u],H=ra[O],H!==void 0)for(N=
0;N<4;N++)V=H[N],E[da]=V.u,E[da+1]=V.v,da+=2;da>0&&(l.bindBuffer(l.ARRAY_BUFFER,r.__webglUV2Buffer),l.bufferData(l.ARRAY_BUFFER,E,I))}if(za){u=0;for(w=G.length;u<w;u++)B[fa]=Q,B[fa+1]=Q+1,B[fa+2]=Q+2,fa+=3,ha[oa]=Q,ha[oa+1]=Q+1,ha[oa+2]=Q,ha[oa+3]=Q+2,ha[oa+4]=Q+1,ha[oa+5]=Q+2,oa+=6,Q+=3;u=0;for(w=la.length;u<w;u++)B[fa]=Q,B[fa+1]=Q+1,B[fa+2]=Q+3,B[fa+3]=Q+1,B[fa+4]=Q+2,B[fa+5]=Q+3,fa+=6,ha[oa]=Q,ha[oa+1]=Q+1,ha[oa+2]=Q,ha[oa+3]=Q+3,ha[oa+4]=Q+1,ha[oa+5]=Q+2,ha[oa+6]=Q+2,ha[oa+7]=Q+3,oa+=8,Q+=4;l.bindBuffer(l.ELEMENT_ARRAY_BUFFER,
r.__webglFaceBuffer);l.bufferData(l.ELEMENT_ARRAY_BUFFER,B,I);l.bindBuffer(l.ELEMENT_ARRAY_BUFFER,r.__webglLineBuffer);l.bufferData(l.ELEMENT_ARRAY_BUFFER,ha,I)}if(M){N=0;for(Q=M.length;N<Q;N++)if(B=M[N],B.__original.needsUpdate){E=0;if(B.size===1)if(B.boundTo===void 0||B.boundTo==="vertices"){u=0;for(w=G.length;u<w;u++)F=ma[G[u]],B.array[E]=B.value[F.a],B.array[E+1]=B.value[F.b],B.array[E+2]=B.value[F.c],E+=3;u=0;for(w=la.length;u<w;u++)F=ma[la[u]],B.array[E]=B.value[F.a],B.array[E+1]=B.value[F.b],
B.array[E+2]=B.value[F.c],B.array[E+3]=B.value[F.d],E+=4}else{if(B.boundTo==="faces"){u=0;for(w=G.length;u<w;u++)ha=B.value[G[u]],B.array[E]=ha,B.array[E+1]=ha,B.array[E+2]=ha,E+=3;u=0;for(w=la.length;u<w;u++)ha=B.value[la[u]],B.array[E]=ha,B.array[E+1]=ha,B.array[E+2]=ha,B.array[E+3]=ha,E+=4}}else if(B.size===2)if(B.boundTo===void 0||B.boundTo==="vertices"){u=0;for(w=G.length;u<w;u++)F=ma[G[u]],A=B.value[F.a],z=B.value[F.b],P=B.value[F.c],B.array[E]=A.x,B.array[E+1]=A.y,B.array[E+2]=z.x,B.array[E+
3]=z.y,B.array[E+4]=P.x,B.array[E+5]=P.y,E+=6;u=0;for(w=la.length;u<w;u++)F=ma[la[u]],A=B.value[F.a],z=B.value[F.b],P=B.value[F.c],F=B.value[F.d],B.array[E]=A.x,B.array[E+1]=A.y,B.array[E+2]=z.x,B.array[E+3]=z.y,B.array[E+4]=P.x,B.array[E+5]=P.y,B.array[E+6]=F.x,B.array[E+7]=F.y,E+=8}else{if(B.boundTo==="faces"){u=0;for(w=G.length;u<w;u++)P=z=A=ha=B.value[G[u]],B.array[E]=A.x,B.array[E+1]=A.y,B.array[E+2]=z.x,B.array[E+3]=z.y,B.array[E+4]=P.x,B.array[E+5]=P.y,E+=6;u=0;for(w=la.length;u<w;u++)F=P=
z=A=ha=B.value[la[u]],B.array[E]=A.x,B.array[E+1]=A.y,B.array[E+2]=z.x,B.array[E+3]=z.y,B.array[E+4]=P.x,B.array[E+5]=P.y,B.array[E+6]=F.x,B.array[E+7]=F.y,E+=8}}else if(B.size===3)if(S=B.type==="c"?["r","g","b"]:["x","y","z"],B.boundTo===void 0||B.boundTo==="vertices"){u=0;for(w=G.length;u<w;u++)F=ma[G[u]],A=B.value[F.a],z=B.value[F.b],P=B.value[F.c],B.array[E]=A[S[0]],B.array[E+1]=A[S[1]],B.array[E+2]=A[S[2]],B.array[E+3]=z[S[0]],B.array[E+4]=z[S[1]],B.array[E+5]=z[S[2]],B.array[E+6]=P[S[0]],B.array[E+
7]=P[S[1]],B.array[E+8]=P[S[2]],E+=9;u=0;for(w=la.length;u<w;u++)F=ma[la[u]],A=B.value[F.a],z=B.value[F.b],P=B.value[F.c],F=B.value[F.d],B.array[E]=A[S[0]],B.array[E+1]=A[S[1]],B.array[E+2]=A[S[2]],B.array[E+3]=z[S[0]],B.array[E+4]=z[S[1]],B.array[E+5]=z[S[2]],B.array[E+6]=P[S[0]],B.array[E+7]=P[S[1]],B.array[E+8]=P[S[2]],B.array[E+9]=F[S[0]],B.array[E+10]=F[S[1]],B.array[E+11]=F[S[2]],E+=12}else{if(B.boundTo==="faces"){u=0;for(w=G.length;u<w;u++)P=z=A=ha=B.value[G[u]],B.array[E]=A[S[0]],B.array[E+
1]=A[S[1]],B.array[E+2]=A[S[2]],B.array[E+3]=z[S[0]],B.array[E+4]=z[S[1]],B.array[E+5]=z[S[2]],B.array[E+6]=P[S[0]],B.array[E+7]=P[S[1]],B.array[E+8]=P[S[2]],E+=9;u=0;for(w=la.length;u<w;u++)F=P=z=A=ha=B.value[la[u]],B.array[E]=A[S[0]],B.array[E+1]=A[S[1]],B.array[E+2]=A[S[2]],B.array[E+3]=z[S[0]],B.array[E+4]=z[S[1]],B.array[E+5]=z[S[2]],B.array[E+6]=P[S[0]],B.array[E+7]=P[S[1]],B.array[E+8]=P[S[2]],B.array[E+9]=F[S[0]],B.array[E+10]=F[S[1]],B.array[E+11]=F[S[2]],E+=12}}else if(B.size===4)if(B.boundTo===
void 0||B.boundTo==="vertices"){u=0;for(w=G.length;u<w;u++)F=ma[G[u]],A=B.value[F.a],z=B.value[F.b],P=B.value[F.c],B.array[E]=A.x,B.array[E+1]=A.y,B.array[E+2]=A.z,B.array[E+3]=A.w,B.array[E+4]=z.x,B.array[E+5]=z.y,B.array[E+6]=z.z,B.array[E+7]=z.w,B.array[E+8]=P.x,B.array[E+9]=P.y,B.array[E+10]=P.z,B.array[E+11]=P.w,E+=12;u=0;for(w=la.length;u<w;u++)F=ma[la[u]],A=B.value[F.a],z=B.value[F.b],P=B.value[F.c],F=B.value[F.d],B.array[E]=A.x,B.array[E+1]=A.y,B.array[E+2]=A.z,B.array[E+3]=A.w,B.array[E+
4]=z.x,B.array[E+5]=z.y,B.array[E+6]=z.z,B.array[E+7]=z.w,B.array[E+8]=P.x,B.array[E+9]=P.y,B.array[E+10]=P.z,B.array[E+11]=P.w,B.array[E+12]=F.x,B.array[E+13]=F.y,B.array[E+14]=F.z,B.array[E+15]=F.w,E+=16}else if(B.boundTo==="faces"){u=0;for(w=G.length;u<w;u++)P=z=A=ha=B.value[G[u]],B.array[E]=A.x,B.array[E+1]=A.y,B.array[E+2]=A.z,B.array[E+3]=A.w,B.array[E+4]=z.x,B.array[E+5]=z.y,B.array[E+6]=z.z,B.array[E+7]=z.w,B.array[E+8]=P.x,B.array[E+9]=P.y,B.array[E+10]=P.z,B.array[E+11]=P.w,E+=12;u=0;for(w=
la.length;u<w;u++)F=P=z=A=ha=B.value[la[u]],B.array[E]=A.x,B.array[E+1]=A.y,B.array[E+2]=A.z,B.array[E+3]=A.w,B.array[E+4]=z.x,B.array[E+5]=z.y,B.array[E+6]=z.z,B.array[E+7]=z.w,B.array[E+8]=P.x,B.array[E+9]=P.y,B.array[E+10]=P.z,B.array[E+11]=P.w,B.array[E+12]=F.x,B.array[E+13]=F.y,B.array[E+14]=F.z,B.array[E+15]=F.w,E+=16}l.bindBuffer(l.ARRAY_BUFFER,B.buffer);l.bufferData(l.ARRAY_BUFFER,B.array,I)}}t&&(delete r.__inittedArrays,delete r.__colorArray,delete r.__normalArray,delete r.__tangentArray,
delete r.__uvArray,delete r.__uv2Array,delete r.__faceArray,delete r.__vertexArray,delete r.__lineArray,delete r.__skinVertexAArray,delete r.__skinVertexBArray,delete r.__skinIndexArray,delete r.__skinWeightArray)}}o.__dirtyVertices=!1;o.__dirtyMorphTargets=!1;o.__dirtyElements=!1;o.__dirtyUvs=!1;o.__dirtyNormals=!1;o.__dirtyColors=!1;o.__dirtyTangents=!1;m.attributes&&v(m)}else if(ga instanceof THREE.Ribbon){if(o.__dirtyVertices||o.__dirtyColors){m=o;ga=l.DYNAMIC_DRAW;S=n=S=t=t=void 0;aa=m.vertices;
q=m.colors;u=aa.length;r=q.length;w=m.__vertexArray;I=m.__colorArray;M=m.__dirtyColors;if(m.__dirtyVertices){for(t=0;t<u;t++)S=aa[t].position,n=t*3,w[n]=S.x,w[n+1]=S.y,w[n+2]=S.z;l.bindBuffer(l.ARRAY_BUFFER,m.__webglVertexBuffer);l.bufferData(l.ARRAY_BUFFER,w,ga)}if(M){for(t=0;t<r;t++)S=q[t],n=t*3,I[n]=S.r,I[n+1]=S.g,I[n+2]=S.b;l.bindBuffer(l.ARRAY_BUFFER,m.__webglColorBuffer);l.bufferData(l.ARRAY_BUFFER,I,ga)}}o.__dirtyVertices=!1;o.__dirtyColors=!1}else if(ga instanceof THREE.Line){m=c(ga,r);I=
m.attributes&&s(m);if(o.__dirtyVertices||o.__dirtyColors||I){ga=o;n=l.DYNAMIC_DRAW;u=q=T=aa=D=void 0;aa=ga.vertices;r=ga.colors;u=aa.length;I=r.length;w=ga.__vertexArray;t=ga.__colorArray;M=ga.__dirtyColors;S=ga.__webglCustomAttributesList;Q=ma=la=G=T=D=void 0;if(ga.__dirtyVertices){for(D=0;D<u;D++)T=aa[D].position,q=D*3,w[q]=T.x,w[q+1]=T.y,w[q+2]=T.z;l.bindBuffer(l.ARRAY_BUFFER,ga.__webglVertexBuffer);l.bufferData(l.ARRAY_BUFFER,w,n)}if(M){for(aa=0;aa<I;aa++)u=r[aa],q=aa*3,t[q]=u.r,t[q+1]=u.g,t[q+
2]=u.b;l.bindBuffer(l.ARRAY_BUFFER,ga.__webglColorBuffer);l.bufferData(l.ARRAY_BUFFER,t,n)}if(S){D=0;for(T=S.length;D<T;D++)if(Q=S[D],Q.needsUpdate&&(Q.boundTo===void 0||Q.boundTo==="vertices")){q=0;la=Q.value.length;if(Q.size===1)for(G=0;G<la;G++)Q.array[G]=Q.value[G];else if(Q.size===2)for(G=0;G<la;G++)ma=Q.value[G],Q.array[q]=ma.x,Q.array[q+1]=ma.y,q+=2;else if(Q.size===3)if(Q.type==="c")for(G=0;G<la;G++)ma=Q.value[G],Q.array[q]=ma.r,Q.array[q+1]=ma.g,Q.array[q+2]=ma.b,q+=3;else for(G=0;G<la;G++)ma=
Q.value[G],Q.array[q]=ma.x,Q.array[q+1]=ma.y,Q.array[q+2]=ma.z,q+=3;else if(Q.size===4)for(G=0;G<la;G++)ma=Q.value[G],Q.array[q]=ma.x,Q.array[q+1]=ma.y,Q.array[q+2]=ma.z,Q.array[q+3]=ma.w,q+=4;l.bindBuffer(l.ARRAY_BUFFER,Q.buffer);l.bufferData(l.ARRAY_BUFFER,Q.array,n)}}}o.__dirtyVertices=!1;o.__dirtyColors=!1;m.attributes&&v(m)}else if(ga instanceof THREE.ParticleSystem)m=c(ga,r),I=m.attributes&&s(m),(o.__dirtyVertices||o.__dirtyColors||ga.sortParticles||I)&&f(o,l.DYNAMIC_DRAW,ga),o.__dirtyVertices=
!1,o.__dirtyColors=!1,m.attributes&&v(m)};this.initMaterial=function(a,c,b,d){var e,g,f,h;a instanceof THREE.MeshDepthMaterial?h="depth":a instanceof THREE.MeshNormalMaterial?h="normal":a instanceof THREE.MeshBasicMaterial?h="basic":a instanceof THREE.MeshLambertMaterial?h="lambert":a instanceof THREE.MeshPhongMaterial?h="phong":a instanceof THREE.LineBasicMaterial?h="basic":a instanceof THREE.ParticleBasicMaterial&&(h="particle_basic");if(h){var k=THREE.ShaderLib[h];a.uniforms=THREE.UniformsUtils.clone(k.uniforms);
a.vertexShader=k.vertexShader;a.fragmentShader=k.fragmentShader}var n,m,o;n=o=k=0;for(m=c.length;n<m;n++)f=c[n],f instanceof THREE.SpotLight&&o++,f instanceof THREE.DirectionalLight&&o++,f instanceof THREE.PointLight&&k++;k+o<=da?n=o:(n=Math.ceil(da*o/(k+o)),k=da-n);f={directional:n,point:k};k=o=0;for(n=c.length;k<n;k++)m=c[k],m instanceof THREE.SpotLight&&m.castShadow&&o++;var p=50;if(d!==void 0&&d instanceof THREE.SkinnedMesh)p=d.bones.length;var q;a:{n=a.fragmentShader;m=a.vertexShader;var k=a.uniforms,
c=a.attributes,b={map:!!a.map,envMap:!!a.envMap,lightMap:!!a.lightMap,vertexColors:a.vertexColors,fog:b,useFog:a.fog,sizeAttenuation:a.sizeAttenuation,skinning:a.skinning,morphTargets:a.morphTargets,maxMorphTargets:this.maxMorphTargets,maxDirLights:f.directional,maxPointLights:f.point,maxBones:p,shadowMapEnabled:this.shadowMapEnabled&&d.receiveShadow,shadowMapSoft:this.shadowMapSoft,shadowMapWidth:this.shadowMapWidth,shadowMapHeight:this.shadowMapHeight,maxShadows:o,alphaTest:a.alphaTest,metal:a.metal,
perPixel:a.perPixel},r,d=[];h?d.push(h):(d.push(n),d.push(m));for(r in b)d.push(r),d.push(b[r]);h=d.join();r=0;for(d=Z.length;r<d;r++)if(Z[r].code===h){q=Z[r].program;break a}r=l.createProgram();d=[Aa?"#define VERTEX_TEXTURES":"",Y.gammaInput?"#define GAMMA_INPUT":"",Y.gammaOutput?"#define GAMMA_OUTPUT":"",Y.physicallyBasedShading?"#define PHYSICALLY_BASED_SHADING":"","#define MAX_DIR_LIGHTS "+b.maxDirLights,"#define MAX_POINT_LIGHTS "+b.maxPointLights,"#define MAX_SHADOWS "+b.maxShadows,"#define MAX_BONES "+
b.maxBones,b.map?"#define USE_MAP":"",b.envMap?"#define USE_ENVMAP":"",b.lightMap?"#define USE_LIGHTMAP":"",b.vertexColors?"#define USE_COLOR":"",b.skinning?"#define USE_SKINNING":"",b.morphTargets?"#define USE_MORPHTARGETS":"",b.perPixel?"#define PHONG_PER_PIXEL":"",b.shadowMapEnabled?"#define USE_SHADOWMAP":"",b.shadowMapSoft?"#define SHADOWMAP_SOFT":"",b.sizeAttenuation?"#define USE_SIZEATTENUATION":"","uniform mat4 objectMatrix;\nuniform mat4 modelViewMatrix;\nuniform mat4 projectionMatrix;\nuniform mat4 viewMatrix;\nuniform mat3 normalMatrix;\nuniform vec3 cameraPosition;\nuniform mat4 cameraInverseMatrix;\nattribute vec3 position;\nattribute vec3 normal;\nattribute vec2 uv;\nattribute vec2 uv2;\n#ifdef USE_COLOR\nattribute vec3 color;\n#endif\n#ifdef USE_MORPHTARGETS\nattribute vec3 morphTarget0;\nattribute vec3 morphTarget1;\nattribute vec3 morphTarget2;\nattribute vec3 morphTarget3;\nattribute vec3 morphTarget4;\nattribute vec3 morphTarget5;\nattribute vec3 morphTarget6;\nattribute vec3 morphTarget7;\n#endif\n#ifdef USE_SKINNING\nattribute vec4 skinVertexA;\nattribute vec4 skinVertexB;\nattribute vec4 skinIndex;\nattribute vec4 skinWeight;\n#endif\n"].join("\n");
f=["#ifdef GL_ES","precision "+ca+" float;","#endif","#define MAX_DIR_LIGHTS "+b.maxDirLights,"#define MAX_POINT_LIGHTS "+b.maxPointLights,"#define MAX_SHADOWS "+b.maxShadows,b.alphaTest?"#define ALPHATEST "+b.alphaTest:"",Y.gammaInput?"#define GAMMA_INPUT":"",Y.gammaOutput?"#define GAMMA_OUTPUT":"",Y.physicallyBasedShading?"#define PHYSICALLY_BASED_SHADING":"",b.useFog&&b.fog?"#define USE_FOG":"",b.useFog&&b.fog instanceof THREE.FogExp2?"#define FOG_EXP2":"",b.map?"#define USE_MAP":"",b.envMap?"#define USE_ENVMAP":
"",b.lightMap?"#define USE_LIGHTMAP":"",b.vertexColors?"#define USE_COLOR":"",b.metal?"#define METAL":"",b.perPixel?"#define PHONG_PER_PIXEL":"",b.shadowMapEnabled?"#define USE_SHADOWMAP":"",b.shadowMapSoft?"#define SHADOWMAP_SOFT":"",b.shadowMapSoft?"#define SHADOWMAP_WIDTH "+b.shadowMapWidth.toFixed(1):"",b.shadowMapSoft?"#define SHADOWMAP_HEIGHT "+b.shadowMapHeight.toFixed(1):"","uniform mat4 viewMatrix;\nuniform vec3 cameraPosition;\n"].join("\n");l.attachShader(r,M("fragment",f+n));l.attachShader(r,
M("vertex",d+m));l.linkProgram(r);l.getProgramParameter(r,l.LINK_STATUS)||console.error("Could not initialise shader\nVALIDATE_STATUS: "+l.getProgramParameter(r,l.VALIDATE_STATUS)+", gl error ["+l.getError()+"]");r.uniforms={};r.attributes={};var I,d=["viewMatrix","modelViewMatrix","projectionMatrix","normalMatrix","objectMatrix","cameraPosition","cameraInverseMatrix","boneGlobalMatrices","morphTargetInfluences"];for(I in k)d.push(I);I=d;d=0;for(k=I.length;d<k;d++)n=I[d],r.uniforms[n]=l.getUniformLocation(r,
n);d=["position","normal","uv","uv2","tangent","color","skinVertexA","skinVertexB","skinIndex","skinWeight"];for(I=0;I<b.maxMorphTargets;I++)d.push("morphTarget"+I);for(q in c)d.push(q);q=d;I=0;for(c=q.length;I<c;I++)b=q[I],r.attributes[b]=l.getAttribLocation(r,b);r.id=Z.length;Z.push({program:r,code:h});Y.info.memory.programs=Z.length;q=r}a.program=q;q=a.program.attributes;q.position>=0&&l.enableVertexAttribArray(q.position);q.color>=0&&l.enableVertexAttribArray(q.color);q.normal>=0&&l.enableVertexAttribArray(q.normal);
q.tangent>=0&&l.enableVertexAttribArray(q.tangent);a.skinning&&q.skinVertexA>=0&&q.skinVertexB>=0&&q.skinIndex>=0&&q.skinWeight>=0&&(l.enableVertexAttribArray(q.skinVertexA),l.enableVertexAttribArray(q.skinVertexB),l.enableVertexAttribArray(q.skinIndex),l.enableVertexAttribArray(q.skinWeight));if(a.attributes)for(g in a.attributes)q[g]!==void 0&&q[g]>=0&&l.enableVertexAttribArray(q[g]);if(a.morphTargets)for(g=a.numSupportedMorphTargets=0;g<this.maxMorphTargets;g++)I="morphTarget"+g,q[I]>=0&&(l.enableVertexAttribArray(q[I]),
a.numSupportedMorphTargets++);a.uniformsList=[];for(e in a.uniforms)a.uniformsList.push([a.uniforms[e],e])};this.setFaceCulling=function(a,c){a?(!c||c==="ccw"?l.frontFace(l.CCW):l.frontFace(l.CW),a==="back"?l.cullFace(l.BACK):a==="front"?l.cullFace(l.FRONT):l.cullFace(l.FRONT_AND_BACK),l.enable(l.CULL_FACE)):l.disable(l.CULL_FACE)}};
THREE.WebGLRenderTarget=function(a,b,c){this.width=a;this.height=b;c=c||{};this.wrapS=c.wrapS!==void 0?c.wrapS:THREE.ClampToEdgeWrapping;this.wrapT=c.wrapT!==void 0?c.wrapT:THREE.ClampToEdgeWrapping;this.magFilter=c.magFilter!==void 0?c.magFilter:THREE.LinearFilter;this.minFilter=c.minFilter!==void 0?c.minFilter:THREE.LinearMipMapLinearFilter;this.offset=new THREE.Vector2(0,0);this.repeat=new THREE.Vector2(1,1);this.format=c.format!==void 0?c.format:THREE.RGBAFormat;this.type=c.type!==void 0?c.type:
THREE.UnsignedByteType;this.depthBuffer=c.depthBuffer!==void 0?c.depthBuffer:!0;this.stencilBuffer=c.stencilBuffer!==void 0?c.stencilBuffer:!0};
THREE.WebGLRenderTarget.prototype.clone=function(){var a=new THREE.WebGLRenderTarget(this.width,this.height);a.wrapS=this.wrapS;a.wrapT=this.wrapT;a.magFilter=this.magFilter;a.minFilter=this.minFilter;a.offset.copy(this.offset);a.repeat.copy(this.repeat);a.format=this.format;a.type=this.type;a.depthBuffer=this.depthBuffer;a.stencilBuffer=this.stencilBuffer;return a};THREE.WebGLRenderTargetCube=function(a,b,c){THREE.WebGLRenderTarget.call(this,a,b,c);this.activeCubeFace=0};
THREE.WebGLRenderTargetCube.prototype=new THREE.WebGLRenderTarget;THREE.WebGLRenderTargetCube.prototype.constructor=THREE.WebGLRenderTargetCube;THREE.RenderableVertex=function(){this.positionWorld=new THREE.Vector3;this.positionScreen=new THREE.Vector4;this.visible=!0};THREE.RenderableVertex.prototype.copy=function(a){this.positionWorld.copy(a.positionWorld);this.positionScreen.copy(a.positionScreen)};
THREE.RenderableFace3=function(){this.v1=new THREE.RenderableVertex;this.v2=new THREE.RenderableVertex;this.v3=new THREE.RenderableVertex;this.centroidWorld=new THREE.Vector3;this.centroidScreen=new THREE.Vector3;this.normalWorld=new THREE.Vector3;this.vertexNormalsWorld=[new THREE.Vector3,new THREE.Vector3,new THREE.Vector3];this.faceMaterial=this.material=null;this.uvs=[[]];this.z=null};
THREE.RenderableFace4=function(){this.v1=new THREE.RenderableVertex;this.v2=new THREE.RenderableVertex;this.v3=new THREE.RenderableVertex;this.v4=new THREE.RenderableVertex;this.centroidWorld=new THREE.Vector3;this.centroidScreen=new THREE.Vector3;this.normalWorld=new THREE.Vector3;this.vertexNormalsWorld=[new THREE.Vector3,new THREE.Vector3,new THREE.Vector3,new THREE.Vector3];this.faceMaterial=this.material=null;this.uvs=[[]];this.z=null};THREE.RenderableObject=function(){this.z=this.object=null};
THREE.RenderableParticle=function(){this.rotation=this.z=this.y=this.x=null;this.scale=new THREE.Vector2;this.material=null};THREE.RenderableLine=function(){this.z=null;this.v1=new THREE.RenderableVertex;this.v2=new THREE.RenderableVertex;this.material=null};
THREE.ImageUtils={loadTexture:function(a,b,c){var d=new Image,e=new THREE.Texture(d,b);d.onload=function(){e.needsUpdate=!0;c&&c(this)};d.crossOrigin="";d.src=a;return e},loadTextureCube:function(a,b,c){var d,e=[],g=new THREE.Texture(e,b),b=e.loadCount=0;for(d=a.length;b<d;++b)e[b]=new Image,e[b].onload=function(){e.loadCount+=1;if(e.loadCount===6)g.needsUpdate=!0;c&&c(this)},e[b].crossOrigin="",e[b].src=a[b];return g},getNormalMap:function(a,b){var c=function(a){var c=Math.sqrt(a[0]*a[0]+a[1]*a[1]+
a[2]*a[2]);return[a[0]/c,a[1]/c,a[2]/c]};b|=1;var d=a.width,e=a.height,g=document.createElement("canvas");g.width=d;g.height=e;var f=g.getContext("2d");f.drawImage(a,0,0);for(var h=f.getImageData(0,0,d,e).data,k=f.createImageData(d,e),n=k.data,m=0;m<d;m++)for(var r=1;r<e;r++){var q=r-1<0?e-1:r-1,o=(r+1)%e,t=m-1<0?d-1:m-1,p=(m+1)%d,s=[],v=[0,0,h[(r*d+m)*4]/255*b];s.push([-1,0,h[(r*d+t)*4]/255*b]);s.push([-1,-1,h[(q*d+t)*4]/255*b]);s.push([0,-1,h[(q*d+m)*4]/255*b]);s.push([1,-1,h[(q*d+p)*4]/255*b]);
s.push([1,0,h[(r*d+p)*4]/255*b]);s.push([1,1,h[(o*d+p)*4]/255*b]);s.push([0,1,h[(o*d+m)*4]/255*b]);s.push([-1,1,h[(o*d+t)*4]/255*b]);q=[];t=s.length;for(o=0;o<t;o++){var p=s[o],y=s[(o+1)%t],p=[p[0]-v[0],p[1]-v[1],p[2]-v[2]],y=[y[0]-v[0],y[1]-v[1],y[2]-v[2]];q.push(c([p[1]*y[2]-p[2]*y[1],p[2]*y[0]-p[0]*y[2],p[0]*y[1]-p[1]*y[0]]))}s=[0,0,0];for(o=0;o<q.length;o++)s[0]+=q[o][0],s[1]+=q[o][1],s[2]+=q[o][2];s[0]/=q.length;s[1]/=q.length;s[2]/=q.length;v=(r*d+m)*4;n[v]=(s[0]+1)/2*255|0;n[v+1]=(s[1]+0.5)*
255|0;n[v+2]=s[2]*255|0;n[v+3]=255}f.putImageData(k,0,0);return g}};
THREE.ShaderExtras={screen:{uniforms:{tDiffuse:{type:"t",value:0,texture:null},opacity:{type:"f",value:1}},vertexShader:"varying vec2 vUv;\nvoid main() {\nvUv = vec2( uv.x, 1.0 - uv.y );\ngl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",fragmentShader:"uniform float opacity;\nuniform sampler2D tDiffuse;\nvarying vec2 vUv;\nvoid main() {\nvec4 texel = texture2D( tDiffuse, vUv );\ngl_FragColor = opacity * texel;\n}"},convolution:{uniforms:{tDiffuse:{type:"t",value:0,texture:null},
uImageIncrement:{type:"v2",value:new THREE.Vector2(0.001953125,0)},cKernel:{type:"fv1",value:[]}},vertexShader:"uniform vec2 uImageIncrement;\nvarying vec2 vUv;\nvoid main() {\nvUv = uv - ( ( KERNEL_SIZE - 1.0 ) / 2.0 ) * uImageIncrement;\ngl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",fragmentShader:"uniform float cKernel[ KERNEL_SIZE ];\nuniform sampler2D tDiffuse;\nuniform vec2 uImageIncrement;\nvarying vec2 vUv;\nvoid main() {\nvec2 imageCoord = vUv;\nvec4 sum = vec4( 0.0, 0.0, 0.0, 0.0 );\nfor( int i = 0; i < KERNEL_SIZE; i ++ ) {\nsum += texture2D( tDiffuse, imageCoord ) * cKernel[ i ];\nimageCoord += uImageIncrement;\n}\ngl_FragColor = sum;\n}"},
film:{uniforms:{tDiffuse:{type:"t",value:0,texture:null},time:{type:"f",value:0},nIntensity:{type:"f",value:0.5},sIntensity:{type:"f",value:0.05},sCount:{type:"f",value:4096},grayscale:{type:"i",value:1}},vertexShader:"varying vec2 vUv;\nvoid main() {\nvUv = vec2( uv.x, 1.0 - uv.y );\ngl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",fragmentShader:"uniform float time;\nuniform bool grayscale;\nuniform float nIntensity;\nuniform float sIntensity;\nuniform float sCount;\nuniform sampler2D tDiffuse;\nvarying vec2 vUv;\nvoid main() {\nvec4 cTextureScreen = texture2D( tDiffuse, vUv );\nfloat x = vUv.x * vUv.y * time *  1000.0;\nx = mod( x, 13.0 ) * mod( x, 123.0 );\nfloat dx = mod( x, 0.01 );\nvec3 cResult = cTextureScreen.rgb + cTextureScreen.rgb * clamp( 0.1 + dx * 100.0, 0.0, 1.0 );\nvec2 sc = vec2( sin( vUv.y * sCount ), cos( vUv.y * sCount ) );\ncResult += cTextureScreen.rgb * vec3( sc.x, sc.y, sc.x ) * sIntensity;\ncResult = cTextureScreen.rgb + clamp( nIntensity, 0.0,1.0 ) * ( cResult - cTextureScreen.rgb );\nif( grayscale ) {\ncResult = vec3( cResult.r * 0.3 + cResult.g * 0.59 + cResult.b * 0.11 );\n}\ngl_FragColor =  vec4( cResult, cTextureScreen.a );\n}"},
bokeh:{uniforms:{tColor:{type:"t",value:0,texture:null},tDepth:{type:"t",value:1,texture:null},focus:{type:"f",value:1},aspect:{type:"f",value:1},aperture:{type:"f",value:0.025},maxblur:{type:"f",value:1}},vertexShader:"varying vec2 vUv;\nvoid main() {\nvUv = vec2( uv.x, 1.0 - uv.y );\ngl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",fragmentShader:"varying vec2 vUv;\nuniform sampler2D tColor;\nuniform sampler2D tDepth;\nuniform float maxblur;\nuniform float aperture;\nuniform float focus;\nuniform float aspect;\nvoid main() {\nvec2 aspectcorrect = vec2( 1.0, aspect );\nvec4 depth1 = texture2D( tDepth, vUv );\nfloat factor = depth1.x - focus;\nvec2 dofblur = vec2 ( clamp( factor * aperture, -maxblur, maxblur ) );\nvec2 dofblur9 = dofblur * 0.9;\nvec2 dofblur7 = dofblur * 0.7;\nvec2 dofblur4 = dofblur * 0.4;\nvec4 col = vec4( 0.0 );\ncol += texture2D( tColor, vUv.xy );\ncol += texture2D( tColor, vUv.xy + ( vec2(  0.0,   0.4  ) * aspectcorrect ) * dofblur );\ncol += texture2D( tColor, vUv.xy + ( vec2(  0.15,  0.37 ) * aspectcorrect ) * dofblur );\ncol += texture2D( tColor, vUv.xy + ( vec2(  0.29,  0.29 ) * aspectcorrect ) * dofblur );\ncol += texture2D( tColor, vUv.xy + ( vec2( -0.37,  0.15 ) * aspectcorrect ) * dofblur );\ncol += texture2D( tColor, vUv.xy + ( vec2(  0.40,  0.0  ) * aspectcorrect ) * dofblur );\ncol += texture2D( tColor, vUv.xy + ( vec2(  0.37, -0.15 ) * aspectcorrect ) * dofblur );\ncol += texture2D( tColor, vUv.xy + ( vec2(  0.29, -0.29 ) * aspectcorrect ) * dofblur );\ncol += texture2D( tColor, vUv.xy + ( vec2( -0.15, -0.37 ) * aspectcorrect ) * dofblur );\ncol += texture2D( tColor, vUv.xy + ( vec2(  0.0,  -0.4  ) * aspectcorrect ) * dofblur );\ncol += texture2D( tColor, vUv.xy + ( vec2( -0.15,  0.37 ) * aspectcorrect ) * dofblur );\ncol += texture2D( tColor, vUv.xy + ( vec2( -0.29,  0.29 ) * aspectcorrect ) * dofblur );\ncol += texture2D( tColor, vUv.xy + ( vec2(  0.37,  0.15 ) * aspectcorrect ) * dofblur );\ncol += texture2D( tColor, vUv.xy + ( vec2( -0.4,   0.0  ) * aspectcorrect ) * dofblur );\ncol += texture2D( tColor, vUv.xy + ( vec2( -0.37, -0.15 ) * aspectcorrect ) * dofblur );\ncol += texture2D( tColor, vUv.xy + ( vec2( -0.29, -0.29 ) * aspectcorrect ) * dofblur );\ncol += texture2D( tColor, vUv.xy + ( vec2(  0.15, -0.37 ) * aspectcorrect ) * dofblur );\ncol += texture2D( tColor, vUv.xy + ( vec2(  0.15,  0.37 ) * aspectcorrect ) * dofblur9 );\ncol += texture2D( tColor, vUv.xy + ( vec2( -0.37,  0.15 ) * aspectcorrect ) * dofblur9 );\ncol += texture2D( tColor, vUv.xy + ( vec2(  0.37, -0.15 ) * aspectcorrect ) * dofblur9 );\ncol += texture2D( tColor, vUv.xy + ( vec2( -0.15, -0.37 ) * aspectcorrect ) * dofblur9 );\ncol += texture2D( tColor, vUv.xy + ( vec2( -0.15,  0.37 ) * aspectcorrect ) * dofblur9 );\ncol += texture2D( tColor, vUv.xy + ( vec2(  0.37,  0.15 ) * aspectcorrect ) * dofblur9 );\ncol += texture2D( tColor, vUv.xy + ( vec2( -0.37, -0.15 ) * aspectcorrect ) * dofblur9 );\ncol += texture2D( tColor, vUv.xy + ( vec2(  0.15, -0.37 ) * aspectcorrect ) * dofblur9 );\ncol += texture2D( tColor, vUv.xy + ( vec2(  0.29,  0.29 ) * aspectcorrect ) * dofblur7 );\ncol += texture2D( tColor, vUv.xy + ( vec2(  0.40,  0.0  ) * aspectcorrect ) * dofblur7 );\ncol += texture2D( tColor, vUv.xy + ( vec2(  0.29, -0.29 ) * aspectcorrect ) * dofblur7 );\ncol += texture2D( tColor, vUv.xy + ( vec2(  0.0,  -0.4  ) * aspectcorrect ) * dofblur7 );\ncol += texture2D( tColor, vUv.xy + ( vec2( -0.29,  0.29 ) * aspectcorrect ) * dofblur7 );\ncol += texture2D( tColor, vUv.xy + ( vec2( -0.4,   0.0  ) * aspectcorrect ) * dofblur7 );\ncol += texture2D( tColor, vUv.xy + ( vec2( -0.29, -0.29 ) * aspectcorrect ) * dofblur7 );\ncol += texture2D( tColor, vUv.xy + ( vec2(  0.0,   0.4  ) * aspectcorrect ) * dofblur7 );\ncol += texture2D( tColor, vUv.xy + ( vec2(  0.29,  0.29 ) * aspectcorrect ) * dofblur4 );\ncol += texture2D( tColor, vUv.xy + ( vec2(  0.4,   0.0  ) * aspectcorrect ) * dofblur4 );\ncol += texture2D( tColor, vUv.xy + ( vec2(  0.29, -0.29 ) * aspectcorrect ) * dofblur4 );\ncol += texture2D( tColor, vUv.xy + ( vec2(  0.0,  -0.4  ) * aspectcorrect ) * dofblur4 );\ncol += texture2D( tColor, vUv.xy + ( vec2( -0.29,  0.29 ) * aspectcorrect ) * dofblur4 );\ncol += texture2D( tColor, vUv.xy + ( vec2( -0.4,   0.0  ) * aspectcorrect ) * dofblur4 );\ncol += texture2D( tColor, vUv.xy + ( vec2( -0.29, -0.29 ) * aspectcorrect ) * dofblur4 );\ncol += texture2D( tColor, vUv.xy + ( vec2(  0.0,   0.4  ) * aspectcorrect ) * dofblur4 );\ngl_FragColor = col / 41.0;\ngl_FragColor.a = 1.0;\n}"},
dofmipmap:{uniforms:{tColor:{type:"t",value:0,texture:null},tDepth:{type:"t",value:1,texture:null},focus:{type:"f",value:1},maxblur:{type:"f",value:1}},vertexShader:"varying vec2 vUv;\nvoid main() {\nvUv = vec2( uv.x, 1.0 - uv.y );\ngl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",fragmentShader:"uniform float focus;\nuniform float maxblur;\nuniform sampler2D tColor;\nuniform sampler2D tDepth;\nvarying vec2 vUv;\nvoid main() {\nvec4 depth = texture2D( tDepth, vUv );\nfloat factor = depth.x - focus;\nvec4 col = texture2D( tColor, vUv, 2.0 * maxblur * abs( focus - depth.x ) );\ngl_FragColor = col;\ngl_FragColor.a = 1.0;\n}"},
sepia:{uniforms:{tDiffuse:{type:"t",value:0,texture:null},amount:{type:"f",value:1}},vertexShader:"varying vec2 vUv;\nvoid main() {\nvUv = vec2( uv.x, 1.0 - uv.y );\ngl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",fragmentShader:"uniform float amount;\nuniform sampler2D tDiffuse;\nvarying vec2 vUv;\nvoid main() {\nvec4 color = texture2D( tDiffuse, vUv );\nvec3 c = color.rgb;\ncolor.r = dot( c, vec3( 1.0 - 0.607 * amount, 0.769 * amount, 0.189 * amount ) );\ncolor.g = dot( c, vec3( 0.349 * amount, 1.0 - 0.314 * amount, 0.168 * amount ) );\ncolor.b = dot( c, vec3( 0.272 * amount, 0.534 * amount, 1.0 - 0.869 * amount ) );\ngl_FragColor = vec4( min( vec3( 1.0 ), color.rgb ), color.a );\n}"},
dotscreen:{uniforms:{tDiffuse:{type:"t",value:0,texture:null},tSize:{type:"v2",value:new THREE.Vector2(256,256)},center:{type:"v2",value:new THREE.Vector2(0.5,0.5)},angle:{type:"f",value:1.57},scale:{type:"f",value:1}},vertexShader:"varying vec2 vUv;\nvoid main() {\nvUv = vec2( uv.x, 1.0 - uv.y );\ngl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",fragmentShader:"uniform vec2 center;\nuniform float angle;\nuniform float scale;\nuniform vec2 tSize;\nuniform sampler2D tDiffuse;\nvarying vec2 vUv;\nfloat pattern() {\nfloat s = sin( angle ), c = cos( angle );\nvec2 tex = vUv * tSize - center;\nvec2 point = vec2( c * tex.x - s * tex.y, s * tex.x + c * tex.y ) * scale;\nreturn ( sin( point.x ) * sin( point.y ) ) * 4.0;\n}\nvoid main() {\nvec4 color = texture2D( tDiffuse, vUv );\nfloat average = ( color.r + color.g + color.b ) / 3.0;\ngl_FragColor = vec4( vec3( average * 10.0 - 5.0 + pattern() ), color.a );\n}"},
vignette:{uniforms:{tDiffuse:{type:"t",value:0,texture:null},offset:{type:"f",value:1},darkness:{type:"f",value:1}},vertexShader:"varying vec2 vUv;\nvoid main() {\nvUv = vec2( uv.x, 1.0 - uv.y );\ngl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",fragmentShader:"uniform float offset;\nuniform float darkness;\nuniform sampler2D tDiffuse;\nvarying vec2 vUv;\nvoid main() {\nvec4 texel = texture2D( tDiffuse, vUv );\nvec2 uv = ( vUv - vec2( 0.5 ) ) * vec2( offset );\ngl_FragColor = vec4( mix( texel.rgb, vec3( 1.0 - darkness ), dot( uv, uv ) ), texel.a );\n}"},
bleachbypass:{uniforms:{tDiffuse:{type:"t",value:0,texture:null},opacity:{type:"f",value:1}},vertexShader:"varying vec2 vUv;\nvoid main() {\nvUv = vec2( uv.x, 1.0 - uv.y );\ngl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",fragmentShader:"uniform float opacity;\nuniform sampler2D tDiffuse;\nvarying vec2 vUv;\nvoid main() {\nvec4 base = texture2D( tDiffuse, vUv );\nvec3 lumCoeff = vec3( 0.25, 0.65, 0.1 );\nfloat lum = dot( lumCoeff, base.rgb );\nvec3 blend = vec3( lum );\nfloat L = min( 1.0, max( 0.0, 10.0 * ( lum - 0.45 ) ) );\nvec3 result1 = 2.0 * base.rgb * blend;\nvec3 result2 = 1.0 - 2.0 * ( 1.0 - blend ) * ( 1.0 - base.rgb );\nvec3 newColor = mix( result1, result2, L );\nfloat A2 = opacity * base.a;\nvec3 mixRGB = A2 * newColor.rgb;\nmixRGB += ( ( 1.0 - A2 ) * base.rgb );\ngl_FragColor = vec4( mixRGB, base.a );\n}"},
focus:{uniforms:{tDiffuse:{type:"t",value:0,texture:null},screenWidth:{type:"f",value:1024},screenHeight:{type:"f",value:1024},sampleDistance:{type:"f",value:0.94},waveFactor:{type:"f",value:0.00125}},vertexShader:"varying vec2 vUv;\nvoid main() {\nvUv = vec2( uv.x, 1.0 - uv.y );\ngl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",fragmentShader:"uniform float screenWidth;\nuniform float screenHeight;\nuniform float sampleDistance;\nuniform float waveFactor;\nuniform sampler2D tDiffuse;\nvarying vec2 vUv;\nvoid main() {\nvec4 color, org, tmp, add;\nfloat sample_dist, f;\nvec2 vin;\nvec2 uv = vUv;\nadd += color = org = texture2D( tDiffuse, uv );\nvin = ( uv - vec2( 0.5 ) ) * vec2( 1.4 );\nsample_dist = dot( vin, vin ) * 2.0;\nf = ( waveFactor * 100.0 + sample_dist ) * sampleDistance * 4.0;\nvec2 sampleSize = vec2(  1.0 / screenWidth, 1.0 / screenHeight ) * vec2( f );\nadd += tmp = texture2D( tDiffuse, uv + vec2( 0.111964, 0.993712 ) * sampleSize );\nif( tmp.b < color.b ) color = tmp;\nadd += tmp = texture2D( tDiffuse, uv + vec2( 0.846724, 0.532032 ) * sampleSize );\nif( tmp.b < color.b ) color = tmp;\nadd += tmp = texture2D( tDiffuse, uv + vec2( 0.943883, -0.330279 ) * sampleSize );\nif( tmp.b < color.b ) color = tmp;\nadd += tmp = texture2D( tDiffuse, uv + vec2( 0.330279, -0.943883 ) * sampleSize );\nif( tmp.b < color.b ) color = tmp;\nadd += tmp = texture2D( tDiffuse, uv + vec2( -0.532032, -0.846724 ) * sampleSize );\nif( tmp.b < color.b ) color = tmp;\nadd += tmp = texture2D( tDiffuse, uv + vec2( -0.993712, -0.111964 ) * sampleSize );\nif( tmp.b < color.b ) color = tmp;\nadd += tmp = texture2D( tDiffuse, uv + vec2( -0.707107, 0.707107 ) * sampleSize );\nif( tmp.b < color.b ) color = tmp;\ncolor = color * vec4( 2.0 ) - ( add / vec4( 8.0 ) );\ncolor = color + ( add / vec4( 8.0 ) - color ) * ( vec4( 1.0 ) - vec4( sample_dist * 0.5 ) );\ngl_FragColor = vec4( color.rgb * color.rgb * vec3( 0.95 ) + color.rgb, 1.0 );\n}"},
triangleBlur:{uniforms:{texture:{type:"t",value:0,texture:null},delta:{type:"v2",value:new THREE.Vector2(1,1)}},vertexShader:"varying vec2 vUv;\nvoid main() {\nvUv = vec2( uv.x, 1.0 - uv.y );\ngl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",fragmentShader:"#define ITERATIONS 10.0\nuniform sampler2D texture;\nuniform vec2 delta;\nvarying vec2 vUv;\nfloat random( vec3 scale, float seed ) {\nreturn fract( sin( dot( gl_FragCoord.xyz + seed, scale ) ) * 43758.5453 + seed );\n}\nvoid main() {\nvec4 color = vec4( 0.0 );\nfloat total = 0.0;\nfloat offset = random( vec3( 12.9898, 78.233, 151.7182 ), 0.0 );\nfor ( float t = -ITERATIONS; t <= ITERATIONS; t ++ ) {\nfloat percent = ( t + offset - 0.5 ) / ITERATIONS;\nfloat weight = 1.0 - abs( percent );\ncolor += texture2D( texture, vUv + delta * percent ) * weight;\ntotal += weight;\n}\ngl_FragColor = color / total;\n}"},
basic:{uniforms:{},vertexShader:"void main() {\ngl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",fragmentShader:"void main() {\ngl_FragColor = vec4( 1.0, 0.0, 0.0, 0.5 );\n}"},horizontalBlur:{uniforms:{tDiffuse:{type:"t",value:0,texture:null},h:{type:"f",value:1/512}},vertexShader:"varying vec2 vUv;\nvoid main() {\nvUv = vec2( uv.x, 1.0 - uv.y );\ngl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",fragmentShader:"uniform sampler2D tDiffuse;\nuniform float h;\nvarying vec2 vUv;\nvoid main() {\nvec4 sum = vec4( 0.0 );\nsum += texture2D( tDiffuse, vec2( vUv.x - 4.0 * h, vUv.y ) ) * 0.051;\nsum += texture2D( tDiffuse, vec2( vUv.x - 3.0 * h, vUv.y ) ) * 0.0918;\nsum += texture2D( tDiffuse, vec2( vUv.x - 2.0 * h, vUv.y ) ) * 0.12245;\nsum += texture2D( tDiffuse, vec2( vUv.x - 1.0 * h, vUv.y ) ) * 0.1531;\nsum += texture2D( tDiffuse, vec2( vUv.x, \t\t  \tvUv.y ) ) * 0.1633;\nsum += texture2D( tDiffuse, vec2( vUv.x + 1.0 * h, vUv.y ) ) * 0.1531;\nsum += texture2D( tDiffuse, vec2( vUv.x + 2.0 * h, vUv.y ) ) * 0.12245;\nsum += texture2D( tDiffuse, vec2( vUv.x + 3.0 * h, vUv.y ) ) * 0.0918;\nsum += texture2D( tDiffuse, vec2( vUv.x + 4.0 * h, vUv.y ) ) * 0.051;\ngl_FragColor = sum;\n}"},
verticalBlur:{uniforms:{tDiffuse:{type:"t",value:0,texture:null},v:{type:"f",value:1/512}},vertexShader:"varying vec2 vUv;\nvoid main() {\nvUv = vec2( uv.x, 1.0 - uv.y );\ngl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",fragmentShader:"uniform sampler2D tDiffuse;\nuniform float v;\nvarying vec2 vUv;\nvoid main() {\nvec4 sum = vec4( 0.0 );\nsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y - 4.0 * v ) ) * 0.051;\nsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y - 3.0 * v ) ) * 0.0918;\nsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y - 2.0 * v ) ) * 0.12245;\nsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y - 1.0 * v ) ) * 0.1531;\nsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y\t\t\t  ) ) * 0.1633;\nsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y + 1.0 * v ) ) * 0.1531;\nsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y + 2.0 * v ) ) * 0.12245;\nsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y + 3.0 * v ) ) * 0.0918;\nsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y + 4.0 * v ) ) * 0.051;\ngl_FragColor = sum;\n}"},
horizontalTiltShift:{uniforms:{tDiffuse:{type:"t",value:0,texture:null},h:{type:"f",value:1/512},r:{type:"f",value:0.35}},vertexShader:"varying vec2 vUv;\nvoid main() {\nvUv = vec2( uv.x, 1.0 - uv.y );\ngl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",fragmentShader:"uniform sampler2D tDiffuse;\nuniform float h;\nuniform float r;\nvarying vec2 vUv;\nvoid main() {\nvec4 sum = vec4( 0.0 );\nfloat hh = h * abs( r - vUv.y );\nsum += texture2D( tDiffuse, vec2( vUv.x - 4.0 * hh, vUv.y ) ) * 0.051;\nsum += texture2D( tDiffuse, vec2( vUv.x - 3.0 * hh, vUv.y ) ) * 0.0918;\nsum += texture2D( tDiffuse, vec2( vUv.x - 2.0 * hh, vUv.y ) ) * 0.12245;\nsum += texture2D( tDiffuse, vec2( vUv.x - 1.0 * hh, vUv.y ) ) * 0.1531;\nsum += texture2D( tDiffuse, vec2( vUv.x, \t\t  \t vUv.y ) ) * 0.1633;\nsum += texture2D( tDiffuse, vec2( vUv.x + 1.0 * hh, vUv.y ) ) * 0.1531;\nsum += texture2D( tDiffuse, vec2( vUv.x + 2.0 * hh, vUv.y ) ) * 0.12245;\nsum += texture2D( tDiffuse, vec2( vUv.x + 3.0 * hh, vUv.y ) ) * 0.0918;\nsum += texture2D( tDiffuse, vec2( vUv.x + 4.0 * hh, vUv.y ) ) * 0.051;\ngl_FragColor = sum;\n}"},
verticalTiltShift:{uniforms:{tDiffuse:{type:"t",value:0,texture:null},v:{type:"f",value:1/512},r:{type:"f",value:0.35}},vertexShader:"varying vec2 vUv;\nvoid main() {\nvUv = vec2( uv.x, 1.0 - uv.y );\ngl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",fragmentShader:"uniform sampler2D tDiffuse;\nuniform float v;\nuniform float r;\nvarying vec2 vUv;\nvoid main() {\nvec4 sum = vec4( 0.0 );\nfloat vv = v * abs( r - vUv.y );\nsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y - 4.0 * vv ) ) * 0.051;\nsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y - 3.0 * vv ) ) * 0.0918;\nsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y - 2.0 * vv ) ) * 0.12245;\nsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y - 1.0 * vv ) ) * 0.1531;\nsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y\t\t\t   ) ) * 0.1633;\nsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y + 1.0 * vv ) ) * 0.1531;\nsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y + 2.0 * vv ) ) * 0.12245;\nsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y + 3.0 * vv ) ) * 0.0918;\nsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y + 4.0 * vv ) ) * 0.051;\ngl_FragColor = sum;\n}"},
blend:{uniforms:{tDiffuse1:{type:"t",value:0,texture:null},tDiffuse2:{type:"t",value:1,texture:null},mixRatio:{type:"f",value:0.5},opacity:{type:"f",value:1}},vertexShader:"varying vec2 vUv;\nvoid main() {\nvUv = vec2( uv.x, 1.0 - uv.y );\ngl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",fragmentShader:"uniform float opacity;\nuniform float mixRatio;\nuniform sampler2D tDiffuse1;\nuniform sampler2D tDiffuse2;\nvarying vec2 vUv;\nvoid main() {\nvec4 texel1 = texture2D( tDiffuse1, vUv );\nvec4 texel2 = texture2D( tDiffuse2, vUv );\ngl_FragColor = opacity * mix( texel1, texel2, mixRatio );\n}"},
fxaa:{uniforms:{tDiffuse:{type:"t",value:0,texture:null},resolution:{type:"v2",value:new THREE.Vector2(1/1024,1/512)}},vertexShader:"varying vec2 vUv;\nvoid main() {\nvUv = vec2( uv.x, 1.0 - uv.y );\ngl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",fragmentShader:"uniform sampler2D tDiffuse;\nuniform vec2 resolution;\nvarying vec2 vUv;\n#define FXAA_REDUCE_MIN   (1.0/128.0)\n#define FXAA_REDUCE_MUL   (1.0/8.0)\n#define FXAA_SPAN_MAX     8.0\nvoid main() {\nvec3 rgbNW = texture2D( tDiffuse, ( gl_FragCoord.xy + vec2( -1.0, -1.0 ) ) * resolution ).xyz;\nvec3 rgbNE = texture2D( tDiffuse, ( gl_FragCoord.xy + vec2( 1.0, -1.0 ) ) * resolution ).xyz;\nvec3 rgbSW = texture2D( tDiffuse, ( gl_FragCoord.xy + vec2( -1.0, 1.0 ) ) * resolution ).xyz;\nvec3 rgbSE = texture2D( tDiffuse, ( gl_FragCoord.xy + vec2( 1.0, 1.0 ) ) * resolution ).xyz;\nvec3 rgbM  = texture2D( tDiffuse,  gl_FragCoord.xy  * resolution ).xyz;\nvec3 luma = vec3( 0.299, 0.587, 0.114 );\nfloat lumaNW = dot( rgbNW, luma );\nfloat lumaNE = dot( rgbNE, luma );\nfloat lumaSW = dot( rgbSW, luma );\nfloat lumaSE = dot( rgbSE, luma );\nfloat lumaM  = dot( rgbM,  luma );\nfloat lumaMin = min( lumaM, min( min( lumaNW, lumaNE ), min( lumaSW, lumaSE ) ) );\nfloat lumaMax = max( lumaM, max( max( lumaNW, lumaNE) , max( lumaSW, lumaSE ) ) );\nvec2 dir;\ndir.x = -((lumaNW + lumaNE) - (lumaSW + lumaSE));\ndir.y =  ((lumaNW + lumaSW) - (lumaNE + lumaSE));\nfloat dirReduce = max( ( lumaNW + lumaNE + lumaSW + lumaSE ) * ( 0.25 * FXAA_REDUCE_MUL ), FXAA_REDUCE_MIN );\nfloat rcpDirMin = 1.0 / ( min( abs( dir.x ), abs( dir.y ) ) + dirReduce );\ndir = min( vec2( FXAA_SPAN_MAX,  FXAA_SPAN_MAX),\nmax( vec2(-FXAA_SPAN_MAX, -FXAA_SPAN_MAX),\ndir * rcpDirMin)) * resolution;\nvec3 rgbA = 0.5 * (\ntexture2D( tDiffuse, gl_FragCoord.xy  * resolution + dir * ( 1.0 / 3.0 - 0.5 ) ).xyz +\ntexture2D( tDiffuse, gl_FragCoord.xy  * resolution + dir * ( 2.0 / 3.0 - 0.5 ) ).xyz );\nvec3 rgbB = rgbA * 0.5 + 0.25 * (\ntexture2D( tDiffuse, gl_FragCoord.xy  * resolution + dir * -0.5 ).xyz +\ntexture2D( tDiffuse, gl_FragCoord.xy  * resolution + dir * 0.5 ).xyz );\nfloat lumaB = dot( rgbB, luma );\nif ( ( lumaB < lumaMin ) || ( lumaB > lumaMax ) ) {\ngl_FragColor = vec4( rgbA, 1.0 );\n} else {\ngl_FragColor = vec4( rgbB, 1.0 );\n}\n}"},
luminosity:{uniforms:{tDiffuse:{type:"t",value:0,texture:null}},vertexShader:"varying vec2 vUv;\nvoid main() {\nvUv = vec2( uv.x, 1.0 - uv.y );\ngl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",fragmentShader:"uniform sampler2D tDiffuse;\nvarying vec2 vUv;\nvoid main() {\nvec4 texel = texture2D( tDiffuse, vUv );\nvec3 luma = vec3( 0.299, 0.587, 0.114 );\nfloat v = dot( texel.xyz, luma );\ngl_FragColor = vec4( v, v, v, texel.w );\n}"},normalmap:{uniforms:{heightMap:{type:"t",
value:0,texture:null},resolution:{type:"v2",value:new THREE.Vector2(512,512)},scale:{type:"v2",value:new THREE.Vector2(1,1)},height:{type:"f",value:0.05}},vertexShader:"varying vec2 vUv;\nvoid main() {\nvUv = vec2( uv.x, 1.0 - uv.y );\ngl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",fragmentShader:"uniform float height;\nuniform vec2 resolution;\nuniform sampler2D heightMap;\nvarying vec2 vUv;\nvoid main() {\nfloat val = texture2D( heightMap, vUv ).x;\nfloat valU = texture2D( heightMap, vUv + vec2( 1.0 / resolution.x, 0.0 ) ).x;\nfloat valV = texture2D( heightMap, vUv + vec2( 0.0, 1.0 / resolution.y ) ).x;\ngl_FragColor = vec4( ( 0.5 * normalize( vec3( val - valU, val - valV, height  ) ) + 0.5 ), 1.0 );\n}"},
buildKernel:function(a){var b,c,d,e,g=2*Math.ceil(a*3)+1;g>25&&(g=25);e=(g-1)*0.5;c=Array(g);for(b=d=0;b<g;++b)c[b]=Math.exp(-((b-e)*(b-e))/(2*a*a)),d+=c[b];for(b=0;b<g;++b)c[b]/=d;return c}};THREE.RenderTargetWrapping=THREE.ClampToEdgeWrapping;THREE.RenderTargetFilter=THREE.NearestFilter;
THREE.ParticleComposer=function(a){this.renderer=a;this.renderTargetParameters={minFilter:THREE.RenderTargetFilter,magFilter:THREE.RenderTargetFilter,wrapS:THREE.RenderTargetWrapping,wrapT:THREE.RenderTargetWrapping,format:THREE.RGBFormat,stencilBuffer:!1,depthBuffer:!1,type:THREE.FloatType};this.renderTargetPosition=new THREE.WebGLRenderTarget(THREE.ParticleComposer.resolution,THREE.ParticleComposer.resolution,this.renderTargetParameters);this.renderTargetVelocity=this.renderTargetPosition.clone();
this.writeBuffer=this.renderTargetPosition.clone();if(!a.context.getExtension("OES_texture_float"))throw document.getElementById("error").style.display="block",document.getElementById("error").innerHTML="Requires OES_texture_float extension<br/>","Requires OES_texture_float extension";if(!a.context.getParameter(a.context.MAX_VERTEX_TEXTURE_IMAGE_UNITS))document.getElementById("error").style.display="block",document.getElementById("error").innerHTML+="Your graphic card doesn't support vertex shader textures.";
this.velocityPass=new THREE.VelocityPass(this.renderTargetPosition,this.renderTargetVelocity);this.positionPass=new THREE.PositionPass(this.renderTargetPosition,this.renderTargetVelocity)};THREE.ParticleComposer.prototype={render:function(a){this.renderVelocity(a);this.renderPosition(a)},renderPosition:function(a){this.positionPass.render(this.renderer,this.renderTargetPosition,a)},renderVelocity:function(a){this.velocityPass.render(this.renderer,this.renderTargetVelocity,a)}};
var splitted_url=window.location.href.split("?"),million=splitted_url.length>1&&splitted_url[1]=="million";THREE.ParticleComposer.resolution=million?1024:256;THREE.ParticleComposer.geometry=new THREE.PlaneGeometry(1,1);THREE.ParticleComposer.quad=new THREE.Mesh(THREE.ParticleComposer.geometry,null);THREE.ParticleComposer.quad.scale.set(THREE.ParticleComposer.resolution,THREE.ParticleComposer.resolution,1);THREE.ParticleComposer.scene=new THREE.Scene;THREE.ParticleComposer.scene.add(THREE.ParticleComposer.quad);
THREE.ParticleComposer.camera=new THREE.OrthographicCamera(THREE.ParticleComposer.resolution/-2,THREE.ParticleComposer.resolution/2,THREE.ParticleComposer.resolution/2,THREE.ParticleComposer.resolution/-2,-1E4,1E4);THREE.ParticleComposer.scene.add(THREE.ParticleComposer.camera);THREE.MAX_ATTRACTORS=8;
THREE.VelocityPass=function(a){var b=THREE.VelocityShader;this.uniforms=THREE.UniformsUtils.clone(b.uniforms);for(var c={pixels:[],width:THREE.ParticleComposer.resolution,height:THREE.ParticleComposer.resolution},d=0;d<c.width*c.height;d++)c.pixels.push((Math.random()-0.5)*2),c.pixels.push((Math.random()-0.5)*2),c.pixels.push((Math.random()-0.5)*2);this.texture=new THREE.DataTexture(new Float32Array(c.pixels),THREE.ParticleComposer.resolution,THREE.ParticleComposer.resolution,THREE.RGBFormat,new THREE.UVMapping,
THREE.RenderTargetWrapping,THREE.RenderTargetWrapping,THREE.RenderTargetFilter,THREE.RenderTargetFilter);this.texture.needsUpdate=!0;this.uniforms.tPosition.texture=a;this.uniforms.tVelocity.texture=this.texture;this.uniforms.tVelocity.texture.needsUpdate=!0;this.uniforms.brake.value=0.992;this.uniforms.attrPosition._array=new Float32Array(3*THREE.MAX_ATTRACTORS);for(d=0;d<THREE.MAX_ATTRACTORS;d++)this.uniforms.attrActive.value[d]=1,this.uniforms.attrAttract.value[d]=1,this.uniforms.attrForce.value[d]=
1E3;a=splitted_url.length>1&&splitted_url[1]=="million"?3E4:18E3;this.uniforms.attrPosition._array[0]=a;this.uniforms.attrPosition._array[1]=a;this.uniforms.attrPosition._array[2]=a;this.uniforms.attrPosition._array[3]=-a;this.uniforms.attrPosition._array[4]=-a;this.uniforms.attrPosition._array[5]=-a;this.uniforms.attrPosition._array[6]=a;this.uniforms.attrPosition._array[7]=-a;this.uniforms.attrPosition._array[8]=a;this.uniforms.attrPosition._array[9]=-a;this.uniforms.attrPosition._array[10]=a;this.uniforms.attrPosition._array[11]=
-a;this.uniforms.attrPosition._array[12]=-a;this.uniforms.attrPosition._array[13]=-a;this.uniforms.attrPosition._array[14]=a;this.uniforms.attrPosition._array[15]=a;this.uniforms.attrPosition._array[16]=-a;this.uniforms.attrPosition._array[17]=-a;this.uniforms.attrPosition._array[18]=a;this.uniforms.attrPosition._array[19]=a;this.uniforms.attrPosition._array[20]=-a;this.uniforms.attrPosition._array[21]=-a;this.uniforms.attrPosition._array[22]=a;this.uniforms.attrPosition._array[23]=a;this.material=
new THREE.ShaderMaterial({uniforms:this.uniforms,vertexShader:b.vertexShader,fragmentShader:b.fragmentShader})};THREE.VelocityPass.prototype={render:function(a,b){THREE.ParticleComposer.quad.material=this.material;a.render(THREE.ParticleComposer.scene,THREE.ParticleComposer.camera,b,!1);this.texture.__webglTexture=b.__webglTexture}};
THREE.PositionPass=function(a,b){var c=THREE.PositionShader;this.uniforms=THREE.UniformsUtils.clone(c.uniforms);for(var d={pixels:[],width:THREE.ParticleComposer.resolution,height:THREE.ParticleComposer.resolution},e,g,f,h=0;h<d.width*d.height;h++)e=Math.random()*2*Math.PI,g=Math.random()*2*Math.PI,f=Math.random()*24E4,d.pixels.push(f*Math.cos(g)*Math.cos(e)),d.pixels.push(f*Math.cos(g)*Math.sin(e)),d.pixels.push(f*Math.sin(g));this.texture=new THREE.DataTexture(new Float32Array(d.pixels),THREE.ParticleComposer.resolution,
THREE.ParticleComposer.resolution,THREE.RGBFormat,new THREE.UVMapping,THREE.RenderTargetWrapping,THREE.RenderTargetWrapping,THREE.RenderTargetFilter,THREE.RenderTargetFilter);this.texture.needsUpdate=!0;this.uniforms.tPosition.texture=this.texture;this.uniforms.tVelocity.texture=b;this.material=new THREE.ShaderMaterial({uniforms:this.uniforms,vertexShader:c.vertexShader,fragmentShader:c.fragmentShader})};
THREE.PositionPass.prototype={render:function(a,b){THREE.ParticleComposer.quad.material=this.material;a.render(THREE.ParticleComposer.scene,THREE.ParticleComposer.camera,b,!1);this.texture.__webglTexture=b.__webglTexture}};THREE.PositionShader={uniforms:{tVelocity:{type:"t",value:0,texture:null},tPosition:{type:"t",value:1,texture:null}},vertexShader:"varying vec2 vUv;void main(){vUv=vec2(uv.r,1.-uv.g),gl_Position=projectionMatrix*modelViewMatrix*vec4(position,1.);}",fragmentShader:"uniform sampler2D tVelocity,tPosition;varying vec2 vUv;void main(){vec3 t=texture2D(tPosition,vUv).rgb,v=texture2D(tVelocity,vUv).rgb;t=t+v;gl_FragColor=vec4(t,1.);}"};
THREE.VelocityShader={uniforms:{tVelocity:{type:"t",value:0,texture:null},tPosition:{type:"t",value:1,texture:null},brake:{type:"f",value:0},attrAll:{type:"f",value:0},attrPosition:{type:"v3v",value:[]},attrActive:{type:"fv1",value:[]},attrAttract:{type:"fv1",value:[]},attrForce:{type:"fv1",value:[]},parentMatrixAttr:{type:"m4",value:new THREE.Matrix4}},vertexShader:"varying vec2 vUv;void main(){vUv=vec2(uv.r,1.-uv.g),gl_Position=projectionMatrix*modelViewMatrix*vec4(position,1.);}",fragmentShader:"#define MAX_ATTRACTORS 8\nuniform sampler2D tVelocity,tPosition;uniform float brake,attrAll,attrActive[MAX_ATTRACTORS],attrAttract[MAX_ATTRACTORS],attrForce[MAX_ATTRACTORS];uniform vec3 attrPosition[MAX_ATTRACTORS];uniform mat4 parentMatrixAttr;varying vec2 vUv;void main(){vec3 a=texture2D(tPosition,vUv).rgb,t=texture2D(tVelocity,vUv).rgb,v,b,r;float i;int m=int(floor(7.99999*vUv.r));\n#if MAX_ATTRACTORS>0\nfor(int M=0;M<MAX_ATTRACTORS;M++){if(m==M||attrAll==1.){r=(parentMatrixAttr*vec4(attrPosition[M],1.)).rgb;i=pow(distance(a,r),2.);if(i>.01){v=r-a;if(attrAttract[M]==1.)b=clamp(abs(v)/i,.04,1.)*(v/abs(v)),t+=attrForce[M]*b;else t-=attrForce[M]*v/i;}if(attrAll!=1.){break;}}}\n#endif\nt*=brake;gl_FragColor=vec4(t,1.);}"};
var ParticleMaterial={texture:THREE.ImageUtils.loadTexture("textures/spark1.png"),vertexShader:"uniform sampler2D tPosition;attribute vec2 tCoord;varying vec3 aColor;void main(){vec4 v=texture2D(tPosition,tCoord);vec3 r=v.rgb;int t=int(floor(tCoord.r*7.99999));float n=fract(tCoord.r*7.99999);if(t==3)aColor=vec3(1.,.1*n,.1*n);if(t==1)aColor=vec3(.3,n,.3);if(t==2)aColor=vec3(n+.3,.3,0.);if(t==0)aColor=vec3(.6*n,1.,0.);if(t==6)aColor=vec3(n,.5,.2);if(t==5)aColor=vec3(.4,.6*n,1.);if(t==4)aColor=vec3(1.2*n,.2,.6);if(t==7)aColor=vec3(0.,.3,1.5*n);vec4 m=modelViewMatrix*vec4(r,1.);gl_PointSize=6.;gl_Position=projectionMatrix*m;}",
fragmentShader:"uniform sampler2D texture;\nvarying vec3 aColor;\nvoid main() {\ngl_FragColor = vec4(aColor,1.0) * texture2D( texture, gl_PointCoord );\n}",get:function(){return new THREE.ShaderMaterial({uniforms:{texture:{type:"t",value:0,texture:this.texture},tPosition:{type:"t",value:1,texture:null}},attributes:{tCoord:{type:"v2",value:[]}},vertexShader:this.vertexShader,fragmentShader:this.fragmentShader,blending:THREE.AdditiveBlending,depthTest:!1,transparent:!0,sizeAttenuation:!0})}},ParticleScene=
{width:window.innerWidth,height:window.innerHeight,halfWidth:window.innerWidth/2,halfHeight:window.innerHeight,stats:null,container:null,mouseX:0,mouseY:0,delta:0,deltaWheel:0,scene:null,camera:null,renderer:null,particleComposer:null,ps:null,material:null,spheres:null,audioElement:null,r:0,composer:null,expulseForce:million?5E6:1E6,init:function(){this.camera=new THREE.PerspectiveCamera(75,this.width/this.height,3,1E6);this.camera.position.z=million?16E4:8E4;this.scene=new THREE.Scene;this.scene.add(this.camera);
this.createHUD();this.renderer=new THREE.WebGLRenderer({clearColor:0,clearAlpha:1,antialias:!0});this.renderer.setSize(this.width,this.height);this.renderer.autoClear=!1;this.particleComposer=new THREE.ParticleComposer(this.renderer);this.spheres=new THREE.Object3D;this.scene.add(this.spheres);var a=new THREE.Geometry;this.material=ParticleMaterial.get();for(i=0;i<THREE.ParticleComposer.resolution;i++)for(j=0;j<THREE.ParticleComposer.resolution;j++)vector=new THREE.Vector3(0,0,0),a.vertices.push(new THREE.Vertex(vector)),
this.material.attributes.tCoord.value.push(new THREE.Vector2(i/THREE.ParticleComposer.resolution,j/THREE.ParticleComposer.resolution));this.ps=new THREE.ParticleSystem(a,this.material);this.scene.add(this.ps);this.container.appendChild(this.renderer.domElement);this.stats=new Stats;this.stats.domElement.style.position="absolute";this.stats.domElement.style.top="0px";this.container.appendChild(this.stats.domElement);document.addEventListener("mousedown",this.mouseDown,!1);document.addEventListener("mouseup",
this.mouseUp,!1);document.addEventListener("mouseout",this.mouseOut,!1);document.addEventListener("keydown",this.keyDown,!1);document.addEventListener("keyup",this.keyUp,!1);document.onmousewheel=this.wheel;window.onresize=this.resize;var a=new THREE.RenderPass(this.scene,this.camera),b=new THREE.BloomPass(2,25,4,256),c=new THREE.ShaderPass(THREE.ShaderExtras.screen);c.renderToScreen=!0;this.composer=new THREE.EffectComposer(this.renderer);this.composer.addPass(a);this.composer.addPass(b);this.composer.addPass(c)},
resize:function(){ParticleScene.width=window.innerWidth;ParticleScene.height=window.innerHeight;ParticleScene.renderer.setSize(ParticleScene.width,ParticleScene.height);ParticleScene.camera.aspect=ParticleScene.width/ParticleScene.height;ParticleScene.camera.updateProjectionMatrix()},wheel:function(a){if( (ParticleScene.camera.position.z > 50000 && a.wheelDelta > 0 ) || a.wheelDelta < 0 ) {ParticleScene.deltaWheel=-a.wheelDelta*100}},mouseDown:function(){ParticleScene.particleComposer.velocityPass.material.uniforms.attrAll.value=1},mouseUp:function(){ParticleScene.particleComposer.velocityPass.material.uniforms.attrAll.value=
0},mouseOut:function(){ParticleScene.particleComposer.velocityPass.material.uniforms.attrAll.value=0},keyDown:function(a){if(a.keyCode==32)for(a=0;a<ParticleScene.particleComposer.velocityPass.material.uniforms.attrAttract.value.length;a++)ParticleScene.particleComposer.velocityPass.material.uniforms.attrAttract.value[a]=0,ParticleScene.particleComposer.velocityPass.material.uniforms.attrForce.value[a]=ParticleScene.expulseForce},keyUp:function(a){if(a.keyCode==32)for(a=0;a<ParticleScene.particleComposer.velocityPass.material.uniforms.attrAttract.value.length;a++)ParticleScene.particleComposer.velocityPass.material.uniforms.attrAttract.value[a]=
1,ParticleScene.particleComposer.velocityPass.material.uniforms.attrForce.value[a]=1E3},animate:function(){this.render()},delta:null,time:null,oldTime:null,render:function(){if(!this.oldTime)this.oldTime=(new Date).getTime();this.time=(new Date).getTime();this.delta=0.1*(this.time-this.oldTime);this.oldTime=this.time;if(this.deltaWheel!=0)this.camera.position.z+=this.deltaWheel,this.camera.updateMatrix(),this.deltaWheel=0;this.spheres.rotation.y+=0.0080;this.spheres.rotation.x+=0.0080;this.spheres.rotation.z+=
0.0080;this.spheres.updateMatrix();this.particleComposer.velocityPass.material.uniforms.parentMatrixAttr.value=this.spheres.matrix;this.renderer.clear();this.particleComposer.render(this.delta);this.renderer.autoClear=!1;this.composer.render()},cameraOrtho:null,hudMaterial:null,hudMaterial2:null,hudMesh:null,sceneHUD:null,createHUD:function(){this.cameraOrtho=new THREE.OrthographicCamera(this.width/-2,this.height/2,this.height/2,this.height/-2,-10,1E3);this.cameraOrtho.position.z=10;var a=THREE.ShaderExtras.screen,
b=new THREE.UniformsUtils.clone(a.uniforms),c=new THREE.UniformsUtils.clone(a.uniforms);this.hudMaterial=new THREE.ShaderMaterial({vertexShader:a.vertexShader,fragmentShader:a.fragmentShader,uniforms:b});this.hudMaterial2=new THREE.ShaderMaterial({vertexShader:a.vertexShader,fragmentShader:a.fragmentShader,uniforms:c});b=new THREE.PlaneGeometry(256,256);a=new THREE.Mesh(b,this.hudMaterial);a.position.x=(this.width-256)*-0.5+20;a.position.y=(this.height-256)*-0.5;b=new THREE.Mesh(b,this.hudMaterial2);
b.position.x=(this.width-256)*-0.5+512;b.position.y=(this.height-256)*-0.5;this.sceneHUD=new THREE.Scene;this.sceneHUD.add(a);this.sceneHUD.add(b);this.cameraOrtho.lookAt(this.sceneHUD.position)}};
THREE.EffectComposer=function(a,b){this.renderer=a;this.renderTarget1=b;if(this.renderTarget1===void 0)this.renderTargetParameters={minFilter:THREE.LinearFilter,magFilter:THREE.LinearFilter,format:THREE.RGBFormat,stencilBufer:!1},this.renderTarget1=new THREE.WebGLRenderTarget(window.innerWidth,window.innerHeight,this.renderTargetParameters);this.renderTarget2=this.renderTarget1.clone();this.writeBuffer=this.renderTarget1;this.readBuffer=this.renderTarget2;this.passes=[];this.copyPass=new THREE.ShaderPass(THREE.ShaderExtras.screen)};
THREE.EffectComposer.prototype={swapBuffers:function(){var a=this.readBuffer;this.readBuffer=this.writeBuffer;this.writeBuffer=a},addPass:function(a){this.passes.push(a)},render:function(a){this.writeBuffer=this.renderTarget1;this.readBuffer=this.renderTarget2;var b=!1,c,d,e=this.passes.length;for(d=0;d<e;d++)if(c=this.passes[d],c.enabled){c.render(this.renderer,this.writeBuffer,this.readBuffer,a,b);if(c.needsSwap){if(b){var g=this.renderer.context;g.stencilFunc(g.NOTEQUAL,1,4294967295);this.copyPass.render(this.renderer,
this.writeBuffer,this.readBuffer,a);g.stencilFunc(g.EQUAL,1,4294967295)}this.swapBuffers()}c instanceof THREE.MaskPass?b=!0:c instanceof THREE.ClearMaskPass&&(b=!1)}},reset:function(a){this.renderTarget1=a;if(this.renderTarget1===void 0)this.renderTarget1=new THREE.WebGLRenderTarget(window.innerWidth,window.innerHeight,this.renderTargetParameters);this.renderTarget2=this.renderTarget1.clone();this.writeBuffer=this.renderTarget1;this.readBuffer=this.renderTarget2;THREE.EffectComposer.quad.scale.set(window.innerWidth,
window.innerHeight,1);THREE.EffectComposer.camera.left=window.innerWidth/-2;THREE.EffectComposer.camera.right=window.innerWidth/2;THREE.EffectComposer.camera.top=window.innerHeight/2;THREE.EffectComposer.camera.bottom=window.innerHeight/-2;THREE.EffectComposer.camera.updateProjectionMatrix()}};THREE.EffectComposer.geometry=new THREE.PlaneGeometry(1,1);THREE.EffectComposer.quad=new THREE.Mesh(THREE.EffectComposer.geometry,null);THREE.EffectComposer.quad.position.z=-100;
THREE.EffectComposer.quad.scale.set(window.innerWidth,window.innerHeight,1);THREE.EffectComposer.scene=new THREE.Scene;THREE.EffectComposer.scene.add(THREE.EffectComposer.quad);THREE.EffectComposer.camera=new THREE.OrthographicCamera(window.innerWidth/-2,window.innerWidth/2,window.innerHeight/2,window.innerHeight/-2,-1E4,1E4);THREE.EffectComposer.scene.add(THREE.EffectComposer.camera);
THREE.ShaderPass=function(a,b){this.textureID=b!==void 0?b:"tDiffuse";this.uniforms=THREE.UniformsUtils.clone(a.uniforms);this.material=new THREE.ShaderMaterial({uniforms:this.uniforms,vertexShader:a.vertexShader,fragmentShader:a.fragmentShader});this.renderToScreen=!1;this.needsSwap=this.enabled=!0;this.clear=!1};
THREE.ShaderPass.prototype={render:function(a,b,c){if(this.uniforms[this.textureID])this.uniforms[this.textureID].texture=c;THREE.EffectComposer.quad.material=this.material;this.renderToScreen?a.render(THREE.EffectComposer.scene,THREE.EffectComposer.camera):a.render(THREE.EffectComposer.scene,THREE.EffectComposer.camera,b,this.clear)}};
THREE.BloomPass=function(a,b,c,d){var a=a!==void 0?a:1,b=b!==void 0?b:25,c=c!==void 0?c:4,d=d!==void 0?d:256,e={minFilter:THREE.LinearFilter,magFilter:THREE.LinearFilter,format:THREE.RGBFormat};this.renderTargetX=new THREE.WebGLRenderTarget(d,d,e);this.renderTargetY=new THREE.WebGLRenderTarget(d,d,e);d=THREE.ShaderExtras.screen;this.screenUniforms=THREE.UniformsUtils.clone(d.uniforms);this.screenUniforms.opacity.value=a;this.materialScreen=new THREE.ShaderMaterial({uniforms:this.screenUniforms,vertexShader:d.vertexShader,
fragmentShader:d.fragmentShader,blending:THREE.AdditiveBlending,transparent:!0});a=THREE.ShaderExtras.convolution;this.convolutionUniforms=THREE.UniformsUtils.clone(a.uniforms);this.convolutionUniforms.uImageIncrement.value=THREE.BloomPass.blurx;this.convolutionUniforms.cKernel.value=THREE.ShaderExtras.buildKernel(c);this.materialConvolution=new THREE.ShaderMaterial({uniforms:this.convolutionUniforms,vertexShader:"#define KERNEL_SIZE "+b+".0\n"+a.vertexShader,fragmentShader:"#define KERNEL_SIZE "+
b+"\n"+a.fragmentShader});this.enabled=!0;this.clear=this.needsSwap=!1};
THREE.BloomPass.prototype={render:function(a,b,c,d,e){e&&a.context.disable(a.context.STENCIL_TEST);THREE.EffectComposer.quad.material=this.materialConvolution;this.convolutionUniforms.tDiffuse.texture=c;this.convolutionUniforms.uImageIncrement.value=THREE.BloomPass.blurX;a.render(THREE.EffectComposer.scene,THREE.EffectComposer.camera,this.renderTargetX,!0);this.convolutionUniforms.tDiffuse.texture=this.renderTargetX;this.convolutionUniforms.uImageIncrement.value=THREE.BloomPass.blurY;a.render(THREE.EffectComposer.scene,
THREE.EffectComposer.camera,this.renderTargetY,!0);THREE.EffectComposer.quad.material=this.materialScreen;this.screenUniforms.tDiffuse.texture=this.renderTargetY;e&&a.context.enable(a.context.STENCIL_TEST);a.render(THREE.EffectComposer.scene,THREE.EffectComposer.camera,c,this.clear)}};THREE.BloomPass.blurX=new THREE.Vector2(0.001953125,0);THREE.BloomPass.blurY=new THREE.Vector2(0,0.001953125);THREE.MaskPass=function(a,b){this.scene=a;this.camera=b;this.clear=this.enabled=!0;this.needsSwap=!1};
THREE.MaskPass.prototype={render:function(a,b,c){var d=a.context;d.colorMask(!1,!1,!1,!1);d.depthMask(!1);d.enable(d.STENCIL_TEST);d.stencilOp(d.REPLACE,d.REPLACE,d.REPLACE);d.stencilFunc(d.ALWAYS,1,4294967295);a.render(this.scene,this.camera,c,this.clear);a.render(this.scene,this.camera,b,this.clear);d.colorMask(!0,!0,!0,!0);d.depthMask(!0);d.stencilFunc(d.EQUAL,1,4294967295);d.stencilOp(d.KEEP,d.KEEP,d.KEEP)}};THREE.ClearMaskPass=function(){this.enabled=!0};
THREE.ClearMaskPass.prototype={render:function(a){a=a.context;a.disable(a.STENCIL_TEST)}};THREE.RenderPass=function(a,b,c,d,e){this.scene=a;this.camera=b;this.overrideMaterial=c;this.clearColor=d;this.clearAlpha=e!==void 0?e:1;this.oldClearColor=new THREE.Color;this.oldClearAlpha=1;this.clear=this.enabled=!0;this.needsSwap=!1};
THREE.RenderPass.prototype={render:function(a,b,c){this.scene.overrideMaterial=this.overrideMaterial;if(this.clearColor)this.oldClearColor.copy(a.getClearColor()),this.oldClearAlpha=a.getClearAlpha(),a.setClearColor(this.clearColor,this.clearAlpha);a.render(this.scene,this.camera,c,this.clear);this.clearColor&&a.setClearColor(this.oldClearColor,this.oldClearAlpha);this.scene.overrideMaterial=null}};
THREE.ColorUtils={adjustHSV:function(a,b,c,d){var e=THREE.ColorUtils.__hsv;THREE.ColorUtils.rgbToHsv(a,e);e.h=THREE.Math.clamp(e.h+b,0,1);e.s=THREE.Math.clamp(e.s+c,0,1);e.v=THREE.Math.clamp(e.v+d,0,1);a.setHSV(e.h,e.s,e.v)},rgbToHsv:function(a,b){var c=a.r,d=a.g,e=a.b,g=Math.max(Math.max(c,d),e),f=Math.min(Math.min(c,d),e);if(f===g)f=c=0;else{var h=g-f,f=h/g,c=c===g?(d-e)/h:d===g?2+(e-c)/h:4+(c-d)/h;c/=6;c<0&&(c+=1);c>1&&(c-=1)}b===void 0&&(b={h:0,s:0,v:0});b.h=c;b.s=f;b.v=g;return b}};
THREE.ColorUtils.__hsv={h:0,s:0,v:0};
THREE.GeometryUtils={merge:function(a,b){for(var c,d,e=a.vertices.length,g=b instanceof THREE.Mesh?b.geometry:b,f=a.vertices,h=g.vertices,k=a.faces,n=g.faces,m=a.faceVertexUvs[0],r=g.faceVertexUvs[0],q={},o=0;o<a.materials.length;o++)q[a.materials[o].id]=o;if(b instanceof THREE.Mesh)b.matrixAutoUpdate&&b.updateMatrix(),c=b.matrix,d=new THREE.Matrix4,d.extractRotation(c,b.scale);for(var o=0,t=h.length;o<t;o++){var p=new THREE.Vertex(h[o].position.clone());c&&c.multiplyVector3(p.position);f.push(p)}o=
0;for(t=n.length;o<t;o++){var f=n[o],s,v,y=f.vertexNormals,w=f.vertexColors;f instanceof THREE.Face3?s=new THREE.Face3(f.a+e,f.b+e,f.c+e):f instanceof THREE.Face4&&(s=new THREE.Face4(f.a+e,f.b+e,f.c+e,f.d+e));s.normal.copy(f.normal);d&&d.multiplyVector3(s.normal);h=0;for(p=y.length;h<p;h++)v=y[h].clone(),d&&d.multiplyVector3(v),s.vertexNormals.push(v);s.color.copy(f.color);h=0;for(p=w.length;h<p;h++)v=w[h],s.vertexColors.push(v.clone());if(f.materialIndex!==void 0){h=g.materials[f.materialIndex];
p=q[h.id];if(p===void 0)p=a.materials.length,a.materials.push(h);s.materialIndex=p}s.centroid.copy(f.centroid);c&&c.multiplyVector3(s.centroid);k.push(s)}o=0;for(t=r.length;o<t;o++){c=r[o];d=[];h=0;for(p=c.length;h<p;h++)d.push(new THREE.UV(c[h].u,c[h].v));m.push(d)}},clone:function(a){var b=new THREE.Geometry,c,d=a.vertices,e=a.faces,g=a.faceVertexUvs[0];if(a.materials)b.materials=a.materials.slice();a=0;for(c=d.length;a<c;a++){var f=new THREE.Vertex(d[a].position.clone());b.vertices.push(f)}a=0;
for(c=e.length;a<c;a++){var h=e[a],k,n,m=h.vertexNormals,r=h.vertexColors;h instanceof THREE.Face3?k=new THREE.Face3(h.a,h.b,h.c):h instanceof THREE.Face4&&(k=new THREE.Face4(h.a,h.b,h.c,h.d));k.normal.copy(h.normal);d=0;for(f=m.length;d<f;d++)n=m[d],k.vertexNormals.push(n.clone());k.color.copy(h.color);d=0;for(f=r.length;d<f;d++)n=r[d],k.vertexColors.push(n.clone());k.materialIndex=h.materialIndex;k.centroid.copy(h.centroid);b.faces.push(k)}a=0;for(c=g.length;a<c;a++){e=g[a];k=[];d=0;for(f=e.length;d<
f;d++)k.push(new THREE.UV(e[d].u,e[d].v));b.faceVertexUvs[0].push(k)}return b},randomPointInTriangle:function(a,b,c){var d,e,g,f=new THREE.Vector3,h=THREE.GeometryUtils.__v1;d=THREE.GeometryUtils.random();e=THREE.GeometryUtils.random();d+e>1&&(d=1-d,e=1-e);g=1-d-e;f.copy(a);f.multiplyScalar(d);h.copy(b);h.multiplyScalar(e);f.addSelf(h);h.copy(c);h.multiplyScalar(g);f.addSelf(h);return f},randomPointInFace:function(a,b,c){var d,e,g;if(a instanceof THREE.Face3)return d=b.vertices[a.a].position,e=b.vertices[a.b].position,
g=b.vertices[a.c].position,THREE.GeometryUtils.randomPointInTriangle(d,e,g);else if(a instanceof THREE.Face4){d=b.vertices[a.a].position;e=b.vertices[a.b].position;g=b.vertices[a.c].position;var b=b.vertices[a.d].position,f;c?a._area1&&a._area2?(c=a._area1,f=a._area2):(c=THREE.GeometryUtils.triangleArea(d,e,b),f=THREE.GeometryUtils.triangleArea(e,g,b),a._area1=c,a._area2=f):(c=THREE.GeometryUtils.triangleArea(d,e,b),f=THREE.GeometryUtils.triangleArea(e,g,b));return THREE.GeometryUtils.random()*(c+
f)<c?THREE.GeometryUtils.randomPointInTriangle(d,e,b):THREE.GeometryUtils.randomPointInTriangle(e,g,b)}},randomPointsInGeometry:function(a,b){function c(a){function c(b,d){if(d<b)return b;var e=b+Math.floor((d-b)/2);return n[e]>a?c(b,e-1):n[e]<a?c(e+1,d):e}return c(0,n.length-1)}var d,e,g=a.faces,f=a.vertices,h=g.length,k=0,n=[],m,r,q,o;for(e=0;e<h;e++){d=g[e];if(d instanceof THREE.Face3)m=f[d.a].position,r=f[d.b].position,q=f[d.c].position,d._area=THREE.GeometryUtils.triangleArea(m,r,q);else if(d instanceof
THREE.Face4)m=f[d.a].position,r=f[d.b].position,q=f[d.c].position,o=f[d.d].position,d._area1=THREE.GeometryUtils.triangleArea(m,r,o),d._area2=THREE.GeometryUtils.triangleArea(r,q,o),d._area=d._area1+d._area2;k+=d._area;n[e]=k}d=[];f={};for(e=0;e<b;e++)h=THREE.GeometryUtils.random()*k,h=c(h),d[e]=THREE.GeometryUtils.randomPointInFace(g[h],a,!0),f[h]?f[h]+=1:f[h]=1;return d},triangleArea:function(a,b,c){var d,e=THREE.GeometryUtils.__v1;e.sub(a,b);d=e.length();e.sub(a,c);a=e.length();e.sub(b,c);c=e.length();
b=0.5*(d+a+c);return Math.sqrt(b*(b-d)*(b-a)*(b-c))},center:function(a){a.computeBoundingBox();var b=new THREE.Matrix4;b.setTranslation(-0.5*(a.boundingBox.x[1]+a.boundingBox.x[0]),-0.5*(a.boundingBox.y[1]+a.boundingBox.y[0]),-0.5*(a.boundingBox.z[1]+a.boundingBox.z[0]));a.applyMatrix(b);a.computeBoundingBox()}};THREE.GeometryUtils.random=THREE.Math.random16;THREE.GeometryUtils.__v1=new THREE.Vector3;
THREE.ImageUtils={loadTexture:function(a,b,c){var d=new Image,e=new THREE.Texture(d,b);d.onload=function(){e.needsUpdate=!0;c&&c(this)};d.crossOrigin="";d.src=a;return e},loadTextureCube:function(a,b,c){var d,e=[],g=new THREE.Texture(e,b),b=e.loadCount=0;for(d=a.length;b<d;++b)e[b]=new Image,e[b].onload=function(){e.loadCount+=1;if(e.loadCount===6)g.needsUpdate=!0;c&&c(this)},e[b].crossOrigin="",e[b].src=a[b];return g},getNormalMap:function(a,b){var c=function(a){var c=Math.sqrt(a[0]*a[0]+a[1]*a[1]+
a[2]*a[2]);return[a[0]/c,a[1]/c,a[2]/c]};b|=1;var d=a.width,e=a.height,g=document.createElement("canvas");g.width=d;g.height=e;var f=g.getContext("2d");f.drawImage(a,0,0);for(var h=f.getImageData(0,0,d,e).data,k=f.createImageData(d,e),n=k.data,m=0;m<d;m++)for(var r=1;r<e;r++){var q=r-1<0?e-1:r-1,o=(r+1)%e,t=m-1<0?d-1:m-1,p=(m+1)%d,s=[],v=[0,0,h[(r*d+m)*4]/255*b];s.push([-1,0,h[(r*d+t)*4]/255*b]);s.push([-1,-1,h[(q*d+t)*4]/255*b]);s.push([0,-1,h[(q*d+m)*4]/255*b]);s.push([1,-1,h[(q*d+p)*4]/255*b]);
s.push([1,0,h[(r*d+p)*4]/255*b]);s.push([1,1,h[(o*d+p)*4]/255*b]);s.push([0,1,h[(o*d+m)*4]/255*b]);s.push([-1,1,h[(o*d+t)*4]/255*b]);q=[];t=s.length;for(o=0;o<t;o++){var p=s[o],y=s[(o+1)%t],p=[p[0]-v[0],p[1]-v[1],p[2]-v[2]],y=[y[0]-v[0],y[1]-v[1],y[2]-v[2]];q.push(c([p[1]*y[2]-p[2]*y[1],p[2]*y[0]-p[0]*y[2],p[0]*y[1]-p[1]*y[0]]))}s=[0,0,0];for(o=0;o<q.length;o++)s[0]+=q[o][0],s[1]+=q[o][1],s[2]+=q[o][2];s[0]/=q.length;s[1]/=q.length;s[2]/=q.length;v=(r*d+m)*4;n[v]=(s[0]+1)/2*255|0;n[v+1]=(s[1]+0.5)*
255|0;n[v+2]=s[2]*255|0;n[v+3]=255}f.putImageData(k,0,0);return g}};
THREE.SceneUtils={showHierarchy:function(a,b){THREE.SceneUtils.traverseHierarchy(a,function(a){a.visible=b})},traverseHierarchy:function(a,b){var c,d,e=a.children.length;for(d=0;d<e;d++)c=a.children[d],b(c),THREE.SceneUtils.traverseHierarchy(c,b)},createMultiMaterialObject:function(a,b){var c,d=b.length,e=new THREE.Object3D;for(c=0;c<d;c++){var g=new THREE.Mesh(a,b[c]);e.add(g)}return e},cloneObject:function(a){var b;a instanceof THREE.MorphAnimMesh?(b=new THREE.MorphAnimMesh(a.geometry,a.material),
b.duration=a.duration,b.mirroredLoop=a.mirroredLoop,b.time=a.time,b.lastKeyframe=a.lastKeyframe,b.currentKeyframe=a.currentKeyframe,b.direction=a.direction,b.directionBackwards=a.directionBackwards):a instanceof THREE.SkinnedMesh?b=new THREE.SkinnedMesh(a.geometry,a.material):a instanceof THREE.Mesh?b=new THREE.Mesh(a.geometry,a.material):a instanceof THREE.Line?b=new THREE.Line(a.geometry,a.material,a.type):a instanceof THREE.Ribbon?b=new THREE.Ribbon(a.geometry,a.material):a instanceof THREE.ParticleSystem?
(b=new THREE.ParticleSystem(a.geometry,a.material),b.sortParticles=a.sortParticles):a instanceof THREE.Particle?b=new THREE.Particle(a.material):a instanceof THREE.Sprite?(b=new THREE.Sprite({}),b.color.copy(a.color),b.map=a.map,b.blending=a.blending,b.useScreenCoordinates=a.useScreenCoordinates,b.mergeWith3D=a.mergeWith3D,b.affectedByDistance=a.affectedByDistance,b.scaleByViewport=a.scaleByViewport,b.alignment=a.alignment,b.rotation3d.copy(a.rotation3d),b.rotation=a.rotation,b.opacity=a.opacity,
b.uvOffset.copy(a.uvOffset),b.uvScale.copy(a.uvScale)):a instanceof THREE.LOD?b=new THREE.LOD:a instanceof THREE.MarchingCubes?(b=new THREE.MarchingCubes(a.resolution,a.material),b.field.set(a.field),b.isolation=a.isolation):a instanceof THREE.Object3D&&(b=new THREE.Object3D);b.parent=a.parent;b.up.copy(a.up);b.position.copy(a.position);b.rotation instanceof THREE.Vector3&&b.rotation.copy(a.rotation);b.eulerOrder=a.eulerOrder;b.scale.copy(a.scale);b.dynamic=a.dynamic;b.doubleSided=a.doubleSided;b.flipSided=
a.flipSided;b.renderDepth=a.renderDepth;b.rotationAutoUpdate=a.rotationAutoUpdate;b.matrix.copy(a.matrix);b.matrixWorld.copy(a.matrixWorld);b.matrixRotationWorld.copy(a.matrixRotationWorld);b.matrixAutoUpdate=a.matrixAutoUpdate;b.matrixWorldNeedsUpdate=a.matrixWorldNeedsUpdate;b.quaternion.copy(a.quaternion);b.useQuaternion=a.useQuaternion;b.boundRadius=a.boundRadius;b.boundRadiusScale=a.boundRadiusScale;b.visible=a.visible;b.castShadow=a.castShadow;b.receiveShadow=a.receiveShadow;b.frustumCulled=
a.frustumCulled;for(var c=0;c<a.children.length;c++){var d=THREE.SceneUtils.cloneObject(a.children[c]);b.children[c]=d;d.parent=b}if(a instanceof THREE.LOD)for(c=0;c<a.LODs.length;c++)b.LODs[c]={visibleAtDistance:a.LODs[c].visibleAtDistance,object3D:b.children[c]};return b}};
if(THREE.WebGLRenderer)THREE.ShaderUtils={lib:{fresnel:{uniforms:{mRefractionRatio:{type:"f",value:1.02},mFresnelBias:{type:"f",value:0.1},mFresnelPower:{type:"f",value:2},mFresnelScale:{type:"f",value:1},tCube:{type:"t",value:1,texture:null}},fragmentShader:"uniform samplerCube tCube;\nvarying vec3 vReflect;\nvarying vec3 vRefract[3];\nvarying float vReflectionFactor;\nvoid main() {\nvec4 reflectedColor = textureCube( tCube, vec3( -vReflect.x, vReflect.yz ) );\nvec4 refractedColor = vec4( 1.0, 1.0, 1.0, 1.0 );\nrefractedColor.r = textureCube( tCube, vec3( -vRefract[0].x, vRefract[0].yz ) ).r;\nrefractedColor.g = textureCube( tCube, vec3( -vRefract[1].x, vRefract[1].yz ) ).g;\nrefractedColor.b = textureCube( tCube, vec3( -vRefract[2].x, vRefract[2].yz ) ).b;\nrefractedColor.a = 1.0;\ngl_FragColor = mix( refractedColor, reflectedColor, clamp( vReflectionFactor, 0.0, 1.0 ) );\n}",
vertexShader:"uniform float mRefractionRatio;\nuniform float mFresnelBias;\nuniform float mFresnelScale;\nuniform float mFresnelPower;\nvarying vec3 vReflect;\nvarying vec3 vRefract[3];\nvarying float vReflectionFactor;\nvoid main() {\nvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\nvec4 mPosition = objectMatrix * vec4( position, 1.0 );\nvec3 nWorld = normalize ( mat3( objectMatrix[0].xyz, objectMatrix[1].xyz, objectMatrix[2].xyz ) * normal );\nvec3 I = mPosition.xyz - cameraPosition;\nvReflect = reflect( I, nWorld );\nvRefract[0] = refract( normalize( I ), nWorld, mRefractionRatio );\nvRefract[1] = refract( normalize( I ), nWorld, mRefractionRatio * 0.99 );\nvRefract[2] = refract( normalize( I ), nWorld, mRefractionRatio * 0.98 );\nvReflectionFactor = mFresnelBias + mFresnelScale * pow( 1.0 + dot( normalize( I ), nWorld ), mFresnelPower );\ngl_Position = projectionMatrix * mvPosition;\n}"},
normal:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.fog,THREE.UniformsLib.lights,THREE.UniformsLib.shadowmap,{enableAO:{type:"i",value:0},enableDiffuse:{type:"i",value:0},enableSpecular:{type:"i",value:0},enableReflection:{type:"i",value:0},tDiffuse:{type:"t",value:0,texture:null},tCube:{type:"t",value:1,texture:null},tNormal:{type:"t",value:2,texture:null},tSpecular:{type:"t",value:3,texture:null},tAO:{type:"t",value:4,texture:null},tDisplacement:{type:"t",value:5,texture:null},uNormalScale:{type:"f",
value:1},uDisplacementBias:{type:"f",value:0},uDisplacementScale:{type:"f",value:1},uDiffuseColor:{type:"c",value:new THREE.Color(15658734)},uSpecularColor:{type:"c",value:new THREE.Color(1118481)},uAmbientColor:{type:"c",value:new THREE.Color(328965)},uShininess:{type:"f",value:30},uOpacity:{type:"f",value:1},uReflectivity:{type:"f",value:0.5},uOffset:{type:"v2",value:new THREE.Vector2(0,0)},uRepeat:{type:"v2",value:new THREE.Vector2(1,1)}}]),fragmentShader:["uniform vec3 uAmbientColor;\nuniform vec3 uDiffuseColor;\nuniform vec3 uSpecularColor;\nuniform float uShininess;\nuniform float uOpacity;\nuniform bool enableDiffuse;\nuniform bool enableSpecular;\nuniform bool enableAO;\nuniform bool enableReflection;\nuniform sampler2D tDiffuse;\nuniform sampler2D tNormal;\nuniform sampler2D tSpecular;\nuniform sampler2D tAO;\nuniform samplerCube tCube;\nuniform float uNormalScale;\nuniform float uReflectivity;\nvarying vec3 vTangent;\nvarying vec3 vBinormal;\nvarying vec3 vNormal;\nvarying vec2 vUv;\nuniform vec3 ambientLightColor;\n#if MAX_DIR_LIGHTS > 0\nuniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];\nuniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];\n#endif\n#if MAX_POINT_LIGHTS > 0\nuniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];\nvarying vec4 vPointLight[ MAX_POINT_LIGHTS ];\n#endif\nvarying vec3 vViewPosition;",
THREE.ShaderChunk.shadowmap_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,"void main() {\ngl_FragColor = vec4( vec3( 1.0 ), uOpacity );\nvec3 specularTex = vec3( 1.0 );\nvec3 normalTex = texture2D( tNormal, vUv ).xyz * 2.0 - 1.0;\nnormalTex.xy *= uNormalScale;\nnormalTex = normalize( normalTex );\nif( enableDiffuse )\ngl_FragColor = gl_FragColor * texture2D( tDiffuse, vUv );\nif( enableAO )\ngl_FragColor.xyz = gl_FragColor.xyz * texture2D( tAO, vUv ).xyz;\nif( enableSpecular )\nspecularTex = texture2D( tSpecular, vUv ).xyz;\nmat3 tsb = mat3( vTangent, vBinormal, vNormal );\nvec3 finalNormal = tsb * normalTex;\nvec3 normal = normalize( finalNormal );\nvec3 viewPosition = normalize( vViewPosition );\n#if MAX_POINT_LIGHTS > 0\nvec3 pointDiffuse = vec3( 0.0 );\nvec3 pointSpecular = vec3( 0.0 );\nfor ( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {\nvec3 pointVector = normalize( vPointLight[ i ].xyz );\nvec3 pointHalfVector = normalize( vPointLight[ i ].xyz + viewPosition );\nfloat pointDistance = vPointLight[ i ].w;\nfloat pointDotNormalHalf = max( dot( normal, pointHalfVector ), 0.0 );\nfloat pointDiffuseWeight = max( dot( normal, pointVector ), 0.0 );\nfloat pointSpecularWeight = specularTex.r * pow( pointDotNormalHalf, uShininess );\npointDiffuse += pointDistance * pointLightColor[ i ] * uDiffuseColor * pointDiffuseWeight;\npointSpecular += pointDistance * pointLightColor[ i ] * uSpecularColor * pointSpecularWeight * pointDiffuseWeight;\n}\n#endif\n#if MAX_DIR_LIGHTS > 0\nvec3 dirDiffuse = vec3( 0.0 );\nvec3 dirSpecular = vec3( 0.0 );\nfor( int i = 0; i < MAX_DIR_LIGHTS; i++ ) {\nvec4 lDirection = viewMatrix * vec4( directionalLightDirection[ i ], 0.0 );\nvec3 dirVector = normalize( lDirection.xyz );\nvec3 dirHalfVector = normalize( lDirection.xyz + viewPosition );\nfloat dirDotNormalHalf = max( dot( normal, dirHalfVector ), 0.0 );\nfloat dirDiffuseWeight = max( dot( normal, dirVector ), 0.0 );\nfloat dirSpecularWeight = specularTex.r * pow( dirDotNormalHalf, uShininess );\ndirDiffuse += directionalLightColor[ i ] * uDiffuseColor * dirDiffuseWeight;\ndirSpecular += directionalLightColor[ i ] * uSpecularColor * dirSpecularWeight * dirDiffuseWeight;\n}\n#endif\nvec3 totalDiffuse = vec3( 0.0 );\nvec3 totalSpecular = vec3( 0.0 );\n#if MAX_DIR_LIGHTS > 0\ntotalDiffuse += dirDiffuse;\ntotalSpecular += dirSpecular;\n#endif\n#if MAX_POINT_LIGHTS > 0\ntotalDiffuse += pointDiffuse;\ntotalSpecular += pointSpecular;\n#endif\ngl_FragColor.xyz = gl_FragColor.xyz * ( totalDiffuse + ambientLightColor * uAmbientColor) + totalSpecular;\nif ( enableReflection ) {\nvec3 wPos = cameraPosition - vViewPosition;\nvec3 vReflect = reflect( normalize( wPos ), normal );\nvec4 cubeColor = textureCube( tCube, vec3( -vReflect.x, vReflect.yz ) );\ngl_FragColor.xyz = mix( gl_FragColor.xyz, cubeColor.xyz, uReflectivity );\n}",
THREE.ShaderChunk.shadowmap_fragment,THREE.ShaderChunk.fog_fragment,"}"].join("\n"),vertexShader:["attribute vec4 tangent;\nuniform vec2 uOffset;\nuniform vec2 uRepeat;\n#ifdef VERTEX_TEXTURES\nuniform sampler2D tDisplacement;\nuniform float uDisplacementScale;\nuniform float uDisplacementBias;\n#endif\nvarying vec3 vTangent;\nvarying vec3 vBinormal;\nvarying vec3 vNormal;\nvarying vec2 vUv;\n#if MAX_POINT_LIGHTS > 0\nuniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\nuniform float pointLightDistance[ MAX_POINT_LIGHTS ];\nvarying vec4 vPointLight[ MAX_POINT_LIGHTS ];\n#endif\nvarying vec3 vViewPosition;",
THREE.ShaderChunk.shadowmap_pars_vertex,"void main() {\nvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\nvViewPosition = -mvPosition.xyz;\nvNormal = normalize( normalMatrix * normal );\nvTangent = normalize( normalMatrix * tangent.xyz );\nvBinormal = cross( vNormal, vTangent ) * tangent.w;\nvBinormal = normalize( vBinormal );\nvUv = uv * uRepeat + uOffset;\n#if MAX_POINT_LIGHTS > 0\nfor( int i = 0; i < MAX_POINT_LIGHTS; i++ ) {\nvec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );\nvec3 lVector = lPosition.xyz - mvPosition.xyz;\nfloat lDistance = 1.0;\nif ( pointLightDistance[ i ] > 0.0 )\nlDistance = 1.0 - min( ( length( lVector ) / pointLightDistance[ i ] ), 1.0 );\nlVector = normalize( lVector );\nvPointLight[ i ] = vec4( lVector, lDistance );\n}\n#endif\n#ifdef VERTEX_TEXTURES\nvec3 dv = texture2D( tDisplacement, uv ).xyz;\nfloat df = uDisplacementScale * dv.x + uDisplacementBias;\nvec4 displacedPosition = vec4( vNormal.xyz * df, 0.0 ) + mvPosition;\ngl_Position = projectionMatrix * displacedPosition;\n#else\ngl_Position = projectionMatrix * mvPosition;\n#endif",
THREE.ShaderChunk.shadowmap_vertex,"}"].join("\n")},cube:{uniforms:{tCube:{type:"t",value:1,texture:null},tFlip:{type:"f",value:-1}},vertexShader:"varying vec3 vViewPosition;\nvoid main() {\nvec4 mPosition = objectMatrix * vec4( position, 1.0 );\nvViewPosition = cameraPosition - mPosition.xyz;\ngl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",fragmentShader:"uniform samplerCube tCube;\nuniform float tFlip;\nvarying vec3 vViewPosition;\nvoid main() {\nvec3 wPos = cameraPosition - vViewPosition;\ngl_FragColor = textureCube( tCube, vec3( tFlip * wPos.x, wPos.yz ) );\n}"}}};
THREE.Curve=function(){};THREE.Curve.prototype.getPoint=function(){console.log("Warning, getPoint() not implemented!");return null};THREE.Curve.prototype.getPointAt=function(a){return this.getPoint(this.getUtoTmapping(a))};THREE.Curve.prototype.getPoints=function(a){a||(a=5);var b,c=[];for(b=0;b<=a;b++)c.push(this.getPoint(b/a));return c};THREE.Curve.prototype.getSpacedPoints=function(a){a||(a=5);var b,c=[];for(b=0;b<=a;b++)c.push(this.getPointAt(b/a));return c};
THREE.Curve.prototype.getLength=function(){var a=this.getLengths();return a[a.length-1]};THREE.Curve.prototype.getLengths=function(a){a||(a=200);if(this.cacheArcLengths&&this.cacheArcLengths.length==a+1)return this.cacheArcLengths;var b=[],c,d=this.getPoint(0),e,g=0;b.push(0);for(e=1;e<=a;e++)c=this.getPoint(e/a),g+=c.distanceTo(d),b.push(g),d=c;return this.cacheArcLengths=b};
THREE.Curve.prototype.getUtoTmapping=function(a,b){var c=this.getLengths(),d=0,e=c.length,g;g=b?b:a*c[e-1];for(var f=0,h=e-1,k;f<=h;)if(d=Math.floor(f+(h-f)/2),k=c[d]-g,k<0)f=d+1;else if(k>0)h=d-1;else{h=d;break}d=h;if(c[d]==g)return d/(e-1);f=c[d];return c=(d+(g-f)/(c[d+1]-f))/(e-1)};THREE.Curve.prototype.getNormalVector=function(a){a=this.getTangent(a);return new THREE.Vector2(-a.y,a.x)};
THREE.Curve.prototype.getTangent=function(a){var b=a-1.0E-4;a+=1.0E-4;b<0&&(b=0);a>1&&(a=1);b=this.getPoint(b);a=this.getPoint(a);return b.clone().subSelf(a).normalize()};THREE.Curve.prototype.getTangentAt=function(a){return this.getTangent(this.getUtoTmapping(a))};THREE.LineCurve=function(a,b){a instanceof THREE.Vector2?(this.v1=a,this.v2=b):THREE.LineCurve.oldConstructor.apply(this,arguments)};
THREE.LineCurve.oldConstructor=function(a,b,c,d){this.constructor(new THREE.Vector2(a,b),new THREE.Vector2(c,d))};THREE.LineCurve.prototype=new THREE.Curve;THREE.LineCurve.prototype.constructor=THREE.LineCurve;THREE.LineCurve.prototype.getPoint=function(a){var b=new THREE.Vector2;b.sub(this.v2,this.v1);b.multiplyScalar(a).addSelf(this.v1);return b};THREE.LineCurve.prototype.getPointAt=function(a){return this.getPoint(a)};
THREE.LineCurve.prototype.getTangent=function(){var a=new THREE.Vector2;a.sub(this.v2,this.v1);a.normalize();return a};THREE.QuadraticBezierCurve=function(a,b,c){if(!(b instanceof THREE.Vector2))var d=Array.prototype.slice.call(arguments),a=new THREE.Vector2(d[0],d[1]),b=new THREE.Vector2(d[2],d[3]),c=new THREE.Vector2(d[4],d[5]);this.v0=a;this.v1=b;this.v2=c};THREE.QuadraticBezierCurve.prototype=new THREE.Curve;THREE.QuadraticBezierCurve.prototype.constructor=THREE.QuadraticBezierCurve;
THREE.QuadraticBezierCurve.prototype.getPoint=function(a){var b;b=THREE.Shape.Utils.b2(a,this.v0.x,this.v1.x,this.v2.x);a=THREE.Shape.Utils.b2(a,this.v0.y,this.v1.y,this.v2.y);return new THREE.Vector2(b,a)};THREE.QuadraticBezierCurve.prototype.getTangent=function(a){var b;b=THREE.Curve.Utils.tangentQuadraticBezier(a,this.v0.x,this.v1.x,this.v2.x);a=THREE.Curve.Utils.tangentQuadraticBezier(a,this.v0.y,this.v1.y,this.v2.y);b=new THREE.Vector2(b,a);b.normalize();return b};
THREE.CubicBezierCurve=function(a,b,c,d){if(!(b instanceof THREE.Vector2))var e=Array.prototype.slice.call(arguments),a=new THREE.Vector2(e[0],e[1]),b=new THREE.Vector2(e[2],e[3]),c=new THREE.Vector2(e[4],e[5]),d=new THREE.Vector2(e[6],e[7]);this.v0=a;this.v1=b;this.v2=c;this.v3=d};THREE.CubicBezierCurve.prototype=new THREE.Curve;THREE.CubicBezierCurve.prototype.constructor=THREE.CubicBezierCurve;
THREE.CubicBezierCurve.prototype.getPoint=function(a){var b;b=THREE.Shape.Utils.b3(a,this.v0.x,this.v1.x,this.v2.x,this.v3.x);a=THREE.Shape.Utils.b3(a,this.v0.y,this.v1.y,this.v2.y,this.v3.y);return new THREE.Vector2(b,a)};THREE.CubicBezierCurve.prototype.getTangent=function(a){var b;b=THREE.Curve.Utils.tangentCubicBezier(a,this.v0.x,this.v1.x,this.v2.x,this.v3.x);a=THREE.Curve.Utils.tangentCubicBezier(a,this.v0.y,this.v1.y,this.v2.y,this.v3.y);b=new THREE.Vector2(b,a);b.normalize();return b};
THREE.SplineCurve=function(a){this.points=a==void 0?[]:a};THREE.SplineCurve.prototype=new THREE.Curve;THREE.SplineCurve.prototype.constructor=THREE.SplineCurve;
THREE.SplineCurve.prototype.getPoint=function(a){var b=new THREE.Vector2,c=[],d=this.points,e;e=(d.length-1)*a;a=Math.floor(e);e-=a;c[0]=a==0?a:a-1;c[1]=a;c[2]=a>d.length-2?a:a+1;c[3]=a>d.length-3?a:a+2;b.x=THREE.Curve.Utils.interpolate(d[c[0]].x,d[c[1]].x,d[c[2]].x,d[c[3]].x,e);b.y=THREE.Curve.Utils.interpolate(d[c[0]].y,d[c[1]].y,d[c[2]].y,d[c[3]].y,e);return b};THREE.ArcCurve=function(a,b,c,d,e,g){this.aX=a;this.aY=b;this.aRadius=c;this.aStartAngle=d;this.aEndAngle=e;this.aClockwise=g};
THREE.ArcCurve.prototype=new THREE.Curve;THREE.ArcCurve.prototype.constructor=THREE.ArcCurve;THREE.ArcCurve.prototype.getPoint=function(a){var b=this.aEndAngle-this.aStartAngle;this.aClockwise||(a=1-a);a=this.aStartAngle+a*b;return new THREE.Vector2(this.aX+this.aRadius*Math.cos(a),this.aY+this.aRadius*Math.sin(a))};
THREE.Curve.Utils={tangentQuadraticBezier:function(a,b,c,d){return 2*(1-a)*(c-b)+2*a*(d-c)},tangentCubicBezier:function(a,b,c,d,e){return-3*b*(1-a)*(1-a)+3*c*(1-a)*(1-a)-6*a*c*(1-a)+6*a*d*(1-a)-3*a*a*d+3*a*a*e},tangentSpline:function(a){return 6*a*a-6*a+(3*a*a-4*a+1)+(-6*a*a+6*a)+(3*a*a-2*a)},interpolate:function(a,b,c,d,e){var a=(c-a)*0.5,d=(d-b)*0.5,g=e*e;return(2*b-2*c+a+d)*e*g+(-3*b+3*c-2*a-d)*g+a*e+b}};
THREE.Curve.create=function(a,b){a.prototype=new THREE.Curve;a.prototype.constructor=a;a.prototype.getPoint=b;return a};THREE.LineCurve3=THREE.Curve.create(function(a,b){this.v1=a;this.v2=b},function(a){var b=new THREE.Vector3;b.sub(this.v2,this.v1);b.multiplyScalar(a);b.addSelf(this.v1);return b});
THREE.QuadraticBezierCurve3=THREE.Curve.create(function(a,b,c){this.v0=a;this.v1=b;this.v2=c},function(a){var b,c;b=THREE.Shape.Utils.b2(a,this.v0.x,this.v1.x,this.v2.x);c=THREE.Shape.Utils.b2(a,this.v0.y,this.v1.y,this.v2.y);a=THREE.Shape.Utils.b2(a,this.v0.z,this.v1.z,this.v2.z);return new THREE.Vector3(b,c,a)});
THREE.CubicBezierCurve3=THREE.Curve.create(function(a,b,c,d){this.v0=a;this.v1=b;this.v2=c;this.v3=d},function(a){var b,c;b=THREE.Shape.Utils.b3(a,this.v0.x,this.v1.x,this.v2.x,this.v3.x);c=THREE.Shape.Utils.b3(a,this.v0.y,this.v1.y,this.v2.y,this.v3.y);a=THREE.Shape.Utils.b3(a,this.v0.z,this.v1.z,this.v2.z,this.v3.z);return new THREE.Vector3(b,c,a)});
THREE.SplineCurve3=THREE.Curve.create(function(a){this.points=a==void 0?[]:a},function(a){var b=new THREE.Vector3,c=[],d=this.points,e;e=(d.length-1)*a;a=Math.floor(e);e-=a;c[0]=a==0?a:a-1;c[1]=a;c[2]=a>d.length-2?a:a+1;c[3]=a>d.length-3?a:a+2;b.x=THREE.Curve.Utils.interpolate(d[c[0]].x,d[c[1]].x,d[c[2]].x,d[c[3]].x,e);b.y=THREE.Curve.Utils.interpolate(d[c[0]].y,d[c[1]].y,d[c[2]].y,d[c[3]].y,e);b.z=THREE.Curve.Utils.interpolate(d[c[0]].z,d[c[1]].z,d[c[2]].z,d[c[3]].z,e);return b});
THREE.CurvePath=function(){this.curves=[];this.bends=[]};THREE.CurvePath.prototype=new THREE.Curve;THREE.CurvePath.prototype.constructor=THREE.CurvePath;THREE.CurvePath.prototype.add=function(a){this.curves.push(a)};THREE.CurvePath.prototype.checkConnection=function(){};THREE.CurvePath.prototype.closePath=function(){};
THREE.CurvePath.prototype.getPoint=function(a){for(var b=a*this.getLength(),c=this.getCurveLengths(),a=0;a<c.length;){if(c[a]>=b)return b=c[a]-b,a=this.curves[a],b=1-b/a.getLength(),a.getPointAt(b);a++}return null};THREE.CurvePath.prototype.getLength=function(){var a=this.getCurveLengths();return a[a.length-1]};
THREE.CurvePath.prototype.getCurveLengths=function(){if(this.cacheLengths&&this.cacheLengths.length==this.curves.length)return this.cacheLengths;var a=[],b=0,c,d=this.curves.length;for(c=0;c<d;c++)b+=this.curves[c].getLength(),a.push(b);return this.cacheLengths=a};
THREE.CurvePath.prototype.getBoundingBox=function(){var a=this.getPoints(),b,c,d,e;b=c=Number.NEGATIVE_INFINITY;d=e=Number.POSITIVE_INFINITY;var g,f,h,k;k=new THREE.Vector2;f=0;for(h=a.length;f<h;f++){g=a[f];if(g.x>b)b=g.x;else if(g.x<d)d=g.x;if(g.y>c)c=g.y;else if(g.y<c)e=g.y;k.addSelf(g.x,g.y)}return{minX:d,minY:e,maxX:b,maxY:c,centroid:k.divideScalar(h)}};THREE.CurvePath.prototype.createPointsGeometry=function(a){return this.createGeometry(this.getPoints(a,!0))};
THREE.CurvePath.prototype.createSpacedPointsGeometry=function(a){return this.createGeometry(this.getSpacedPoints(a,!0))};THREE.CurvePath.prototype.createGeometry=function(a){for(var b=new THREE.Geometry,c=0;c<a.length;c++)b.vertices.push(new THREE.Vertex(new THREE.Vector3(a[c].x,a[c].y,0)));return b};THREE.CurvePath.prototype.addWrapPath=function(a){this.bends.push(a)};
THREE.CurvePath.prototype.getTransformedPoints=function(a,b){var c=this.getPoints(a),d,e;if(!b)b=this.bends;d=0;for(e=b.length;d<e;d++)c=this.getWrapPoints(c,b[d]);return c};THREE.CurvePath.prototype.getTransformedSpacedPoints=function(a,b){var c=this.getSpacedPoints(a),d,e;if(!b)b=this.bends;d=0;for(e=b.length;d<e;d++)c=this.getWrapPoints(c,b[d]);return c};
THREE.CurvePath.prototype.getWrapPoints=function(a,b){var c=this.getBoundingBox(),d,e,g,f,h,k;d=0;for(e=a.length;d<e;d++)g=a[d],f=g.x,h=g.y,k=f/c.maxX,k=b.getUtoTmapping(k,f),f=b.getPoint(k),h=b.getNormalVector(k).multiplyScalar(h),g.x=f.x+h.x,g.y=f.y+h.y;return a};THREE.Path=function(a){THREE.CurvePath.call(this);this.actions=[];a&&this.fromPoints(a)};THREE.Path.prototype=new THREE.CurvePath;THREE.Path.prototype.constructor=THREE.Path;
THREE.PathActions={MOVE_TO:"moveTo",LINE_TO:"lineTo",QUADRATIC_CURVE_TO:"quadraticCurveTo",BEZIER_CURVE_TO:"bezierCurveTo",CSPLINE_THRU:"splineThru",ARC:"arc"};THREE.Path.prototype.fromPoints=function(a){this.moveTo(a[0].x,a[0].y);var b,c=a.length;for(b=1;b<c;b++)this.lineTo(a[b].x,a[b].y)};THREE.Path.prototype.moveTo=function(){var a=Array.prototype.slice.call(arguments);this.actions.push({action:THREE.PathActions.MOVE_TO,args:a})};
THREE.Path.prototype.lineTo=function(a,b){var c=Array.prototype.slice.call(arguments),d=this.actions[this.actions.length-1].args;this.curves.push(new THREE.LineCurve(new THREE.Vector2(d[d.length-2],d[d.length-1]),new THREE.Vector2(a,b)));this.actions.push({action:THREE.PathActions.LINE_TO,args:c})};
THREE.Path.prototype.quadraticCurveTo=function(a,b,c,d){var e=Array.prototype.slice.call(arguments),g=this.actions[this.actions.length-1].args;this.curves.push(new THREE.QuadraticBezierCurve(new THREE.Vector2(g[g.length-2],g[g.length-1]),new THREE.Vector2(a,b),new THREE.Vector2(c,d)));this.actions.push({action:THREE.PathActions.QUADRATIC_CURVE_TO,args:e})};
THREE.Path.prototype.bezierCurveTo=function(a,b,c,d,e,g){var f=Array.prototype.slice.call(arguments),h=this.actions[this.actions.length-1].args;this.curves.push(new THREE.CubicBezierCurve(new THREE.Vector2(h[h.length-2],h[h.length-1]),new THREE.Vector2(a,b),new THREE.Vector2(c,d),new THREE.Vector2(e,g)));this.actions.push({action:THREE.PathActions.BEZIER_CURVE_TO,args:f})};
THREE.Path.prototype.splineThru=function(a){var b=Array.prototype.slice.call(arguments),c=this.actions[this.actions.length-1].args,c=[new THREE.Vector2(c[c.length-2],c[c.length-1])];Array.prototype.push.apply(c,a);this.curves.push(new THREE.SplineCurve(c));this.actions.push({action:THREE.PathActions.CSPLINE_THRU,args:b})};
THREE.Path.prototype.arc=function(a,b,c,d,e,g){var f=Array.prototype.slice.call(arguments);this.curves.push(new THREE.ArcCurve(a,b,c,d,e,g));this.actions.push({action:THREE.PathActions.ARC,args:f})};THREE.Path.prototype.getSpacedPoints=function(a){a||(a=40);for(var b=[],c=0;c<a;c++)b.push(this.getPoint(c/a));return b};
THREE.Path.prototype.getPoints=function(a,b){var a=a||12,c=[],d,e,g,f,h,k,n,m,r,q,o,t,p;d=0;for(e=this.actions.length;d<e;d++)switch(g=this.actions[d],f=g.action,g=g.args,f){case THREE.PathActions.LINE_TO:c.push(new THREE.Vector2(g[0],g[1]));break;case THREE.PathActions.QUADRATIC_CURVE_TO:h=g[2];k=g[3];r=g[0];q=g[1];c.length>0?(f=c[c.length-1],o=f.x,t=f.y):(f=this.actions[d-1].args,o=f[f.length-2],t=f[f.length-1]);for(f=1;f<=a;f++)p=f/a,g=THREE.Shape.Utils.b2(p,o,r,h),p=THREE.Shape.Utils.b2(p,t,q,
k),c.push(new THREE.Vector2(g,p));break;case THREE.PathActions.BEZIER_CURVE_TO:h=g[4];k=g[5];r=g[0];q=g[1];n=g[2];m=g[3];c.length>0?(f=c[c.length-1],o=f.x,t=f.y):(f=this.actions[d-1].args,o=f[f.length-2],t=f[f.length-1]);for(f=1;f<=a;f++)p=f/a,g=THREE.Shape.Utils.b3(p,o,r,n,h),p=THREE.Shape.Utils.b3(p,t,q,m,k),c.push(new THREE.Vector2(g,p));break;case THREE.PathActions.CSPLINE_THRU:f=this.actions[d-1].args;f=[new THREE.Vector2(f[f.length-2],f[f.length-1])];p=a*g[0].length;f=f.concat(g[0]);g=new THREE.SplineCurve(f);
for(f=1;f<=p;f++)c.push(g.getPointAt(f/p));break;case THREE.PathActions.ARC:f=this.actions[d-1].args;h=g[0];k=g[1];n=g[2];r=g[3];p=g[4];q=!!g[5];m=f[f.length-2];o=f[f.length-1];f.length==0&&(m=o=0);t=p-r;var s=a*2;for(f=1;f<=s;f++)p=f/s,q||(p=1-p),p=r+p*t,g=m+h+n*Math.cos(p),p=o+k+n*Math.sin(p),c.push(new THREE.Vector2(g,p))}b&&c.push(c[0]);return c};THREE.Path.prototype.transform=function(a,b){this.getBoundingBox();return this.getWrapPoints(this.getPoints(b),a)};
THREE.Path.prototype.nltransform=function(a,b,c,d,e,g){var f=this.getPoints(),h,k,n,m,r;h=0;for(k=f.length;h<k;h++)n=f[h],m=n.x,r=n.y,n.x=a*m+b*r+c,n.y=d*r+e*m+g;return f};
THREE.Path.prototype.debug=function(a){var b=this.getBoundingBox();a||(a=document.createElement("canvas"),a.setAttribute("width",b.maxX+100),a.setAttribute("height",b.maxY+100),document.body.appendChild(a));b=a.getContext("2d");b.fillStyle="white";b.fillRect(0,0,a.width,a.height);b.strokeStyle="black";b.beginPath();var c,d,e,a=0;for(c=this.actions.length;a<c;a++)d=this.actions[a],e=d.args,d=d.action,d!=THREE.PathActions.CSPLINE_THRU&&b[d].apply(b,e);b.stroke();b.closePath();b.strokeStyle="red";d=
this.getPoints();a=0;for(c=d.length;a<c;a++)e=d[a],b.beginPath(),b.arc(e.x,e.y,1.5,0,Math.PI*2,!1),b.stroke(),b.closePath()};
THREE.Path.prototype.toShapes=function(){var a,b,c,d,e=[],g=new THREE.Path;a=0;for(b=this.actions.length;a<b;a++)c=this.actions[a],d=c.args,c=c.action,c==THREE.PathActions.MOVE_TO&&g.actions.length!=0&&(e.push(g),g=new THREE.Path),g[c].apply(g,d);g.actions.length!=0&&e.push(g);if(e.length==0)return[];var f,g=[];if(THREE.Shape.Utils.isClockWise(e[0].getPoints())){a=0;for(b=e.length;a<b;a++)d=e[a],THREE.Shape.Utils.isClockWise(d.getPoints())?(f&&g.push(f),f=new THREE.Shape,f.actions=d.actions,f.curves=
d.curves):f.holes.push(d);g.push(f)}else{f=new THREE.Shape;a=0;for(b=e.length;a<b;a++)d=e[a],THREE.Shape.Utils.isClockWise(d.getPoints())?(f.actions=d.actions,f.curves=d.curves,g.push(f),f=new THREE.Shape):f.holes.push(d)}return g};THREE.Shape=function(){THREE.Path.apply(this,arguments);this.holes=[]};THREE.Shape.prototype=new THREE.Path;THREE.Shape.prototype.constructor=THREE.Path;THREE.Shape.prototype.extrude=function(a){return new THREE.ExtrudeGeometry(this,a)};
THREE.Shape.prototype.getPointsHoles=function(a){var b,c=this.holes.length,d=[];for(b=0;b<c;b++)d[b]=this.holes[b].getTransformedPoints(a,this.bends);return d};THREE.Shape.prototype.getSpacedPointsHoles=function(a){var b,c=this.holes.length,d=[];for(b=0;b<c;b++)d[b]=this.holes[b].getTransformedSpacedPoints(a,this.bends);return d};THREE.Shape.prototype.extractAllPoints=function(a){return{shape:this.getTransformedPoints(a),holes:this.getPointsHoles(a)}};
THREE.Shape.prototype.extractAllSpacedPoints=function(a){return{shape:this.getTransformedSpacedPoints(a),holes:this.getSpacedPointsHoles(a)}};
THREE.Shape.Utils={removeHoles:function(a,b){var c=a.concat(),d=c.concat(),e,g,f,h,k,n,m,r,q,o,t=[];for(k=0;k<b.length;k++){n=b[k];Array.prototype.push.apply(d,n);g=Number.POSITIVE_INFINITY;for(e=0;e<n.length;e++){q=n[e];o=[];for(r=0;r<c.length;r++)m=c[r],m=q.distanceToSquared(m),o.push(m),m<g&&(g=m,f=e,h=r)}e=h-1>=0?h-1:c.length-1;g=f-1>=0?f-1:n.length-1;var p=[n[f],c[h],c[e]];r=THREE.FontUtils.Triangulate.area(p);var s=[n[f],n[g],c[h]];q=THREE.FontUtils.Triangulate.area(s);o=h;m=f;h+=1;f+=-1;h<
0&&(h+=c.length);h%=c.length;f<0&&(f+=n.length);f%=n.length;e=h-1>=0?h-1:c.length-1;g=f-1>=0?f-1:n.length-1;p=[n[f],c[h],c[e]];p=THREE.FontUtils.Triangulate.area(p);s=[n[f],n[g],c[h]];s=THREE.FontUtils.Triangulate.area(s);r+q>p+s&&(h=o,f=m,h<0&&(h+=c.length),h%=c.length,f<0&&(f+=n.length),f%=n.length,e=h-1>=0?h-1:c.length-1,g=f-1>=0?f-1:n.length-1);r=c.slice(0,h);q=c.slice(h);o=n.slice(f);m=n.slice(0,f);g=[n[f],n[g],c[h]];t.push([n[f],c[h],c[e]]);t.push(g);c=r.concat(o).concat(m).concat(q)}return{shape:c,
isolatedPts:t,allpoints:d}},triangulateShape:function(a,b){var c=THREE.Shape.Utils.removeHoles(a,b),d=c.allpoints,e=c.isolatedPts,c=THREE.FontUtils.Triangulate(c.shape,!1),g,f,h,k,n={};g=0;for(f=d.length;g<f;g++)k=d[g].x+":"+d[g].y,n[k]!==void 0&&console.log("Duplicate point",k),n[k]=g;g=0;for(f=c.length;g<f;g++){h=c[g];for(d=0;d<3;d++)k=h[d].x+":"+h[d].y,k=n[k],k!==void 0&&(h[d]=k)}g=0;for(f=e.length;g<f;g++){h=e[g];for(d=0;d<3;d++)k=h[d].x+":"+h[d].y,k=n[k],k!==void 0&&(h[d]=k)}return c.concat(e)},
isClockWise:function(a){return THREE.FontUtils.Triangulate.area(a)<0},b2p0:function(a,b){var c=1-a;return c*c*b},b2p1:function(a,b){return 2*(1-a)*a*b},b2p2:function(a,b){return a*a*b},b2:function(a,b,c,d){return this.b2p0(a,b)+this.b2p1(a,c)+this.b2p2(a,d)},b3p0:function(a,b){var c=1-a;return c*c*c*b},b3p1:function(a,b){var c=1-a;return 3*c*c*a*b},b3p2:function(a,b){return 3*(1-a)*a*a*b},b3p3:function(a,b){return a*a*a*b},b3:function(a,b,c,d,e){return this.b3p0(a,b)+this.b3p1(a,c)+this.b3p2(a,d)+
this.b3p3(a,e)}};THREE.TextPath=function(a,b){THREE.Path.call(this);this.parameters=b||{};this.set(a)};THREE.TextPath.prototype.set=function(a,b){this.text=a;var b=b||this.parameters,c=b.curveSegments!==void 0?b.curveSegments:4,d=b.font!==void 0?b.font:"helvetiker",e=b.weight!==void 0?b.weight:"normal",g=b.style!==void 0?b.style:"normal";THREE.FontUtils.size=b.size!==void 0?b.size:100;THREE.FontUtils.divisions=c;THREE.FontUtils.face=d;THREE.FontUtils.weight=e;THREE.FontUtils.style=g};
THREE.TextPath.prototype.toShapes=function(){for(var a=THREE.FontUtils.drawText(this.text).paths,b=[],c=0,d=a.length;c<d;c++)Array.prototype.push.apply(b,a[c].toShapes());return b};
THREE.AnimationHandler=function(){var a=[],b={},c={update:function(c){for(var b=0;b<a.length;b++)a[b].update(c)},addToUpdate:function(c){a.indexOf(c)===-1&&a.push(c)},removeFromUpdate:function(c){c=a.indexOf(c);c!==-1&&a.splice(c,1)},add:function(a){b[a.name]!==void 0&&console.log("THREE.AnimationHandler.add: Warning! "+a.name+" already exists in library. Overwriting.");b[a.name]=a;if(a.initialized!==!0){for(var c=0;c<a.hierarchy.length;c++){for(var d=0;d<a.hierarchy[c].keys.length;d++){if(a.hierarchy[c].keys[d].time<
0)a.hierarchy[c].keys[d].time=0;if(a.hierarchy[c].keys[d].rot!==void 0&&!(a.hierarchy[c].keys[d].rot instanceof THREE.Quaternion)){var h=a.hierarchy[c].keys[d].rot;a.hierarchy[c].keys[d].rot=new THREE.Quaternion(h[0],h[1],h[2],h[3])}}if(a.hierarchy[c].keys[0].morphTargets!==void 0){h={};for(d=0;d<a.hierarchy[c].keys.length;d++)for(var k=0;k<a.hierarchy[c].keys[d].morphTargets.length;k++){var n=a.hierarchy[c].keys[d].morphTargets[k];h[n]=-1}a.hierarchy[c].usedMorphTargets=h;for(d=0;d<a.hierarchy[c].keys.length;d++){var m=
{};for(n in h){for(k=0;k<a.hierarchy[c].keys[d].morphTargets.length;k++)if(a.hierarchy[c].keys[d].morphTargets[k]===n){m[n]=a.hierarchy[c].keys[d].morphTargetsInfluences[k];break}k===a.hierarchy[c].keys[d].morphTargets.length&&(m[n]=0)}a.hierarchy[c].keys[d].morphTargetsInfluences=m}}for(d=1;d<a.hierarchy[c].keys.length;d++)a.hierarchy[c].keys[d].time===a.hierarchy[c].keys[d-1].time&&(a.hierarchy[c].keys.splice(d,1),d--);for(d=1;d<a.hierarchy[c].keys.length;d++)a.hierarchy[c].keys[d].index=d}d=parseInt(a.length*
a.fps,10);a.JIT={};a.JIT.hierarchy=[];for(c=0;c<a.hierarchy.length;c++)a.JIT.hierarchy.push(Array(d));a.initialized=!0}},get:function(a){if(typeof a==="string")return b[a]?b[a]:(console.log("THREE.AnimationHandler.get: Couldn't find animation "+a),null)},parse:function(a){var c=[];if(a instanceof THREE.SkinnedMesh)for(var b=0;b<a.bones.length;b++)c.push(a.bones[b]);else d(a,c);return c}},d=function(a,c){c.push(a);for(var b=0;b<a.children.length;b++)d(a.children[b],c)};c.LINEAR=0;c.CATMULLROM=1;c.CATMULLROM_FORWARD=
2;return c}();THREE.Animation=function(a,b,c,d){this.root=a;this.data=THREE.AnimationHandler.get(b);this.hierarchy=THREE.AnimationHandler.parse(a);this.currentTime=0;this.timeScale=1;this.isPlaying=!1;this.loop=this.isPaused=!0;this.interpolationType=c!==void 0?c:THREE.AnimationHandler.LINEAR;this.JITCompile=d!==void 0?d:!0;this.points=[];this.target=new THREE.Vector3};
THREE.Animation.prototype.play=function(a,b){if(!this.isPlaying){this.isPlaying=!0;this.loop=a!==void 0?a:!0;this.currentTime=b!==void 0?b:0;var c,d=this.hierarchy.length,e;for(c=0;c<d;c++){e=this.hierarchy[c];if(this.interpolationType!==THREE.AnimationHandler.CATMULLROM_FORWARD)e.useQuaternion=!0;e.matrixAutoUpdate=!0;if(e.animationCache===void 0)e.animationCache={},e.animationCache.prevKey={pos:0,rot:0,scl:0},e.animationCache.nextKey={pos:0,rot:0,scl:0},e.animationCache.originalMatrix=e instanceof
THREE.Bone?e.skinMatrix:e.matrix;var g=e.animationCache.prevKey;e=e.animationCache.nextKey;g.pos=this.data.hierarchy[c].keys[0];g.rot=this.data.hierarchy[c].keys[0];g.scl=this.data.hierarchy[c].keys[0];e.pos=this.getNextKeyWith("pos",c,1);e.rot=this.getNextKeyWith("rot",c,1);e.scl=this.getNextKeyWith("scl",c,1)}this.update(0)}this.isPaused=!1;THREE.AnimationHandler.addToUpdate(this)};
THREE.Animation.prototype.pause=function(){this.isPaused?THREE.AnimationHandler.addToUpdate(this):THREE.AnimationHandler.removeFromUpdate(this);this.isPaused=!this.isPaused};
THREE.Animation.prototype.stop=function(){this.isPaused=this.isPlaying=!1;THREE.AnimationHandler.removeFromUpdate(this);for(var a=0;a<this.hierarchy.length;a++)if(this.hierarchy[a].animationCache!==void 0)this.hierarchy[a]instanceof THREE.Bone?this.hierarchy[a].skinMatrix=this.hierarchy[a].animationCache.originalMatrix:this.hierarchy[a].matrix=this.hierarchy[a].animationCache.originalMatrix,delete this.hierarchy[a].animationCache};
THREE.Animation.prototype.update=function(a){if(this.isPlaying){var b=["pos","rot","scl"],c,d,e,g,f,h,k,n,m=this.data.JIT.hierarchy,r,q;this.currentTime+=a*this.timeScale;q=this.currentTime;r=this.currentTime%=this.data.length;n=parseInt(Math.min(r*this.data.fps,this.data.length*this.data.fps),10);for(var o=0,t=this.hierarchy.length;o<t;o++)if(a=this.hierarchy[o],k=a.animationCache,this.JITCompile&&m[o][n]!==void 0)a instanceof THREE.Bone?(a.skinMatrix=m[o][n],a.matrixAutoUpdate=!1,a.matrixWorldNeedsUpdate=
!1):(a.matrix=m[o][n],a.matrixAutoUpdate=!1,a.matrixWorldNeedsUpdate=!0);else{if(this.JITCompile)a instanceof THREE.Bone?a.skinMatrix=a.animationCache.originalMatrix:a.matrix=a.animationCache.originalMatrix;for(var p=0;p<3;p++){c=b[p];f=k.prevKey[c];h=k.nextKey[c];if(h.time<=q){if(r<q)if(this.loop){f=this.data.hierarchy[o].keys[0];for(h=this.getNextKeyWith(c,o,1);h.time<r;)f=h,h=this.getNextKeyWith(c,o,h.index+1)}else{this.stop();return}else{do f=h,h=this.getNextKeyWith(c,o,h.index+1);while(h.time<
r)}k.prevKey[c]=f;k.nextKey[c]=h}a.matrixAutoUpdate=!0;a.matrixWorldNeedsUpdate=!0;d=(r-f.time)/(h.time-f.time);e=f[c];g=h[c];if(d<0||d>1)console.log("THREE.Animation.update: Warning! Scale out of bounds:"+d+" on bone "+o),d=d<0?0:1;if(c==="pos")if(c=a.position,this.interpolationType===THREE.AnimationHandler.LINEAR)c.x=e[0]+(g[0]-e[0])*d,c.y=e[1]+(g[1]-e[1])*d,c.z=e[2]+(g[2]-e[2])*d;else{if(this.interpolationType===THREE.AnimationHandler.CATMULLROM||this.interpolationType===THREE.AnimationHandler.CATMULLROM_FORWARD)if(this.points[0]=
this.getPrevKeyWith("pos",o,f.index-1).pos,this.points[1]=e,this.points[2]=g,this.points[3]=this.getNextKeyWith("pos",o,h.index+1).pos,d=d*0.33+0.33,e=this.interpolateCatmullRom(this.points,d),c.x=e[0],c.y=e[1],c.z=e[2],this.interpolationType===THREE.AnimationHandler.CATMULLROM_FORWARD)d=this.interpolateCatmullRom(this.points,d*1.01),this.target.set(d[0],d[1],d[2]),this.target.subSelf(c),this.target.y=0,this.target.normalize(),d=Math.atan2(this.target.x,this.target.z),a.rotation.set(0,d,0)}else if(c===
"rot")THREE.Quaternion.slerp(e,g,a.quaternion,d);else if(c==="scl")c=a.scale,c.x=e[0]+(g[0]-e[0])*d,c.y=e[1]+(g[1]-e[1])*d,c.z=e[2]+(g[2]-e[2])*d}}if(this.JITCompile&&m[0][n]===void 0){this.hierarchy[0].update(null,!0);for(o=0;o<this.hierarchy.length;o++)m[o][n]=this.hierarchy[o]instanceof THREE.Bone?this.hierarchy[o].skinMatrix.clone():this.hierarchy[o].matrix.clone()}}};
THREE.Animation.prototype.interpolateCatmullRom=function(a,b){var c=[],d=[],e,g,f,h,k,n;e=(a.length-1)*b;g=Math.floor(e);e-=g;c[0]=g===0?g:g-1;c[1]=g;c[2]=g>a.length-2?g:g+1;c[3]=g>a.length-3?g:g+2;g=a[c[0]];h=a[c[1]];k=a[c[2]];n=a[c[3]];c=e*e;f=e*c;d[0]=this.interpolate(g[0],h[0],k[0],n[0],e,c,f);d[1]=this.interpolate(g[1],h[1],k[1],n[1],e,c,f);d[2]=this.interpolate(g[2],h[2],k[2],n[2],e,c,f);return d};
THREE.Animation.prototype.interpolate=function(a,b,c,d,e,g,f){a=(c-a)*0.5;d=(d-b)*0.5;return(2*(b-c)+a+d)*f+(-3*(b-c)-2*a-d)*g+a*e+b};THREE.Animation.prototype.getNextKeyWith=function(a,b,c){var d=this.data.hierarchy[b].keys;for(this.interpolationType===THREE.AnimationHandler.CATMULLROM||this.interpolationType===THREE.AnimationHandler.CATMULLROM_FORWARD?c=c<d.length-1?c:d.length-1:c%=d.length;c<d.length;c++)if(d[c][a]!==void 0)return d[c];return this.data.hierarchy[b].keys[0]};
THREE.Animation.prototype.getPrevKeyWith=function(a,b,c){for(var d=this.data.hierarchy[b].keys,c=this.interpolationType===THREE.AnimationHandler.CATMULLROM||this.interpolationType===THREE.AnimationHandler.CATMULLROM_FORWARD?c>0?c:0:c>=0?c:c+d.length;c>=0;c--)if(d[c][a]!==void 0)return d[c];return this.data.hierarchy[b].keys[d.length-1]};
THREE.CubeCamera=function(a,b,c,d){this.heightOffset=c;this.position=new THREE.Vector3(0,c,0);this.cameraPX=new THREE.PerspectiveCamera(90,1,a,b);this.cameraNX=new THREE.PerspectiveCamera(90,1,a,b);this.cameraPY=new THREE.PerspectiveCamera(90,1,a,b);this.cameraNY=new THREE.PerspectiveCamera(90,1,a,b);this.cameraPZ=new THREE.PerspectiveCamera(90,1,a,b);this.cameraNZ=new THREE.PerspectiveCamera(90,1,a,b);this.cameraPX.position=this.position;this.cameraNX.position=this.position;this.cameraPY.position=
this.position;this.cameraNY.position=this.position;this.cameraPZ.position=this.position;this.cameraNZ.position=this.position;this.cameraPX.up.set(0,-1,0);this.cameraNX.up.set(0,-1,0);this.cameraPY.up.set(0,0,1);this.cameraNY.up.set(0,0,-1);this.cameraPZ.up.set(0,-1,0);this.cameraNZ.up.set(0,-1,0);this.targetPX=new THREE.Vector3(0,0,0);this.targetNX=new THREE.Vector3(0,0,0);this.targetPY=new THREE.Vector3(0,0,0);this.targetNY=new THREE.Vector3(0,0,0);this.targetPZ=new THREE.Vector3(0,0,0);this.targetNZ=
new THREE.Vector3(0,0,0);this.renderTarget=new THREE.WebGLRenderTargetCube(d,d,{format:THREE.RGBFormat,magFilter:THREE.LinearFilter,minFilter:THREE.LinearFilter});this.updatePosition=function(a){this.position.copy(a);this.position.y+=this.heightOffset;this.targetPX.copy(this.position);this.targetNX.copy(this.position);this.targetPY.copy(this.position);this.targetNY.copy(this.position);this.targetPZ.copy(this.position);this.targetNZ.copy(this.position);this.targetPX.x+=1;this.targetNX.x-=1;this.targetPY.y+=
1;this.targetNY.y-=1;this.targetPZ.z+=1;this.targetNZ.z-=1;this.cameraPX.lookAt(this.targetPX);this.cameraNX.lookAt(this.targetNX);this.cameraPY.lookAt(this.targetPY);this.cameraNY.lookAt(this.targetNY);this.cameraPZ.lookAt(this.targetPZ);this.cameraNZ.lookAt(this.targetNZ)};this.updateCubeMap=function(a,c){var b=this.renderTarget;b.activeCubeFace=0;a.render(c,this.cameraPX,b);b.activeCubeFace=1;a.render(c,this.cameraNX,b);b.activeCubeFace=2;a.render(c,this.cameraPY,b);b.activeCubeFace=3;a.render(c,
this.cameraNY,b);b.activeCubeFace=4;a.render(c,this.cameraPZ,b);b.activeCubeFace=5;a.render(c,this.cameraNZ,b)}};THREE.FirstPersonCamera=function(){console.warn("DEPRECATED: FirstPersonCamera() is FirstPersonControls().")};THREE.PathCamera=function(){console.warn("DEPRECATED: PathCamera() is PathControls().")};THREE.FlyCamera=function(){console.warn("DEPRECATED: FlyCamera() is FlyControls().")};THREE.RollCamera=function(){console.warn("DEPRECATED: RollCamera() is RollControls().")};
THREE.TrackballCamera=function(){console.warn("DEPRECATED: TrackballCamera() is TrackballControls().")};THREE.CombinedCamera=function(a,b,c,d,e,g,f){THREE.Camera.call(this);this.fov=c;this.left=-a/2;this.right=a/2;this.top=b/2;this.bottom=-b/2;this.cameraO=new THREE.OrthographicCamera(a/-2,a/2,b/2,b/-2,g,f);this.cameraP=new THREE.PerspectiveCamera(c,a/b,d,e);this.zoom=1;this.toPerspective()};THREE.CombinedCamera.prototype=new THREE.Camera;THREE.CombinedCamera.prototype.constructor=THREE.CoolCamera;
THREE.CombinedCamera.prototype.toPerspective=function(){this.near=this.cameraP.near;this.far=this.cameraP.far;this.cameraP.fov=this.fov/this.zoom;this.cameraP.updateProjectionMatrix();this.projectionMatrix=this.cameraP.projectionMatrix;this.inPersepectiveMode=!0;this.inOrthographicMode=!1};
THREE.CombinedCamera.prototype.toOrthographic=function(){var a=Math.tan(this.fov/2)*((this.cameraP.near+this.cameraP.far)/2),b=2*a*this.cameraP.aspect/2;a/=this.zoom;b/=this.zoom;this.cameraO.left=-b;this.cameraO.right=b;this.cameraO.top=a;this.cameraO.bottom=-a;this.cameraO.updateProjectionMatrix();this.near=this.cameraO.near;this.far=this.cameraO.far;this.projectionMatrix=this.cameraO.projectionMatrix;this.inPersepectiveMode=!1;this.inOrthographicMode=!0};
THREE.CombinedCamera.prototype.setFov=function(a){this.fov=a;this.inPersepectiveMode?this.toPerspective():this.toOrthographic()};THREE.CombinedCamera.prototype.setLens=function(a,b){b||(b=43.25);var c=2*Math.atan(b/(a*2));c*=180/Math.PI;this.setFov(c);return c};THREE.CombinedCamera.prototype.setZoom=function(a){this.zoom=a;this.inPersepectiveMode?this.toPerspective():this.toOrthographic()};
THREE.CombinedCamera.prototype.toFrontView=function(){this.rotation.x=0;this.rotation.y=0;this.rotation.z=0;this.rotationAutoUpdate=!1};THREE.CombinedCamera.prototype.toBackView=function(){this.rotation.x=0;this.rotation.y=Math.PI;this.rotation.z=0;this.rotationAutoUpdate=!1};THREE.CombinedCamera.prototype.toLeftView=function(){this.rotation.x=0;this.rotation.y=-Math.PI/2;this.rotation.z=0;this.rotationAutoUpdate=!1};
THREE.CombinedCamera.prototype.toRightView=function(){this.rotation.x=0;this.rotation.y=Math.PI/2;this.rotation.z=0;this.rotationAutoUpdate=!1};THREE.CombinedCamera.prototype.toTopView=function(){this.rotation.x=-Math.PI/2;this.rotation.y=0;this.rotation.z=0;this.rotationAutoUpdate=!1};THREE.CombinedCamera.prototype.toBottomView=function(){this.rotation.x=Math.PI/2;this.rotation.y=0;this.rotation.z=0;this.rotationAutoUpdate=!1};
THREE.FirstPersonControls=function(a,b){function c(a,c){return function(){c.apply(a,arguments)}}this.object=a;this.target=new THREE.Vector3(0,0,0);this.domElement=b!==void 0?b:document;this.movementSpeed=1;this.lookSpeed=0.0050;this.noFly=!1;this.lookVertical=!0;this.autoForward=!1;this.activeLook=!0;this.heightSpeed=!1;this.heightCoef=1;this.heightMin=0;this.constrainVertical=!1;this.verticalMin=0;this.verticalMax=Math.PI;this.theta=this.phi=this.lon=this.lat=this.mouseY=this.mouseX=this.autoSpeedFactor=
0;this.mouseDragOn=this.freeze=this.moveRight=this.moveLeft=this.moveBackward=this.moveForward=!1;this.domElement===document?(this.viewHalfX=window.innerWidth/2,this.viewHalfY=window.innerHeight/2):(this.viewHalfX=this.domElement.offsetWidth/2,this.viewHalfY=this.domElement.offsetHeight/2,this.domElement.setAttribute("tabindex",-1));this.onMouseDown=function(a){this.domElement!==document&&this.domElement.focus();a.preventDefault();a.stopPropagation();if(this.activeLook)switch(a.button){case 0:this.moveForward=
!0;break;case 2:this.moveBackward=!0}this.mouseDragOn=!0};this.onMouseUp=function(a){a.preventDefault();a.stopPropagation();if(this.activeLook)switch(a.button){case 0:this.moveForward=!1;break;case 2:this.moveBackward=!1}this.mouseDragOn=!1};this.onMouseMove=function(a){this.domElement===document?(this.mouseX=a.pageX-this.viewHalfX,this.mouseY=a.pageY-this.viewHalfY):(this.mouseX=a.pageX-this.domElement.offsetLeft-this.viewHalfX,this.mouseY=a.pageY-this.domElement.offsetTop-this.viewHalfY)};this.onKeyDown=
function(a){switch(a.keyCode){case 38:case 87:this.moveForward=!0;break;case 37:case 65:this.moveLeft=!0;break;case 40:case 83:this.moveBackward=!0;break;case 39:case 68:this.moveRight=!0;break;case 82:this.moveUp=!0;break;case 70:this.moveDown=!0;break;case 81:this.freeze=!this.freeze}};this.onKeyUp=function(a){switch(a.keyCode){case 38:case 87:this.moveForward=!1;break;case 37:case 65:this.moveLeft=!1;break;case 40:case 83:this.moveBackward=!1;break;case 39:case 68:this.moveRight=!1;break;case 82:this.moveUp=
!1;break;case 70:this.moveDown=!1}};this.update=function(a){var c=0;if(!this.freeze){if(this.heightSpeed){var b=THREE.Math.clamp(this.object.position.y,this.heightMin,this.heightMax)-this.heightMin;this.autoSpeedFactor=a*b*this.heightCoef}else this.autoSpeedFactor=0;c=a*this.movementSpeed;(this.moveForward||this.autoForward&&!this.moveBackward)&&this.object.translateZ(-(c+this.autoSpeedFactor));this.moveBackward&&this.object.translateZ(c);this.moveLeft&&this.object.translateX(-c);this.moveRight&&
this.object.translateX(c);this.moveUp&&this.object.translateY(c);this.moveDown&&this.object.translateY(-c);b=a*this.lookSpeed;this.activeLook||(b=0);this.lon+=this.mouseX*b;this.lookVertical&&(this.lat-=this.mouseY*b);this.lat=Math.max(-85,Math.min(85,this.lat));this.phi=(90-this.lat)*Math.PI/180;this.theta=this.lon*Math.PI/180;a=this.target;c=this.object.position;a.x=c.x+100*Math.sin(this.phi)*Math.cos(this.theta);a.y=c.y+100*Math.cos(this.phi);a.z=c.z+100*Math.sin(this.phi)*Math.sin(this.theta)}a=
1;this.constrainVertical&&(a=Math.PI/(this.verticalMax-this.verticalMin));this.lon+=this.mouseX*b;this.lookVertical&&(this.lat-=this.mouseY*b*a);this.lat=Math.max(-85,Math.min(85,this.lat));this.phi=(90-this.lat)*Math.PI/180;this.theta=this.lon*Math.PI/180;if(this.constrainVertical)this.phi=THREE.Math.mapLinear(this.phi,0,Math.PI,this.verticalMin,this.verticalMax);a=this.target;c=this.object.position;a.x=c.x+100*Math.sin(this.phi)*Math.cos(this.theta);a.y=c.y+100*Math.cos(this.phi);a.z=c.z+100*Math.sin(this.phi)*
Math.sin(this.theta);this.object.lookAt(a)};this.domElement.addEventListener("contextmenu",function(a){a.preventDefault()},!1);this.domElement.addEventListener("mousemove",c(this,this.onMouseMove),!1);this.domElement.addEventListener("mousedown",c(this,this.onMouseDown),!1);this.domElement.addEventListener("mouseup",c(this,this.onMouseUp),!1);this.domElement.addEventListener("keydown",c(this,this.onKeyDown),!1);this.domElement.addEventListener("keyup",c(this,this.onKeyUp),!1)};
THREE.PathControls=function(a,b){function c(a){if((a*=2)<1)return 0.5*a*a;return-0.5*(--a*(a-2)-1)}function d(a,c){return function(){c.apply(a,arguments)}}function e(a,c,b,d){var g={name:b,fps:0.6,length:d,hierarchy:[]},e,f=c.getControlPointsArray(),h=c.getLength(),s=f.length,v=0;e=s-1;c={parent:-1,keys:[]};c.keys[0]={time:0,pos:f[0],rot:[0,0,0,1],scl:[1,1,1]};c.keys[e]={time:d,pos:f[e],rot:[0,0,0,1],scl:[1,1,1]};for(e=1;e<s-1;e++)v=d*h.chunks[e]/h.total,c.keys[e]={time:v,pos:f[e]};g.hierarchy[0]=
c;THREE.AnimationHandler.add(g);return new THREE.Animation(a,b,THREE.AnimationHandler.CATMULLROM_FORWARD,!1)}function g(a,c){var b,d,e=new THREE.Geometry;for(b=0;b<a.points.length*c;b++)d=b/(a.points.length*c),d=a.getPoint(d),e.vertices[b]=new THREE.Vertex(new THREE.Vector3(d.x,d.y,d.z));return e}this.object=a;this.domElement=b!==void 0?b:document;this.id="PathControls"+THREE.PathControlsIdCounter++;this.duration=1E4;this.waypoints=[];this.useConstantSpeed=!0;this.resamplingCoef=50;this.debugPath=
new THREE.Object3D;this.debugDummy=new THREE.Object3D;this.animationParent=new THREE.Object3D;this.lookSpeed=0.0050;this.lookHorizontal=this.lookVertical=!0;this.verticalAngleMap={srcRange:[0,2*Math.PI],dstRange:[0,2*Math.PI]};this.horizontalAngleMap={srcRange:[0,2*Math.PI],dstRange:[0,2*Math.PI]};this.target=new THREE.Object3D;this.theta=this.phi=this.lon=this.lat=this.mouseY=this.mouseX=0;this.domElement===document?(this.viewHalfX=window.innerWidth/2,this.viewHalfY=window.innerHeight/2):(this.viewHalfX=
this.domElement.offsetWidth/2,this.viewHalfY=this.domElement.offsetHeight/2,this.domElement.setAttribute("tabindex",-1));var f=Math.PI*2,h=Math.PI/180;this.update=function(a){var b;this.lookHorizontal&&(this.lon+=this.mouseX*this.lookSpeed*a);this.lookVertical&&(this.lat-=this.mouseY*this.lookSpeed*a);this.lon=Math.max(0,Math.min(360,this.lon));this.lat=Math.max(-85,Math.min(85,this.lat));this.phi=(90-this.lat)*h;this.theta=this.lon*h;a=this.phi%f;this.phi=a>=0?a:a+f;b=this.verticalAngleMap.srcRange;
a=this.verticalAngleMap.dstRange;b=THREE.Math.mapLinear(this.phi,b[0],b[1],a[0],a[1]);var d=a[1]-a[0];this.phi=c((b-a[0])/d)*d+a[0];b=this.horizontalAngleMap.srcRange;a=this.horizontalAngleMap.dstRange;b=THREE.Math.mapLinear(this.theta,b[0],b[1],a[0],a[1]);d=a[1]-a[0];this.theta=c((b-a[0])/d)*d+a[0];a=this.target.position;a.x=100*Math.sin(this.phi)*Math.cos(this.theta);a.y=100*Math.cos(this.phi);a.z=100*Math.sin(this.phi)*Math.sin(this.theta);this.object.lookAt(this.target.position)};this.onMouseMove=
function(a){this.domElement===document?(this.mouseX=a.pageX-this.viewHalfX,this.mouseY=a.pageY-this.viewHalfY):(this.mouseX=a.pageX-this.domElement.offsetLeft-this.viewHalfX,this.mouseY=a.pageY-this.domElement.offsetTop-this.viewHalfY)};this.init=function(){this.spline=new THREE.Spline;this.spline.initFromArray(this.waypoints);this.useConstantSpeed&&this.spline.reparametrizeByArcLength(this.resamplingCoef);if(this.createDebugDummy){var a=new THREE.MeshLambertMaterial({color:30719}),c=new THREE.MeshLambertMaterial({color:65280}),
b=new THREE.CubeGeometry(10,10,20),f=new THREE.CubeGeometry(2,2,10);this.animationParent=new THREE.Mesh(b,a);a=new THREE.Mesh(f,c);a.position.set(0,10,0);this.animation=e(this.animationParent,this.spline,this.id,this.duration);this.animationParent.add(this.object);this.animationParent.add(this.target);this.animationParent.add(a)}else this.animation=e(this.animationParent,this.spline,this.id,this.duration),this.animationParent.add(this.target),this.animationParent.add(this.object);if(this.createDebugPath){var a=
this.debugPath,c=this.spline,f=g(c,10),b=g(c,10),h=new THREE.LineBasicMaterial({color:16711680,linewidth:3}),f=new THREE.Line(f,h),b=new THREE.ParticleSystem(b,new THREE.ParticleBasicMaterial({color:16755200,size:3}));f.scale.set(1,1,1);a.add(f);b.scale.set(1,1,1);a.add(b);for(var f=new THREE.SphereGeometry(1,16,8),h=new THREE.MeshBasicMaterial({color:65280}),o=0;o<c.points.length;o++)b=new THREE.Mesh(f,h),b.position.copy(c.points[o]),a.add(b)}this.domElement.addEventListener("mousemove",d(this,this.onMouseMove),
!1)}};THREE.PathControlsIdCounter=0;
THREE.FlyControls=function(a,b){function c(a,c){return function(){c.apply(a,arguments)}}this.object=a;this.domElement=b!==void 0?b:document;b&&this.domElement.setAttribute("tabindex",-1);this.movementSpeed=1;this.rollSpeed=0.0050;this.autoForward=this.dragToLook=!1;this.object.useQuaternion=!0;this.tmpQuaternion=new THREE.Quaternion;this.mouseStatus=0;this.moveState={up:0,down:0,left:0,right:0,forward:0,back:0,pitchUp:0,pitchDown:0,yawLeft:0,yawRight:0,rollLeft:0,rollRight:0};this.moveVector=new THREE.Vector3(0,
0,0);this.rotationVector=new THREE.Vector3(0,0,0);this.handleEvent=function(a){if(typeof this[a.type]=="function")this[a.type](a)};this.keydown=function(a){if(!a.altKey){switch(a.keyCode){case 16:this.movementSpeedMultiplier=0.1;break;case 87:this.moveState.forward=1;break;case 83:this.moveState.back=1;break;case 65:this.moveState.left=1;break;case 68:this.moveState.right=1;break;case 82:this.moveState.up=1;break;case 70:this.moveState.down=1;break;case 38:this.moveState.pitchUp=1;break;case 40:this.moveState.pitchDown=
1;break;case 37:this.moveState.yawLeft=1;break;case 39:this.moveState.yawRight=1;break;case 81:this.moveState.rollLeft=1;break;case 69:this.moveState.rollRight=1}this.updateMovementVector();this.updateRotationVector()}};this.keyup=function(a){switch(a.keyCode){case 16:this.movementSpeedMultiplier=1;break;case 87:this.moveState.forward=0;break;case 83:this.moveState.back=0;break;case 65:this.moveState.left=0;break;case 68:this.moveState.right=0;break;case 82:this.moveState.up=0;break;case 70:this.moveState.down=
0;break;case 38:this.moveState.pitchUp=0;break;case 40:this.moveState.pitchDown=0;break;case 37:this.moveState.yawLeft=0;break;case 39:this.moveState.yawRight=0;break;case 81:this.moveState.rollLeft=0;break;case 69:this.moveState.rollRight=0}this.updateMovementVector();this.updateRotationVector()};this.mousedown=function(a){this.domElement!==document&&this.domElement.focus();a.preventDefault();a.stopPropagation();if(this.dragToLook)this.mouseStatus++;else switch(a.button){case 0:this.object.moveForward=
!0;break;case 2:this.object.moveBackward=!0}};this.mousemove=function(a){if(!this.dragToLook||this.mouseStatus>0){var c=this.getContainerDimensions(),b=c.size[0]/2,f=c.size[1]/2;this.moveState.yawLeft=-(a.pageX-c.offset[0]-b)/b;this.moveState.pitchDown=(a.pageY-c.offset[1]-f)/f;this.updateRotationVector()}};this.mouseup=function(a){a.preventDefault();a.stopPropagation();if(this.dragToLook)this.mouseStatus--,this.moveState.yawLeft=this.moveState.pitchDown=0;else switch(a.button){case 0:this.moveForward=
!1;break;case 2:this.moveBackward=!1}this.updateRotationVector()};this.update=function(a){var c=a*this.movementSpeed;a*=this.rollSpeed;this.object.translateX(this.moveVector.x*c);this.object.translateY(this.moveVector.y*c);this.object.translateZ(this.moveVector.z*c);this.tmpQuaternion.set(this.rotationVector.x*a,this.rotationVector.y*a,this.rotationVector.z*a,1).normalize();this.object.quaternion.multiplySelf(this.tmpQuaternion);this.object.matrix.setPosition(this.object.position);this.object.matrix.setRotationFromQuaternion(this.object.quaternion);
this.object.matrixWorldNeedsUpdate=!0};this.updateMovementVector=function(){var a=this.moveState.forward||this.autoForward&&!this.moveState.back?1:0;this.moveVector.x=-this.moveState.left+this.moveState.right;this.moveVector.y=-this.moveState.down+this.moveState.up;this.moveVector.z=-a+this.moveState.back};this.updateRotationVector=function(){this.rotationVector.x=-this.moveState.pitchDown+this.moveState.pitchUp;this.rotationVector.y=-this.moveState.yawRight+this.moveState.yawLeft;this.rotationVector.z=
-this.moveState.rollRight+this.moveState.rollLeft};this.getContainerDimensions=function(){return this.domElement!=document?{size:[this.domElement.offsetWidth,this.domElement.offsetHeight],offset:[this.domElement.offsetLeft,this.domElement.offsetTop]}:{size:[window.innerWidth,window.innerHeight],offset:[0,0]}};this.domElement.addEventListener("mousemove",c(this,this.mousemove),!1);this.domElement.addEventListener("mousedown",c(this,this.mousedown),!1);this.domElement.addEventListener("mouseup",c(this,
this.mouseup),!1);this.domElement.addEventListener("keydown",c(this,this.keydown),!1);this.domElement.addEventListener("keyup",c(this,this.keyup),!1);this.updateMovementVector();this.updateRotationVector()};
THREE.RollControls=function(a,b){this.object=a;this.domElement=b!==void 0?b:document;this.mouseLook=!0;this.autoForward=!1;this.rollSpeed=this.movementSpeed=this.lookSpeed=1;this.constrainVertical=[-0.9,0.9];this.object.matrixAutoUpdate=!1;this.forward=new THREE.Vector3(0,0,1);this.roll=0;var c=new THREE.Vector3,d=new THREE.Vector3,e=new THREE.Vector3,g=new THREE.Matrix4,f=!1,h=1,k=0,n=0,m=0,r=0,q=0,o=window.innerWidth/2,t=window.innerHeight/2;this.update=function(a){if(this.mouseLook){var b=a*this.lookSpeed;
this.rotateHorizontally(b*r);this.rotateVertically(b*q)}b=a*this.movementSpeed;this.object.translateZ(-b*(k>0||this.autoForward&&!(k<0)?1:k));this.object.translateX(b*n);this.object.translateY(b*m);f&&(this.roll+=this.rollSpeed*a*h);if(this.forward.y>this.constrainVertical[1])this.forward.y=this.constrainVertical[1],this.forward.normalize();else if(this.forward.y<this.constrainVertical[0])this.forward.y=this.constrainVertical[0],this.forward.normalize();e.copy(this.forward);d.set(0,1,0);c.cross(d,
e).normalize();d.cross(e,c).normalize();this.object.matrix.n11=c.x;this.object.matrix.n12=d.x;this.object.matrix.n13=e.x;this.object.matrix.n21=c.y;this.object.matrix.n22=d.y;this.object.matrix.n23=e.y;this.object.matrix.n31=c.z;this.object.matrix.n32=d.z;this.object.matrix.n33=e.z;g.identity();g.n11=Math.cos(this.roll);g.n12=-Math.sin(this.roll);g.n21=Math.sin(this.roll);g.n22=Math.cos(this.roll);this.object.matrix.multiplySelf(g);this.object.matrixWorldNeedsUpdate=!0;this.object.matrix.n14=this.object.position.x;
this.object.matrix.n24=this.object.position.y;this.object.matrix.n34=this.object.position.z};this.translateX=function(a){this.object.position.x+=this.object.matrix.n11*a;this.object.position.y+=this.object.matrix.n21*a;this.object.position.z+=this.object.matrix.n31*a};this.translateY=function(a){this.object.position.x+=this.object.matrix.n12*a;this.object.position.y+=this.object.matrix.n22*a;this.object.position.z+=this.object.matrix.n32*a};this.translateZ=function(a){this.object.position.x-=this.object.matrix.n13*
a;this.object.position.y-=this.object.matrix.n23*a;this.object.position.z-=this.object.matrix.n33*a};this.rotateHorizontally=function(a){c.set(this.object.matrix.n11,this.object.matrix.n21,this.object.matrix.n31);c.multiplyScalar(a);this.forward.subSelf(c);this.forward.normalize()};this.rotateVertically=function(a){d.set(this.object.matrix.n12,this.object.matrix.n22,this.object.matrix.n32);d.multiplyScalar(a);this.forward.addSelf(d);this.forward.normalize()};this.domElement.addEventListener("contextmenu",
function(a){a.preventDefault()},!1);this.domElement.addEventListener("mousemove",function(a){r=(a.clientX-o)/window.innerWidth;q=(a.clientY-t)/window.innerHeight},!1);this.domElement.addEventListener("mousedown",function(a){a.preventDefault();a.stopPropagation();switch(a.button){case 0:k=1;break;case 2:k=-1}},!1);this.domElement.addEventListener("mouseup",function(a){a.preventDefault();a.stopPropagation();switch(a.button){case 0:k=0;break;case 2:k=0}},!1);this.domElement.addEventListener("keydown",
function(a){switch(a.keyCode){case 38:case 87:k=1;break;case 37:case 65:n=-1;break;case 40:case 83:k=-1;break;case 39:case 68:n=1;break;case 81:f=!0;h=1;break;case 69:f=!0;h=-1;break;case 82:m=1;break;case 70:m=-1}},!1);this.domElement.addEventListener("keyup",function(a){switch(a.keyCode){case 38:case 87:k=0;break;case 37:case 65:n=0;break;case 40:case 83:k=0;break;case 39:case 68:n=0;break;case 81:f=!1;break;case 69:f=!1;break;case 82:m=0;break;case 70:m=0}},!1)};
THREE.TrackballControls=function(a,b){var c=this,d={NONE:-1,ROTATE:0,ZOOM:1,PAN:2};this.object=a;this.domElement=b!==void 0?b:document;this.enabled=!0;this.screen={width:window.innerWidth,height:window.innerHeight,offsetLeft:0,offsetTop:0};this.radius=(this.screen.width+this.screen.height)/4;this.rotateSpeed=1;this.zoomSpeed=1.2;this.panSpeed=0.3;this.staticMoving=this.noPan=this.noZoom=this.noRotate=!1;this.dynamicDampingFactor=0.2;this.minDistance=0;this.maxDistance=Infinity;this.keys=[65,83,68];
this.target=new THREE.Vector3(0,0,0);var e=!1,g=d.NONE,f=new THREE.Vector3,h=new THREE.Vector3,k=new THREE.Vector3,n=new THREE.Vector2,m=new THREE.Vector2,r=new THREE.Vector2,q=new THREE.Vector2;this.handleEvent=function(a){if(typeof this[a.type]=="function")this[a.type](a)};this.getMouseOnScreen=function(a,b){return new THREE.Vector2((a-c.screen.offsetLeft)/c.radius*0.5,(b-c.screen.offsetTop)/c.radius*0.5)};this.getMouseProjectionOnBall=function(a,b){var d=new THREE.Vector3((a-c.screen.width*0.5-
c.screen.offsetLeft)/c.radius,(c.screen.height*0.5+c.screen.offsetTop-b)/c.radius,0),g=d.length();g>1?d.normalize():d.z=Math.sqrt(1-g*g);f.copy(c.object.position).subSelf(c.target);g=c.object.up.clone().setLength(d.y);g.addSelf(c.object.up.clone().crossSelf(f).setLength(d.x));g.addSelf(f.setLength(d.z));return g};this.rotateCamera=function(){var a=Math.acos(h.dot(k)/h.length()/k.length());if(a){var b=(new THREE.Vector3).cross(h,k).normalize(),d=new THREE.Quaternion;a*=c.rotateSpeed;d.setFromAxisAngle(b,
-a);d.multiplyVector3(f);d.multiplyVector3(c.object.up);d.multiplyVector3(k);c.staticMoving?h=k:(d.setFromAxisAngle(b,a*(c.dynamicDampingFactor-1)),d.multiplyVector3(h))}};this.zoomCamera=function(){var a=1+(m.y-n.y)*c.zoomSpeed;a!==1&&a>0&&(f.multiplyScalar(a),c.staticMoving?n=m:n.y+=(m.y-n.y)*this.dynamicDampingFactor)};this.panCamera=function(){var a=q.clone().subSelf(r);if(a.lengthSq()){a.multiplyScalar(f.length()*c.panSpeed);var b=f.clone().crossSelf(c.object.up).setLength(a.x);b.addSelf(c.object.up.clone().setLength(a.y));
c.object.position.addSelf(b);c.target.addSelf(b);c.staticMoving?r=q:r.addSelf(a.sub(q,r).multiplyScalar(c.dynamicDampingFactor))}};this.checkDistances=function(){if(!c.noZoom||!c.noPan)c.object.position.lengthSq()>c.maxDistance*c.maxDistance&&c.object.position.setLength(c.maxDistance),f.lengthSq()<c.minDistance*c.minDistance&&c.object.position.add(c.target,f.setLength(c.minDistance))};this.update=function(){f.copy(c.object.position).subSelf(this.target);c.noRotate||c.rotateCamera();c.noZoom||c.zoomCamera();
c.noPan||c.panCamera();c.object.position.add(c.target,f);c.checkDistances();c.object.lookAt(c.target)};this.domElement.addEventListener("contextmenu",function(a){a.preventDefault()},!1);this.domElement.addEventListener("mousemove",function(a){c.enabled&&(e&&(h=k=c.getMouseProjectionOnBall(a.clientX,a.clientY),n=m=c.getMouseOnScreen(a.clientX,a.clientY),r=q=c.getMouseOnScreen(a.clientX,a.clientY),e=!1),g!==d.NONE&&(g===d.ROTATE&&!c.noRotate?k=c.getMouseProjectionOnBall(a.clientX,a.clientY):g===d.ZOOM&&
!c.noZoom?m=c.getMouseOnScreen(a.clientX,a.clientY):g===d.PAN&&!c.noPan&&(q=c.getMouseOnScreen(a.clientX,a.clientY))))},!1);this.domElement.addEventListener("mousedown",function(a){if(c.enabled&&(a.preventDefault(),a.stopPropagation(),g===d.NONE))g=a.button,g===d.ROTATE&&!c.noRotate?h=k=c.getMouseProjectionOnBall(a.clientX,a.clientY):g===d.ZOOM&&!c.noZoom?n=m=c.getMouseOnScreen(a.clientX,a.clientY):this.noPan||(r=q=c.getMouseOnScreen(a.clientX,a.clientY))},!1);this.domElement.addEventListener("mouseup",
function(a){if(c.enabled)a.preventDefault(),a.stopPropagation(),g=d.NONE},!1);window.addEventListener("keydown",function(a){if(c.enabled&&g===d.NONE){if(a.keyCode===c.keys[d.ROTATE]&&!c.noRotate)g=d.ROTATE;else if(a.keyCode===c.keys[d.ZOOM]&&!c.noZoom)g=d.ZOOM;else if(a.keyCode===c.keys[d.PAN]&&!c.noPan)g=d.PAN;g!==d.NONE&&(e=!0)}},!1);window.addEventListener("keyup",function(){if(c.enabled&&g!==d.NONE)g=d.NONE},!1)};
THREE.CubeGeometry=function(a,b,c,d,e,g,f,h){function k(a,c,b,f,h,k,m,o){var p,q=d||1,r=e||1,s=h/2,t=k/2,v=n.vertices.length;if(a==="x"&&c==="y"||a==="y"&&c==="x")p="z";else if(a==="x"&&c==="z"||a==="z"&&c==="x")p="y",r=g||1;else if(a==="z"&&c==="y"||a==="y"&&c==="z")p="x",q=g||1;var w=q+1,y=r+1,J=h/q,L=k/r,O=new THREE.Vector3;O[p]=m>0?1:-1;for(h=0;h<y;h++)for(k=0;k<w;k++){var U=new THREE.Vector3;U[a]=(k*J-s)*b;U[c]=(h*L-t)*f;U[p]=m;n.vertices.push(new THREE.Vertex(U))}for(h=0;h<r;h++)for(k=0;k<q;k++)a=
new THREE.Face4(k+w*h+v,k+w*(h+1)+v,k+1+w*(h+1)+v,k+1+w*h+v),a.normal.copy(O),a.vertexNormals.push(O.clone(),O.clone(),O.clone(),O.clone()),a.materialIndex=o,n.faces.push(a),n.faceVertexUvs[0].push([new THREE.UV(k/q,h/r),new THREE.UV(k/q,(h+1)/r),new THREE.UV((k+1)/q,(h+1)/r),new THREE.UV((k+1)/q,h/r)])}THREE.Geometry.call(this);var n=this,m=a/2,r=b/2,q=c/2,o,t,p,s,v,y;if(f!==void 0){if(f instanceof Array)this.materials=f;else{this.materials=[];for(o=0;o<6;o++)this.materials.push(f)}o=0;s=1;t=2;v=
3;p=4;y=5}else this.materials=[];this.sides={px:!0,nx:!0,py:!0,ny:!0,pz:!0,nz:!0};if(h!=void 0)for(var w in h)this.sides[w]!=void 0&&(this.sides[w]=h[w]);this.sides.px&&k("z","y",-1,-1,c,b,m,o);this.sides.nx&&k("z","y",1,-1,c,b,-m,s);this.sides.py&&k("x","z",1,1,a,c,r,t);this.sides.ny&&k("x","z",1,-1,a,c,-r,v);this.sides.pz&&k("x","y",1,-1,a,b,q,p);this.sides.nz&&k("x","y",-1,-1,a,b,-q,y);this.computeCentroids();this.mergeVertices()};THREE.CubeGeometry.prototype=new THREE.Geometry;
THREE.CubeGeometry.prototype.constructor=THREE.CubeGeometry;
THREE.CylinderGeometry=function(a,b,c,d,e,g){THREE.Geometry.call(this);var a=a!=null?a:20,b=b!=null?b:20,c=c||100,f=c/2,d=d||8,e=e||1,h,k,n=[],m=[];for(k=0;k<=e;k++){var r=[],q=[],o=k/e,t=o*(b-a)+a;for(h=0;h<=d;h++){var p=h/d;this.vertices.push(new THREE.Vertex(new THREE.Vector3(t*Math.sin(p*Math.PI*2),-o*c+f,t*Math.cos(p*Math.PI*2))));r.push(this.vertices.length-1);q.push(new THREE.UV(p,o))}n.push(r);m.push(q)}for(k=0;k<e;k++)for(h=0;h<d;h++){var c=n[k][h],r=n[k+1][h],q=n[k+1][h+1],o=n[k][h+1],t=
this.vertices[c].position.clone().setY(0).normalize(),p=this.vertices[r].position.clone().setY(0).normalize(),s=this.vertices[q].position.clone().setY(0).normalize(),v=this.vertices[o].position.clone().setY(0).normalize(),y=m[k][h].clone(),w=m[k+1][h].clone(),D=m[k+1][h+1].clone(),H=m[k][h+1].clone();this.faces.push(new THREE.Face4(c,r,q,o,[t,p,s,v]));this.faceVertexUvs[0].push([y,w,D,H])}if(!g&&a>0){this.vertices.push(new THREE.Vertex(new THREE.Vector3(0,f,0)));for(h=0;h<d;h++)c=n[0][h],r=n[0][h+
1],q=this.vertices.length-1,t=new THREE.Vector3(0,1,0),p=new THREE.Vector3(0,1,0),s=new THREE.Vector3(0,1,0),y=m[0][h].clone(),w=m[0][h+1].clone(),D=new THREE.UV(w.u,0),this.faces.push(new THREE.Face3(c,r,q,[t,p,s])),this.faceVertexUvs[0].push([y,w,D])}if(!g&&b>0){this.vertices.push(new THREE.Vertex(new THREE.Vector3(0,-f,0)));for(h=0;h<d;h++)c=n[k][h+1],r=n[k][h],q=this.vertices.length-1,t=new THREE.Vector3(0,-1,0),p=new THREE.Vector3(0,-1,0),s=new THREE.Vector3(0,-1,0),y=m[k][h+1].clone(),w=m[k][h].clone(),
D=new THREE.UV(w.u,1),this.faces.push(new THREE.Face3(c,r,q,[t,p,s])),this.faceVertexUvs[0].push([y,w,D])}this.computeCentroids();this.computeFaceNormals()};THREE.CylinderGeometry.prototype=new THREE.Geometry;THREE.CylinderGeometry.prototype.constructor=THREE.CylinderGeometry;
THREE.ExtrudeGeometry=function(a,b){if(typeof a!=="undefined"){THREE.Geometry.call(this);var a=a instanceof Array?a:[a],c,d=a.length,e;this.shapebb=a[d-1].getBoundingBox();for(c=0;c<d;c++)e=a[c],this.addShape(e,b);this.computeCentroids();this.computeFaceNormals()}};THREE.ExtrudeGeometry.prototype=new THREE.Geometry;THREE.ExtrudeGeometry.prototype.constructor=THREE.ExtrudeGeometry;
THREE.ExtrudeGeometry.prototype.addShape=function(a,b){function c(a,c,b){c||console.log("die");return c.clone().multiplyScalar(b).addSelf(a)}function d(a,c,b){var d=THREE.ExtrudeGeometry.__v1,f=THREE.ExtrudeGeometry.__v2,g=THREE.ExtrudeGeometry.__v3,e=THREE.ExtrudeGeometry.__v4,h=THREE.ExtrudeGeometry.__v5,k=THREE.ExtrudeGeometry.__v6;d.set(a.x-c.x,a.y-c.y);f.set(a.x-b.x,a.y-b.y);d=d.normalize();f=f.normalize();g.set(-d.y,d.x);e.set(f.y,-f.x);h.copy(a).addSelf(g);k.copy(a).addSelf(e);if(h.equals(k))return e.clone();
h.copy(c).addSelf(g);k.copy(b).addSelf(e);g=d.dot(e);e=k.subSelf(h).dot(e);g===0&&(console.log("Either infinite or no solutions!"),e===0?console.log("Its finite solutions."):console.log("Too bad, no solutions."));e/=g;if(e<0)return c=Math.atan2(c.y-a.y,c.x-a.x),a=Math.atan2(b.y-a.y,b.x-a.x),c>a&&(a+=Math.PI*2),a=(c+a)/2,new THREE.Vector2(-Math.cos(a),-Math.sin(a));return d.multiplyScalar(e).addSelf(h).subSelf(a).clone()}function e(a){for(u=a.length;--u>=0;){U=u;da=u-1;da<0&&(da=a.length-1);for(var c=
0,b=o+m*2,c=0;c<b;c++){var d=Q*c,g=Q*(c+1),f=Y+U+d,e=Y+U+g,n=f,d=Y+da+d,g=Y+da+g,p=e;n+=M;d+=M;g+=M;p+=M;x.faces.push(new THREE.Face4(n,d,g,p,null,null,D));D&&(n=c/b,d=(c+1)/b,g=h+k*2,f=(x.vertices[f].position.z+k)/g,e=(x.vertices[e].position.z+k)/g,x.faceVertexUvs[0].push([new THREE.UV(f,n),new THREE.UV(e,n),new THREE.UV(e,d),new THREE.UV(f,d)]))}}}function g(a,c,b){x.vertices.push(new THREE.Vertex(new THREE.Vector3(a,c,b)))}function f(a,c,b){a+=M;c+=M;b+=M;x.faces.push(new THREE.Face3(a,c,b,null,
null,w));if(w){var d=H.maxY,g=H.maxX,f=x.vertices[c].position.x,c=x.vertices[c].position.y,e=x.vertices[b].position.x,b=x.vertices[b].position.y;x.faceVertexUvs[0].push([new THREE.UV(x.vertices[a].position.x/g,x.vertices[a].position.y/d),new THREE.UV(f/g,c/d),new THREE.UV(e/g,b/d)])}}var h=b.amount!==void 0?b.amount:100,k=b.bevelThickness!==void 0?b.bevelThickness:6,n=b.bevelSize!==void 0?b.bevelSize:k-2,m=b.bevelSegments!==void 0?b.bevelSegments:3,r=b.bevelEnabled!==void 0?b.bevelEnabled:!0,q=b.curveSegments!==
void 0?b.curveSegments:12,o=b.steps!==void 0?b.steps:1,t=b.bendPath,p=b.extrudePath,s,v=!1,y=b.useSpacedPoints!==void 0?b.useSpacedPoints:!1,w=b.material,D=b.extrudeMaterial,H=this.shapebb;if(p)s=p.getPoints(q),o=s.length,v=!0,r=!1;r||(n=k=m=0);var C,z,A,x=this,M=this.vertices.length;t&&a.addWrapPath(t);q=y?a.extractAllSpacedPoints(q):a.extractAllPoints(q);t=q.shape;q=q.holes;if(p=!THREE.Shape.Utils.isClockWise(t)){t=t.reverse();z=0;for(A=q.length;z<A;z++)C=q[z],THREE.Shape.Utils.isClockWise(C)&&
(q[z]=C.reverse());p=!1}p=THREE.Shape.Utils.triangulateShape(t,q);y=t;z=0;for(A=q.length;z<A;z++)C=q[z],t=t.concat(C);var u,G,T,W,N,R,Q=t.length,ca=p.length,K=[];u=0;G=y.length;U=G-1;for(da=u+1;u<G;u++,U++,da++)U===G&&(U=0),da===G&&(da=0),K[u]=d(y[u],y[U],y[da]);var J=[],L,O=K.concat();z=0;for(A=q.length;z<A;z++){C=q[z];L=[];u=0;G=C.length;U=G-1;for(da=u+1;u<G;u++,U++,da++)U===G&&(U=0),da===G&&(da=0),L[u]=d(C[u],C[U],C[da]);J.push(L);O=O.concat(L)}for(T=0;T<m;T++){W=T/m;N=k*(1-W);W=n*Math.sin(W*Math.PI/
2);u=0;for(G=y.length;u<G;u++)R=c(y[u],K[u],W),g(R.x,R.y,-N);z=0;for(A=q.length;z<A;z++){C=q[z];L=J[z];u=0;for(G=C.length;u<G;u++)R=c(C[u],L[u],W),g(R.x,R.y,-N)}}W=n;for(u=0;u<Q;u++)R=r?c(t[u],O[u],W):t[u],v?g(R.x,R.y+s[0].y,s[0].x):g(R.x,R.y,0);for(T=1;T<=o;T++)for(u=0;u<Q;u++)R=r?c(t[u],O[u],W):t[u],v?g(R.x,R.y+s[T-1].y,s[T-1].x):g(R.x,R.y,h/o*T);for(T=m-1;T>=0;T--){W=T/m;N=k*(1-W);W=n*Math.sin(W*Math.PI/2);u=0;for(G=y.length;u<G;u++)R=c(y[u],K[u],W),g(R.x,R.y,h+N);z=0;for(A=q.length;z<A;z++){C=
q[z];L=J[z];u=0;for(G=C.length;u<G;u++)R=c(C[u],L[u],W),v?g(R.x,R.y+s[o-1].y,s[o-1].x+N):g(R.x,R.y,h+N)}}if(r){r=Q*0;for(u=0;u<ca;u++)n=p[u],f(n[2]+r,n[1]+r,n[0]+r);r=Q*(o+m*2);for(u=0;u<ca;u++)n=p[u],f(n[0]+r,n[1]+r,n[2]+r)}else{for(u=0;u<ca;u++)n=p[u],f(n[2],n[1],n[0]);for(u=0;u<ca;u++)n=p[u],f(n[0]+Q*o,n[1]+Q*o,n[2]+Q*o)}var U,da,Y=0;e(y);Y+=y.length;z=0;for(A=q.length;z<A;z++)C=q[z],e(C),Y+=C.length};THREE.ExtrudeGeometry.__v1=new THREE.Vector2;THREE.ExtrudeGeometry.__v2=new THREE.Vector2;
THREE.ExtrudeGeometry.__v3=new THREE.Vector2;THREE.ExtrudeGeometry.__v4=new THREE.Vector2;THREE.ExtrudeGeometry.__v5=new THREE.Vector2;THREE.ExtrudeGeometry.__v6=new THREE.Vector2;
THREE.IcosahedronGeometry=function(a){function b(a,c,b){var d=Math.sqrt(a*a+c*c+b*b);return e.vertices.push(new THREE.Vertex(new THREE.Vector3(a/d,c/d,b/d)))-1}function c(a,c,b,d){var g=e.vertices[a].position,f=e.vertices[c].position,h=e.vertices[b].position,a=new THREE.Face3(a,c,b);a.vertexNormals.push(g.clone().normalize(),f.clone().normalize(),h.clone().normalize());d.faces.push(a);d.faceVertexUvs[0].push([new THREE.UV(1-(Math.atan2(g.z,g.x)+Math.PI)%Math.PI/Math.PI*0.5,0.5-g.y/2),new THREE.UV(1-
(Math.atan2(f.z,f.x)+Math.PI)%Math.PI/Math.PI*0.5,0.5-f.y/2),new THREE.UV(1-(Math.atan2(h.z,h.x)+Math.PI)%Math.PI/Math.PI*0.5,0.5-h.y/2)])}function d(a,c){var d=e.vertices[a].position,g=e.vertices[c].position;return b((d.x+g.x)/2,(d.y+g.y)/2,(d.z+g.z)/2)}var e=this,g=new THREE.Geometry;this.subdivisions=a||0;THREE.Geometry.call(this);a=(1+Math.sqrt(5))/2;b(-1,a,0);b(1,a,0);b(-1,-a,0);b(1,-a,0);b(0,-1,a);b(0,1,a);b(0,-1,-a);b(0,1,-a);b(a,0,-1);b(a,0,1);b(-a,0,-1);b(-a,0,1);c(0,11,5,g);c(0,5,1,g);c(0,
1,7,g);c(0,7,10,g);c(0,10,11,g);c(1,5,9,g);c(5,11,4,g);c(11,10,2,g);c(10,7,6,g);c(7,1,8,g);c(3,9,4,g);c(3,4,2,g);c(3,2,6,g);c(3,6,8,g);c(3,8,9,g);c(4,9,5,g);c(2,4,11,g);c(6,2,10,g);c(8,6,7,g);c(9,8,1,g);for(var f=0;f<this.subdivisions;f++){var a=new THREE.Geometry,h;for(h in g.faces){var k=d(g.faces[h].a,g.faces[h].b),n=d(g.faces[h].b,g.faces[h].c),m=d(g.faces[h].c,g.faces[h].a);c(g.faces[h].a,k,m,a);c(g.faces[h].b,n,k,a);c(g.faces[h].c,m,n,a);c(k,n,m,a)}g.faces=a.faces;g.faceVertexUvs[0]=a.faceVertexUvs[0]}e.faces=
g.faces;e.faceVertexUvs[0]=g.faceVertexUvs[0];this.computeCentroids();this.computeFaceNormals()};THREE.IcosahedronGeometry.prototype=new THREE.Geometry;THREE.IcosahedronGeometry.prototype.constructor=THREE.IcosahedronGeometry;
THREE.LatheGeometry=function(a,b,c){THREE.Geometry.call(this);this.steps=b||12;this.angle=c||2*Math.PI;for(var b=this.angle/this.steps,c=[],d=[],e=[],g=[],f=(new THREE.Matrix4).setRotationZ(b),h=0;h<a.length;h++)this.vertices.push(new THREE.Vertex(a[h])),c[h]=a[h].clone(),d[h]=this.vertices.length-1;for(var k=0;k<=this.angle+0.0010;k+=b){for(h=0;h<c.length;h++)k<this.angle?(c[h]=f.multiplyVector3(c[h].clone()),this.vertices.push(new THREE.Vertex(c[h])),e[h]=this.vertices.length-1):e=g;k==0&&(g=d);
for(h=0;h<d.length-1;h++)this.faces.push(new THREE.Face4(e[h],e[h+1],d[h+1],d[h])),this.faceVertexUvs[0].push([new THREE.UV(1-k/this.angle,h/a.length),new THREE.UV(1-k/this.angle,(h+1)/a.length),new THREE.UV(1-(k-b)/this.angle,(h+1)/a.length),new THREE.UV(1-(k-b)/this.angle,h/a.length)]);d=e;e=[]}this.computeCentroids();this.computeFaceNormals();this.computeVertexNormals()};THREE.LatheGeometry.prototype=new THREE.Geometry;THREE.LatheGeometry.prototype.constructor=THREE.LatheGeometry;
THREE.OctahedronGeometry=function(a,b){function c(c){var b=c.clone().normalize(),b=new THREE.Vertex(b.clone().multiplyScalar(a));b.index=f.vertices.push(b)-1;b.uv=new THREE.UV(Math.atan2(c.z,-c.x)/2/Math.PI+0.5,Math.atan2(-c.y,Math.sqrt(c.x*c.x+c.z*c.z))/Math.PI+0.5);return b}function d(a,c,b,h){h<1?(h=new THREE.Face3(a.index,c.index,b.index,[a.position,c.position,b.position]),h.centroid.addSelf(a.position).addSelf(c.position).addSelf(b.position).divideScalar(3),h.normal=h.centroid.clone().normalize(),
f.faces.push(h),h=Math.atan2(h.centroid.z,-h.centroid.x),f.faceVertexUvs[0].push([g(a.uv,a.position,h),g(c.uv,c.position,h),g(b.uv,b.position,h)])):(h-=1,d(a,e(a,c),e(a,b),h),d(e(a,c),c,e(c,b),h),d(e(a,b),e(c,b),b,h),d(e(a,c),e(c,b),e(a,b),h))}function e(a,b){h[a.index]||(h[a.index]=[]);h[b.index]||(h[b.index]=[]);var d=h[a.index][b.index];d===void 0&&(h[a.index][b.index]=h[b.index][a.index]=d=c((new THREE.Vector3).add(a.position,b.position).divideScalar(2)));return d}function g(a,c,b){b<0&&a.u===
1&&(a=new THREE.UV(a.u-1,a.v));c.x===0&&c.z===0&&(a=new THREE.UV(b/2/Math.PI+0.5,a.v));return a}THREE.Geometry.call(this);var b=b||0,f=this;c(new THREE.Vector3(1,0,0));c(new THREE.Vector3(-1,0,0));c(new THREE.Vector3(0,1,0));c(new THREE.Vector3(0,-1,0));c(new THREE.Vector3(0,0,1));c(new THREE.Vector3(0,0,-1));var h=[],k=this.vertices;d(k[0],k[2],k[4],b);d(k[0],k[4],k[3],b);d(k[0],k[3],k[5],b);d(k[0],k[5],k[2],b);d(k[1],k[2],k[5],b);d(k[1],k[5],k[3],b);d(k[1],k[3],k[4],b);d(k[1],k[4],k[2],b);this.boundingSphere=
{radius:a}};THREE.OctahedronGeometry.prototype=new THREE.Geometry;THREE.OctahedronGeometry.prototype.constructor=THREE.OctahedronGeometry;
THREE.PlaneGeometry=function(a,b,c,d){THREE.Geometry.call(this);for(var e=a/2,g=b/2,c=c||1,d=d||1,f=c+1,h=d+1,k=a/c,n=b/d,m=new THREE.Vector3(0,0,1),a=0;a<h;a++)for(b=0;b<f;b++)this.vertices.push(new THREE.Vertex(new THREE.Vector3(b*k-e,-(a*n-g),0)));for(a=0;a<d;a++)for(b=0;b<c;b++)e=new THREE.Face4(b+f*a,b+f*(a+1),b+1+f*(a+1),b+1+f*a),e.normal.copy(m),e.vertexNormals.push(m.clone(),m.clone(),m.clone(),m.clone()),this.faces.push(e),this.faceVertexUvs[0].push([new THREE.UV(b/c,a/d),new THREE.UV(b/
c,(a+1)/d),new THREE.UV((b+1)/c,(a+1)/d),new THREE.UV((b+1)/c,a/d)]);this.computeCentroids()};THREE.PlaneGeometry.prototype=new THREE.Geometry;THREE.PlaneGeometry.prototype.constructor=THREE.PlaneGeometry;
THREE.SphereGeometry=function(a,b,c,d,e,g,f){THREE.Geometry.call(this);var a=a||50,b=Math.max(3,Math.floor(b)||8),c=Math.max(2,Math.floor(c)||6),d=d!=void 0?d:0,e=e!=void 0?e:Math.PI*2,g=g!=void 0?g:0,f=f!=void 0?f:Math.PI,h,k,n=[],m=[];for(k=0;k<=c;k++){var r=[],q=[];for(h=0;h<=b;h++){var o=h/b,t=k/c;this.vertices.push(new THREE.Vertex(new THREE.Vector3(-a*Math.cos(d+o*e)*Math.sin(g+t*f),a*Math.cos(g+t*f),a*Math.sin(d+o*e)*Math.sin(g+t*f))));r.push(this.vertices.length-1);q.push(new THREE.UV(o,t))}n.push(r);
m.push(q)}for(k=0;k<c;k++)for(h=0;h<b;h++){var d=n[k][h+1],e=n[k][h],g=n[k+1][h],f=n[k+1][h+1],r=this.vertices[d].position.clone().normalize(),q=this.vertices[e].position.clone().normalize(),o=this.vertices[g].position.clone().normalize(),t=this.vertices[f].position.clone().normalize(),p=m[k][h+1].clone(),s=m[k][h].clone(),v=m[k+1][h].clone(),y=m[k+1][h+1].clone();Math.abs(this.vertices[d].position.y)==a?(this.faces.push(new THREE.Face3(d,g,f,[r,o,t])),this.faceVertexUvs[0].push([p,v,y])):Math.abs(this.vertices[g].position.y)==
a?(this.faces.push(new THREE.Face3(d,e,g,[r,q,o])),this.faceVertexUvs[0].push([p,s,v])):(this.faces.push(new THREE.Face4(d,e,g,f,[r,q,o,t])),this.faceVertexUvs[0].push([p,s,v,y]))}this.computeCentroids();this.computeFaceNormals();this.boundingSphere={radius:a}};THREE.SphereGeometry.prototype=new THREE.Geometry;THREE.SphereGeometry.prototype.constructor=THREE.SphereGeometry;
THREE.TextGeometry=function(a,b){var c=(new THREE.TextPath(a,b)).toShapes();b.amount=b.height!==void 0?b.height:50;if(b.bevelThickness===void 0)b.bevelThickness=10;if(b.bevelSize===void 0)b.bevelSize=8;if(b.bevelEnabled===void 0)b.bevelEnabled=!1;if(b.bend){var d=c[c.length-1].getBoundingBox().maxX;b.bendPath=new THREE.QuadraticBezierCurve(new THREE.Vector2(0,0),new THREE.Vector2(d/2,120),new THREE.Vector2(d,0))}THREE.ExtrudeGeometry.call(this,c,b)};THREE.TextGeometry.prototype=new THREE.ExtrudeGeometry;
THREE.TextGeometry.prototype.constructor=THREE.TextGeometry;
THREE.FontUtils={faces:{},face:"helvetiker",weight:"normal",style:"normal",size:150,divisions:10,getFace:function(){return this.faces[this.face][this.weight][this.style]},loadFace:function(a){var b=a.familyName.toLowerCase();this.faces[b]=this.faces[b]||{};this.faces[b][a.cssFontWeight]=this.faces[b][a.cssFontWeight]||{};this.faces[b][a.cssFontWeight][a.cssFontStyle]=a;return this.faces[b][a.cssFontWeight][a.cssFontStyle]=a},drawText:function(a){for(var b=this.getFace(),c=this.size/b.resolution,d=
0,e=String(a).split(""),g=e.length,f=[],a=0;a<g;a++){var h=new THREE.Path,h=this.extractGlyphPoints(e[a],b,c,d,h);d+=h.offset;f.push(h.path)}return{paths:f,offset:d/2}},extractGlyphPoints:function(a,b,c,d,e){var g=[],f,h,k,n,m,r,q,o,t,p,s,v=b.glyphs[a]||b.glyphs["?"];if(v){if(v.o){b=v._cachedOutline||(v._cachedOutline=v.o.split(" "));n=b.length;for(a=0;a<n;)switch(k=b[a++],k){case "m":k=b[a++]*c+d;m=b[a++]*c;g.push(new THREE.Vector2(k,m));e.moveTo(k,m);break;case "l":k=b[a++]*c+d;m=b[a++]*c;g.push(new THREE.Vector2(k,
m));e.lineTo(k,m);break;case "q":k=b[a++]*c+d;m=b[a++]*c;o=b[a++]*c+d;t=b[a++]*c;e.quadraticCurveTo(o,t,k,m);if(f=g[g.length-1]){r=f.x;q=f.y;f=1;for(h=this.divisions;f<=h;f++){var y=f/h,w=THREE.Shape.Utils.b2(y,r,o,k),y=THREE.Shape.Utils.b2(y,q,t,m);g.push(new THREE.Vector2(w,y))}}break;case "b":if(k=b[a++]*c+d,m=b[a++]*c,o=b[a++]*c+d,t=b[a++]*-c,p=b[a++]*c+d,s=b[a++]*-c,e.bezierCurveTo(k,m,o,t,p,s),f=g[g.length-1]){r=f.x;q=f.y;f=1;for(h=this.divisions;f<=h;f++)y=f/h,w=THREE.Shape.Utils.b3(y,r,o,
p,k),y=THREE.Shape.Utils.b3(y,q,t,s,m),g.push(new THREE.Vector2(w,y))}}}return{offset:v.ha*c,points:g,path:e}}}};
(function(a){var b=function(a){for(var b=a.length,e=0,g=b-1,f=0;f<b;g=f++)e+=a[g].x*a[f].y-a[f].x*a[g].y;return e*0.5};a.Triangulate=function(a,d){var e=a.length;if(e<3)return null;var g=[],f=[],h=[],k,n,m;if(b(a)>0)for(n=0;n<e;n++)f[n]=n;else for(n=0;n<e;n++)f[n]=e-1-n;var r=2*e;for(n=e-1;e>2;){if(r--<=0){console.log("Warning, unable to triangulate polygon!");if(d)return h;return g}k=n;e<=k&&(k=0);n=k+1;e<=n&&(n=0);m=n+1;e<=m&&(m=0);var q;a:{q=a;var o=k,t=n,p=m,s=e,v=f,y=void 0,w=void 0,D=void 0,
H=void 0,C=void 0,z=void 0,A=void 0,x=void 0,M=void 0,w=q[v[o]].x,D=q[v[o]].y,H=q[v[t]].x,C=q[v[t]].y,z=q[v[p]].x,A=q[v[p]].y;if(1.0E-10>(H-w)*(A-D)-(C-D)*(z-w))q=!1;else{for(y=0;y<s;y++)if(!(y==o||y==t||y==p)){var x=q[v[y]].x,M=q[v[y]].y,u=void 0,G=void 0,T=void 0,W=void 0,N=void 0,R=void 0,Q=void 0,ca=void 0,K=void 0,J=void 0,L=void 0,O=void 0,u=T=N=void 0,u=z-H,G=A-C,T=w-z,W=D-A,N=H-w,R=C-D,Q=x-w,ca=M-D,K=x-H,J=M-C,L=x-z,O=M-A,u=u*J-G*K,N=N*ca-R*Q,T=T*O-W*L;if(u>=0&&T>=0&&N>=0){q=!1;break a}}q=
!0}}if(q){g.push([a[f[k]],a[f[n]],a[f[m]]]);h.push([f[k],f[n],f[m]]);k=n;for(m=n+1;m<e;k++,m++)f[k]=f[m];e--;r=2*e}}if(d)return h;return g};a.Triangulate.area=b;return a})(THREE.FontUtils);self._typeface_js={faces:THREE.FontUtils.faces,loadFace:THREE.FontUtils.loadFace};
THREE.TorusGeometry=function(a,b,c,d,e){THREE.Geometry.call(this);this.radius=a||100;this.tube=b||40;this.segmentsR=c||8;this.segmentsT=d||6;this.arc=e||Math.PI*2;e=new THREE.Vector3;a=[];b=[];for(c=0;c<=this.segmentsR;c++)for(d=0;d<=this.segmentsT;d++){var g=d/this.segmentsT*this.arc,f=c/this.segmentsR*Math.PI*2;e.x=this.radius*Math.cos(g);e.y=this.radius*Math.sin(g);var h=new THREE.Vector3;h.x=(this.radius+this.tube*Math.cos(f))*Math.cos(g);h.y=(this.radius+this.tube*Math.cos(f))*Math.sin(g);h.z=
this.tube*Math.sin(f);this.vertices.push(new THREE.Vertex(h));a.push(new THREE.UV(d/this.segmentsT,1-c/this.segmentsR));b.push(h.clone().subSelf(e).normalize())}for(c=1;c<=this.segmentsR;c++)for(d=1;d<=this.segmentsT;d++){var e=(this.segmentsT+1)*c+d-1,g=(this.segmentsT+1)*(c-1)+d-1,f=(this.segmentsT+1)*(c-1)+d,h=(this.segmentsT+1)*c+d,k=new THREE.Face4(e,g,f,h,[b[e],b[g],b[f],b[h]]);k.normal.addSelf(b[e]);k.normal.addSelf(b[g]);k.normal.addSelf(b[f]);k.normal.addSelf(b[h]);k.normal.normalize();this.faces.push(k);
this.faceVertexUvs[0].push([a[e].clone(),a[g].clone(),a[f].clone(),a[h].clone()])}this.computeCentroids()};THREE.TorusGeometry.prototype=new THREE.Geometry;THREE.TorusGeometry.prototype.constructor=THREE.TorusGeometry;
THREE.TorusKnotGeometry=function(a,b,c,d,e,g,f){function h(a,c,b,d,g,f){c=b/d*a;b=Math.cos(c);return new THREE.Vector3(g*(2+b)*0.5*Math.cos(a),g*(2+b)*Math.sin(a)*0.5,f*g*Math.sin(c)*0.5)}THREE.Geometry.call(this);this.radius=a||200;this.tube=b||40;this.segmentsR=c||64;this.segmentsT=d||8;this.p=e||2;this.q=g||3;this.heightScale=f||1;this.grid=Array(this.segmentsR);c=new THREE.Vector3;d=new THREE.Vector3;g=new THREE.Vector3;for(a=0;a<this.segmentsR;++a){this.grid[a]=Array(this.segmentsT);for(b=0;b<
this.segmentsT;++b){var k=a/this.segmentsR*2*this.p*Math.PI,f=b/this.segmentsT*2*Math.PI,e=h(k,f,this.q,this.p,this.radius,this.heightScale),k=h(k+0.01,f,this.q,this.p,this.radius,this.heightScale);c.x=k.x-e.x;c.y=k.y-e.y;c.z=k.z-e.z;d.x=k.x+e.x;d.y=k.y+e.y;d.z=k.z+e.z;g.cross(c,d);d.cross(g,c);g.normalize();d.normalize();k=-this.tube*Math.cos(f);f=this.tube*Math.sin(f);e.x+=k*d.x+f*g.x;e.y+=k*d.y+f*g.y;e.z+=k*d.z+f*g.z;this.grid[a][b]=this.vertices.push(new THREE.Vertex(new THREE.Vector3(e.x,e.y,
e.z)))-1}}for(a=0;a<this.segmentsR;++a)for(b=0;b<this.segmentsT;++b){var d=(a+1)%this.segmentsR,g=(b+1)%this.segmentsT,e=this.grid[a][b],c=this.grid[d][b],d=this.grid[d][g],g=this.grid[a][g],f=new THREE.UV(a/this.segmentsR,b/this.segmentsT),k=new THREE.UV((a+1)/this.segmentsR,b/this.segmentsT),n=new THREE.UV((a+1)/this.segmentsR,(b+1)/this.segmentsT),m=new THREE.UV(a/this.segmentsR,(b+1)/this.segmentsT);this.faces.push(new THREE.Face4(e,c,d,g));this.faceVertexUvs[0].push([f,k,n,m])}this.computeCentroids();
this.computeFaceNormals();this.computeVertexNormals()};THREE.TorusKnotGeometry.prototype=new THREE.Geometry;THREE.TorusKnotGeometry.prototype.constructor=THREE.TorusKnotGeometry;THREE.SubdivisionModifier=function(a){this.subdivisions=a===void 0?1:a;this.useOldVertexColors=!1;this.supportUVs=!0};THREE.SubdivisionModifier.prototype.constructor=THREE.SubdivisionModifier;THREE.SubdivisionModifier.prototype.modify=function(a){for(var b=this.subdivisions;b-- >0;)this.smooth(a)};
THREE.SubdivisionModifier.prototype.smooth=function(a){function b(a,c,b,d,h,k){var n=new THREE.Face4(a,c,b,d,null,h.color,h.material);if(f.useOldVertexColors){n.vertexColors=[];for(var m,o,p,l=0;l<4;l++){p=k[l];m=new THREE.Color;m.setRGB(0,0,0);for(var r=0;r<p.length;r++)o=h.vertexColors[p[r]-1],m.r+=o.r,m.g+=o.g,m.b+=o.b;m.r/=p.length;m.g/=p.length;m.b/=p.length;n.vertexColors[l]=m}}e.push(n);(!f.supportUVs||q.length!=0)&&g.push([q[a],q[c],q[b],q[d]])}function c(a,c){return Math.min(a,c)+"_"+Math.max(a,
c)}var d=[],e=[],g=[],f=this,h=a.vertices,d=a.faces,k=h.concat(),n=[],m={},r={},q=[],o,t,p,s,v,y=a.faceVertexUvs[0];o=0;for(t=y.length;o<t;o++){p=0;for(s=y[o].length;p<s;p++)v=d[o]["abcd".charAt(p)],q[v]||(q[v]=y[o][p])}var w;o=0;for(t=d.length;o<t;o++)if(v=d[o],n.push(v.centroid),k.push(new THREE.Vertex(v.centroid)),f.supportUVs&&q.length!=0){w=new THREE.UV;if(v instanceof THREE.Face3)w.u=q[v.a].u+q[v.b].u+q[v.c].u,w.v=q[v.a].v+q[v.b].v+q[v.c].v,w.u/=3,w.v/=3;else if(v instanceof THREE.Face4)w.u=
q[v.a].u+q[v.b].u+q[v.c].u+q[v.d].u,w.v=q[v.a].v+q[v.b].v+q[v.c].v+q[v.d].v,w.u/=4,w.v/=4;q.push(w)}t=function(a){function b(a,c,d){a[c]===void 0&&(a[c]=[]);a[c].push(d)}var d,g,f,e,h={};d=0;for(g=a.faces.length;d<g;d++)f=a.faces[d],f instanceof THREE.Face3?(e=c(f.a,f.b),b(h,e,d),e=c(f.b,f.c),b(h,e,d),e=c(f.c,f.a),b(h,e,d)):f instanceof THREE.Face4&&(e=c(f.a,f.b),b(h,e,d),e=c(f.b,f.c),b(h,e,d),e=c(f.c,f.d),b(h,e,d),e=c(f.d,f.a),b(h,e,d));return h}(a);var D=0,y=h.length,H,C,z={},A={},x=function(a,
c){z[a]===void 0&&(z[a]=[]);z[a].push(c)},M=function(a,c){A[a]===void 0&&(A[a]={});A[a][c]=null};for(o in t){w=t[o];H=o.split("_");C=H[0];H=H[1];x(C,[C,H]);x(H,[C,H]);p=0;for(s=w.length;p<s;p++)v=w[p],M(C,v,o),M(H,v,o);w.length<2&&(r[o]=!0)}for(o in t)if(w=t[o],v=w[0],w=w[1],H=o.split("_"),C=H[0],H=H[1],s=new THREE.Vector3,r[o]?(s.addSelf(h[C].position),s.addSelf(h[H].position),s.multiplyScalar(0.5)):(s.addSelf(n[v]),s.addSelf(n[w]),s.addSelf(h[C].position),s.addSelf(h[H].position),s.multiplyScalar(0.25)),
m[o]=y+d.length+D,k.push(new THREE.Vertex(s)),D++,f.supportUVs&&q.length!=0)w=new THREE.UV,w.u=q[C].u+q[H].u,w.v=q[C].v+q[H].v,w.u/=2,w.v/=2,q.push(w);var u,G;H=["123","12","2","23"];s=["123","23","3","31"];var x=["123","31","1","12"],M=["1234","12","2","23"],T=["1234","23","3","34"],W=["1234","34","4","41"],N=["1234","41","1","12"];o=0;for(t=n.length;o<t;o++)v=d[o],w=y+o,v instanceof THREE.Face3?(D=c(v.a,v.b),C=c(v.b,v.c),u=c(v.c,v.a),b(w,m[D],v.b,m[C],v,H),b(w,m[C],v.c,m[u],v,s),b(w,m[u],v.a,m[D],
v,x)):v instanceof THREE.Face4?(D=c(v.a,v.b),C=c(v.b,v.c),u=c(v.c,v.d),G=c(v.d,v.a),b(w,m[D],v.b,m[C],v,M),b(w,m[C],v.c,m[u],v,T),b(w,m[u],v.d,m[G],v,W),b(w,m[G],v.a,m[D],v,N)):console.log("face should be a face!",v);d=k;k=new THREE.Vector3;m=new THREE.Vector3;o=0;for(t=h.length;o<t;o++)if(z[o]!==void 0){k.set(0,0,0);m.set(0,0,0);v=new THREE.Vector3(0,0,0);w=0;for(p in A[o])k.addSelf(n[p]),w++;D=0;y=z[o].length;for(p=0;p<y;p++)r[c(z[o][p][0],z[o][p][1])]&&D++;if(D!=2){k.divideScalar(w);for(p=0;p<
y;p++)w=z[o][p],w=h[w[0]].position.clone().addSelf(h[w[1]].position).divideScalar(2),m.addSelf(w);m.divideScalar(y);v.addSelf(h[o].position);v.multiplyScalar(y-3);v.addSelf(k);v.addSelf(m.multiplyScalar(2));v.divideScalar(y);d[o].position=v}}a.vertices=d;a.faces=e;a.faceVertexUvs[0]=g;delete a.__tmpVertices;a.computeCentroids();a.computeFaceNormals();a.computeVertexNormals()};
THREE.Loader=function(a){this.statusDomElement=(this.showStatus=a)?THREE.Loader.prototype.addStatusElement():null;this.onLoadStart=function(){};this.onLoadProgress=function(){};this.onLoadComplete=function(){}};
THREE.Loader.prototype={constructor:THREE.Loader,addStatusElement:function(){var a=document.createElement("div");a.style.position="absolute";a.style.right="0px";a.style.top="0px";a.style.fontSize="0.8em";a.style.textAlign="left";a.style.background="rgba(0,0,0,0.25)";a.style.color="#fff";a.style.width="120px";a.style.padding="0.5em 0.5em 0.5em 0.5em";a.style.zIndex=1E3;a.innerHTML="Loading ...";return a},updateProgress:function(a){var b="Loaded ";b+=a.total?(100*a.loaded/a.total).toFixed(0)+"%":(a.loaded/
1E3).toFixed(2)+" KB";this.statusDomElement.innerHTML=b},extractUrlbase:function(a){a=a.split("/");a.pop();return a.length<1?"":a.join("/")+"/"},initMaterials:function(a,b,c){a.materials=[];for(var d=0;d<b.length;++d)a.materials[d]=THREE.Loader.prototype.createMaterial(b[d],c)},hasNormals:function(a){var b,c,d=a.materials.length;for(c=0;c<d;c++)if(b=a.materials[c],b instanceof THREE.ShaderMaterial)return!0;return!1},createMaterial:function(a,b){function c(a){a=Math.log(a)/Math.LN2;return Math.floor(a)==
a}function d(a,b){var d=new Image;d.onload=function(){if(!c(this.width)||!c(this.height)){var b=Math.pow(2,Math.round(Math.log(this.width)/Math.LN2)),d=Math.pow(2,Math.round(Math.log(this.height)/Math.LN2));a.image.width=b;a.image.height=d;a.image.getContext("2d").drawImage(this,0,0,b,d)}else a.image=this;a.needsUpdate=!0};d.src=b}function e(a,c,f,g,e,h){var k=document.createElement("canvas");a[c]=new THREE.Texture(k);a[c].sourceFile=f;if(g){a[c].repeat.set(g[0],g[1]);if(g[0]!=1)a[c].wrapS=THREE.RepeatWrapping;
if(g[1]!=1)a[c].wrapT=THREE.RepeatWrapping}e&&a[c].offset.set(e[0],e[1]);if(h){g={repeat:THREE.RepeatWrapping,mirror:THREE.MirroredRepeatWrapping};if(g[h[0]]!==void 0)a[c].wrapS=g[h[0]];if(g[h[1]]!==void 0)a[c].wrapT=g[h[1]]}d(a[c],b+"/"+f)}function g(a){return(a[0]*255<<16)+(a[1]*255<<8)+a[2]*255}var f,h,k;h="MeshLambertMaterial";f={color:15658734,opacity:1,map:null,lightMap:null,normalMap:null,wireframe:a.wireframe};a.shading&&(a.shading=="Phong"?h="MeshPhongMaterial":a.shading=="Basic"&&(h="MeshBasicMaterial"));
if(a.blending)if(a.blending=="Additive")f.blending=THREE.AdditiveBlending;else if(a.blending=="Subtractive")f.blending=THREE.SubtractiveBlending;else if(a.blending=="Multiply")f.blending=THREE.MultiplyBlending;if(a.transparent!==void 0||a.opacity<1)f.transparent=a.transparent;if(a.depthTest!==void 0)f.depthTest=a.depthTest;if(a.vertexColors!==void 0)if(a.vertexColors=="face")f.vertexColors=THREE.FaceColors;else if(a.vertexColors)f.vertexColors=THREE.VertexColors;if(a.colorDiffuse)f.color=g(a.colorDiffuse);
else if(a.DbgColor)f.color=a.DbgColor;if(a.colorSpecular)f.specular=g(a.colorSpecular);if(a.colorAmbient)f.ambient=g(a.colorAmbient);if(a.transparency)f.opacity=a.transparency;if(a.specularCoef)f.shininess=a.specularCoef;a.mapDiffuse&&b&&e(f,"map",a.mapDiffuse,a.mapDiffuseRepeat,a.mapDiffuseOffset,a.mapDiffuseWrap);a.mapLight&&b&&e(f,"lightMap",a.mapLight,a.mapLightRepeat,a.mapLightOffset,a.mapLightWrap);a.mapNormal&&b&&e(f,"normalMap",a.mapNormal,a.mapNormalRepeat,a.mapNormalOffset,a.mapNormalWrap);
a.mapSpecular&&b&&e(f,"specularMap",a.mapSpecular,a.mapSpecularRepeat,a.mapSpecularOffset,a.mapSpecularWrap);if(a.mapNormal){var n=THREE.ShaderUtils.lib.normal,m=THREE.UniformsUtils.clone(n.uniforms),r=f.color;h=f.specular;k=f.ambient;var q=f.shininess;m.tNormal.texture=f.normalMap;if(a.mapNormalFactor)m.uNormalScale.value=a.mapNormalFactor;if(f.map)m.tDiffuse.texture=f.map,m.enableDiffuse.value=!0;if(f.specularMap)m.tSpecular.texture=f.specularMap,m.enableSpecular.value=!0;if(f.lightMap)m.tAO.texture=
f.lightMap,m.enableAO.value=!0;m.uDiffuseColor.value.setHex(r);m.uSpecularColor.value.setHex(h);m.uAmbientColor.value.setHex(k);m.uShininess.value=q;if(f.opacity)m.uOpacity.value=f.opacity;f=new THREE.ShaderMaterial({fragmentShader:n.fragmentShader,vertexShader:n.vertexShader,uniforms:m,lights:!0,fog:!0})}else f=new THREE[h](f);return f}};THREE.BinaryLoader=function(a){THREE.Loader.call(this,a)};THREE.BinaryLoader.prototype=new THREE.Loader;THREE.BinaryLoader.prototype.constructor=THREE.BinaryLoader;
THREE.BinaryLoader.prototype.supr=THREE.Loader.prototype;THREE.BinaryLoader.prototype.load=function(a,b,c,d){if(a instanceof Object)console.warn("DEPRECATED: BinaryLoader( parameters ) is now BinaryLoader( url, callback, texturePath, binaryPath )."),d=a,a=d.model,b=d.callback,c=d.texture_path,d=d.bin_path;var c=c?c:this.extractUrlbase(a),d=d?d:this.extractUrlbase(a),e=this.showProgress?THREE.Loader.prototype.updateProgress:null;this.onLoadStart();this.loadAjaxJSON(this,a,b,c,d,e)};
THREE.BinaryLoader.prototype.loadAjaxJSON=function(a,b,c,d,e,g){var f=new XMLHttpRequest;f.onreadystatechange=function(){if(f.readyState==4)if(f.status==200||f.status==0)try{var h=JSON.parse(f.responseText);h.metadata===void 0||h.metadata.formatVersion===void 0||h.metadata.formatVersion!==3?console.error("Deprecated file format."):a.loadAjaxBuffers(h,c,e,d,g)}catch(k){console.error(k),console.warn("DEPRECATED: ["+b+"] seems to be using old model format")}else console.error("Couldn't load ["+b+"] ["+
f.status+"]")};f.open("GET",b,!0);f.overrideMimeType("text/plain; charset=x-user-defined");f.setRequestHeader("Content-Type","text/plain");f.send(null)};
THREE.BinaryLoader.prototype.loadAjaxBuffers=function(a,b,c,d,e){var g=new XMLHttpRequest,f=c+"/"+a.buffers,h=0;g.onreadystatechange=function(){g.readyState==4?g.status==200||g.status==0?THREE.BinaryLoader.prototype.createBinModel(g.response,b,d,a.materials):console.error("Couldn't load ["+f+"] ["+g.status+"]"):g.readyState==3?e&&(h==0&&(h=g.getResponseHeader("Content-Length")),e({total:h,loaded:g.responseText.length})):g.readyState==2&&(h=g.getResponseHeader("Content-Length"))};g.open("GET",f,!0);
g.responseType="arraybuffer";g.send(null)};
THREE.BinaryLoader.prototype.createBinModel=function(a,b,c,d){var e=function(c){function b(a){return a%4?4-a%4:0}function e(a,c){return(new Uint8Array(a,c,1))[0]}function k(a,c){return(new Uint32Array(a,c,1))[0]}function n(c,b){var d,e,g,f,h,k,n,m,o=new Uint32Array(a,b,3*c);for(d=0;d<c;d++){e=o[d*3];g=o[d*3+1];f=o[d*3+2];h=w[e*2];e=w[e*2+1];k=w[g*2];n=w[g*2+1];g=w[f*2];m=w[f*2+1];f=p.faceVertexUvs[0];var q=[];q.push(new THREE.UV(h,e));q.push(new THREE.UV(k,n));q.push(new THREE.UV(g,m));f.push(q)}}
function m(c,b){var d,e,g,f,h,k,n,m,o,q,r=new Uint32Array(a,b,4*c);for(d=0;d<c;d++){e=r[d*4];g=r[d*4+1];f=r[d*4+2];h=r[d*4+3];k=w[e*2];e=w[e*2+1];n=w[g*2];o=w[g*2+1];m=w[f*2];q=w[f*2+1];f=w[h*2];g=w[h*2+1];h=p.faceVertexUvs[0];var s=[];s.push(new THREE.UV(k,e));s.push(new THREE.UV(n,o));s.push(new THREE.UV(m,q));s.push(new THREE.UV(f,g));h.push(s)}}function r(c,b,d){for(var e,g,f,h,b=new Uint32Array(a,b,3*c),k=new Uint16Array(a,d,c),d=0;d<c;d++)e=b[d*3],g=b[d*3+1],f=b[d*3+2],h=k[d],p.faces.push(new THREE.Face3(e,
g,f,null,null,h))}function q(c,b,d){for(var e,g,f,h,k,b=new Uint32Array(a,b,4*c),n=new Uint16Array(a,d,c),d=0;d<c;d++)e=b[d*4],g=b[d*4+1],f=b[d*4+2],h=b[d*4+3],k=n[d],p.faces.push(new THREE.Face4(e,g,f,h,null,null,k))}function o(c,b,d,e){for(var g,f,h,k,n,m,o,b=new Uint32Array(a,b,3*c),d=new Uint32Array(a,d,3*c),q=new Uint16Array(a,e,c),e=0;e<c;e++){g=b[e*3];f=b[e*3+1];h=b[e*3+2];n=d[e*3];m=d[e*3+1];o=d[e*3+2];k=q[e];var r=y[m*3],s=y[m*3+1];m=y[m*3+2];var t=y[o*3],v=y[o*3+1];o=y[o*3+2];p.faces.push(new THREE.Face3(g,
f,h,[new THREE.Vector3(y[n*3],y[n*3+1],y[n*3+2]),new THREE.Vector3(r,s,m),new THREE.Vector3(t,v,o)],null,k))}}function t(c,b,d,e){for(var g,f,h,k,n,m,o,q,r,b=new Uint32Array(a,b,4*c),d=new Uint32Array(a,d,4*c),s=new Uint16Array(a,e,c),e=0;e<c;e++){g=b[e*4];f=b[e*4+1];h=b[e*4+2];k=b[e*4+3];m=d[e*4];o=d[e*4+1];q=d[e*4+2];r=d[e*4+3];n=s[e];var t=y[o*3],v=y[o*3+1];o=y[o*3+2];var l=y[q*3],w=y[q*3+1];q=y[q*3+2];var x=y[r*3],z=y[r*3+1];r=y[r*3+2];p.faces.push(new THREE.Face4(g,f,h,k,[new THREE.Vector3(y[m*
3],y[m*3+1],y[m*3+2]),new THREE.Vector3(t,v,o),new THREE.Vector3(l,w,q),new THREE.Vector3(x,z,r)],null,n))}}var p=this,s=0,v,y=[],w=[],D,H,C,z,A,x;THREE.Geometry.call(this);THREE.Loader.prototype.initMaterials(p,d,c);v={signature:function(a,c,b){for(var a=new Uint8Array(a,c,b),d="",e=0;e<b;e++)d+=String.fromCharCode(a[c+e]);return d}(a,s,12),header_bytes:e(a,s+12),vertex_coordinate_bytes:e(a,s+13),normal_coordinate_bytes:e(a,s+14),uv_coordinate_bytes:e(a,s+15),vertex_index_bytes:e(a,s+16),normal_index_bytes:e(a,
s+17),uv_index_bytes:e(a,s+18),material_index_bytes:e(a,s+19),nvertices:k(a,s+20),nnormals:k(a,s+20+4),nuvs:k(a,s+20+8),ntri_flat:k(a,s+20+12),ntri_smooth:k(a,s+20+16),ntri_flat_uv:k(a,s+20+20),ntri_smooth_uv:k(a,s+20+24),nquad_flat:k(a,s+20+28),nquad_smooth:k(a,s+20+32),nquad_flat_uv:k(a,s+20+36),nquad_smooth_uv:k(a,s+20+40)};v.signature!=="Three.js 003"&&console.warn("DEPRECATED: binary model seems to be using old format");s+=v.header_bytes;c=v.vertex_index_bytes*3+v.material_index_bytes;x=v.vertex_index_bytes*
4+v.material_index_bytes;D=v.ntri_flat*c;H=v.ntri_smooth*(c+v.normal_index_bytes*3);C=v.ntri_flat_uv*(c+v.uv_index_bytes*3);z=v.ntri_smooth_uv*(c+v.normal_index_bytes*3+v.uv_index_bytes*3);A=v.nquad_flat*x;c=v.nquad_smooth*(x+v.normal_index_bytes*4);x=v.nquad_flat_uv*(x+v.uv_index_bytes*4);s+=function(c){var b=v.nvertices,c=new Float32Array(a,c,b*3),d,e,g,f;for(d=0;d<b;d++)e=c[d*3],g=c[d*3+1],f=c[d*3+2],p.vertices.push(new THREE.Vertex(new THREE.Vector3(e,g,f)));return b*3*Float32Array.BYTES_PER_ELEMENT}(s);
s+=function(c){var b=v.nnormals;if(b){var c=new Int8Array(a,c,b*3),d,e,g,f;for(d=0;d<b;d++)e=c[d*3],g=c[d*3+1],f=c[d*3+2],y.push(e/127,g/127,f/127)}return b*3*Int8Array.BYTES_PER_ELEMENT}(s);s+=b(v.nnormals*3);s+=function(c){var b=v.nuvs;if(b){var c=new Float32Array(a,c,b*2),d,e,g;for(d=0;d<b;d++)e=c[d*2],g=c[d*2+1],w.push(e,g)}return b*2*Float32Array.BYTES_PER_ELEMENT}(s);D=s+D+b(v.ntri_flat*2);H=D+H+b(v.ntri_smooth*2);C=H+C+b(v.ntri_flat_uv*2);z=C+z+b(v.ntri_smooth_uv*2);A=z+A+b(v.nquad_flat*2);
c=A+c+b(v.nquad_smooth*2);x=c+x+b(v.nquad_flat_uv*2);(function(a){var c=v.ntri_flat_uv;if(c){var b=a+c*Uint32Array.BYTES_PER_ELEMENT*3;r(c,a,b+c*Uint32Array.BYTES_PER_ELEMENT*3);n(c,b)}})(H);(function(a){var c=v.ntri_smooth_uv;if(c){var b=a+c*Uint32Array.BYTES_PER_ELEMENT*3,d=b+c*Uint32Array.BYTES_PER_ELEMENT*3;o(c,a,b,d+c*Uint32Array.BYTES_PER_ELEMENT*3);n(c,d)}})(C);(function(a){var c=v.nquad_flat_uv;if(c){var b=a+c*Uint32Array.BYTES_PER_ELEMENT*4;q(c,a,b+c*Uint32Array.BYTES_PER_ELEMENT*4);m(c,
b)}})(c);(function(a){var c=v.nquad_smooth_uv;if(c){var b=a+c*Uint32Array.BYTES_PER_ELEMENT*4,d=b+c*Uint32Array.BYTES_PER_ELEMENT*4;t(c,a,b,d+c*Uint32Array.BYTES_PER_ELEMENT*4);m(c,d)}})(x);(function(a){var c=v.ntri_flat;c&&r(c,a,a+c*Uint32Array.BYTES_PER_ELEMENT*3)})(s);(function(a){var c=v.ntri_smooth;if(c){var b=a+c*Uint32Array.BYTES_PER_ELEMENT*3;o(c,a,b,b+c*Uint32Array.BYTES_PER_ELEMENT*3)}})(D);(function(a){var c=v.nquad_flat;c&&q(c,a,a+c*Uint32Array.BYTES_PER_ELEMENT*4)})(z);(function(a){var c=
v.nquad_smooth;if(c){var b=a+c*Uint32Array.BYTES_PER_ELEMENT*4;t(c,a,b,b+c*Uint32Array.BYTES_PER_ELEMENT*4)}})(A);this.computeCentroids();this.computeFaceNormals();THREE.Loader.prototype.hasNormals(this)&&this.computeTangents()};e.prototype=new THREE.Geometry;e.prototype.constructor=e;b(new e(c))};
THREE.ColladaLoader=function(){function a(a,d,e){l=a;d=d||fa;e!==void 0&&(a=e.split("/"),a.pop(),Fa=a.length<1?"":a.join("/")+"/");ba=b("//dae:library_images/dae:image",f,"image");pa=b("//dae:library_materials/dae:material",A,"material");qa=b("//dae:library_effects/dae:effect",T,"effect");sa=b("//dae:library_geometries/dae:geometry",s,"geometry");ta=b("//dae:library_controllers/dae:controller",h,"controller");wa=b("//dae:library_animations/dae:animation",N,"animation");ra=b(".//dae:library_visual_scenes/dae:visual_scene",
m,"visual_scene");Ba=[];Ca=[];(a=l.evaluate(".//dae:scene/dae:instance_visual_scene",l,K,XPathResult.ORDERED_NODE_ITERATOR_TYPE,null).iterateNext())?(a=a.getAttribute("url").replace(/^#/,""),X=ra[a]):X=null;Z=new THREE.Object3D;for(a=0;a<X.nodes.length;a++)Z.add(g(X.nodes[a]));c();for(var k in wa);k={scene:Z,morphs:Ba,skins:Ca,dae:{images:ba,materials:pa,effects:qa,geometries:sa,controllers:ta,animations:wa,visualScenes:ra,scene:X}};d&&d(k);return k}function b(a,c,b){for(var a=l.evaluate(a,l,K,XPathResult.ORDERED_NODE_ITERATOR_TYPE,
null),d={},e=a.iterateNext(),g=0;e;){e=(new c).parse(e);if(e.id.length==0)e.id=b+g++;d[e.id]=e;e=a.iterateNext()}return d}function c(){var a=1E6,c=-a,b=0,d;for(d in wa)for(var e=wa[d],g=0;g<e.sampler.length;g++){var f=e.sampler[g];f.create();a=Math.min(a,f.startTime);c=Math.max(c,f.endTime);b=Math.max(b,f.input.length)}return{start:a,end:c,frames:b}}function d(a,c,b,e){a.world=a.world||new THREE.Matrix4;a.world.copy(a.matrix);if(a.channels&&a.channels.length){var g=a.channels[0].sampler.output[b];
g instanceof THREE.Matrix4&&a.world.copy(g)}e&&a.world.multiply(e,a.world);c.push(a);for(e=0;e<a.nodes.length;e++)d(a.nodes[e],c,b,a.world)}function e(a,b,e){var g=ta[b.url];if(!g||!g.skin)console.log("ColladaLoader: Could not find skin controller.");else if(!b.skeleton||!b.skeleton.length)console.log("ColladaLoader: Could not find the skeleton for the skin. ");else{var f=c(),b=X.getChildById(b.skeleton[0],!0)||X.getChildBySid(b.skeleton[0],!0),h,k,l,n,m=new THREE.Vector3,o;for(h=0;h<a.vertices.length;h++)g.skin.bindShapeMatrix.multiplyVector3(a.vertices[h].position);
for(e=0;e<f.frames;e++){var p=[],q=[];for(h=0;h<a.vertices.length;h++)q.push(new THREE.Vertex(new THREE.Vector3));d(b,p,e);h=p;k=g.skin;for(n=0;n<h.length;n++)if(l=h[n],o=-1,l.type=="JOINT"){for(var r=0;r<k.joints.length;r++)if(l.sid==k.joints[r]){o=r;break}if(o>=0){r=k.invBindMatrices[o];l.invBindMatrix=r;l.skinningMatrix=new THREE.Matrix4;l.skinningMatrix.multiply(l.world,r);l.weights=[];for(r=0;r<k.weights.length;r++)for(var s=0;s<k.weights[r].length;s++){var t=k.weights[r][s];t.joint==o&&l.weights.push(t)}}else throw"ColladaLoader: Could not find joint '"+
l.sid+"'.";}for(h=0;h<p.length;h++)if(p[h].type=="JOINT")for(k=0;k<p[h].weights.length;k++)l=p[h].weights[k],n=l.index,l=l.weight,o=a.vertices[n],n=q[n],m.x=o.position.x,m.y=o.position.y,m.z=o.position.z,p[h].skinningMatrix.multiplyVector3(m),n.position.x+=m.x*l,n.position.y+=m.y*l,n.position.z+=m.z*l;a.morphTargets.push({name:"target_"+e,vertices:q})}}}function g(a){var c=new THREE.Object3D,b,d,f,h;for(f=0;f<a.controllers.length;f++){var k=ta[a.controllers[f].url];switch(k.type){case "skin":if(sa[k.skin.source]){var l=
new p;l.url=k.skin.source;l.instance_material=a.controllers[f].instance_material;a.geometries.push(l);b=a.controllers[f]}else if(ta[k.skin.source]&&(d=k=ta[k.skin.source],k.morph&&sa[k.morph.source]))l=new p,l.url=k.morph.source,l.instance_material=a.controllers[f].instance_material,a.geometries.push(l);break;case "morph":if(sa[k.morph.source])l=new p,l.url=k.morph.source,l.instance_material=a.controllers[f].instance_material,a.geometries.push(l),d=a.controllers[f];console.log("ColladaLoader: Morph-controller partially supported.")}}for(f=
0;f<a.geometries.length;f++){var k=a.geometries[f],l=k.instance_material,k=sa[k.url],n={},m=0,q;if(k&&k.mesh&&k.mesh.primitives){if(c.name.length==0)c.name=k.id;if(l)for(h=0;h<l.length;h++){q=l[h];var r=qa[pa[q.target].instance_effect.url].shader;r.material.opacity=!r.material.opacity?1:r.material.opacity;q=n[q.symbol]=r.material;m++}l=q||new THREE.MeshLambertMaterial({color:14540253,shading:THREE.FlatShading});k=k.mesh.geometry3js;if(m>1){l=new THREE.MeshFaceMaterial;for(h=0;h<k.faces.length;h++)m=
k.faces[h],m.materials=[n[m.daeMaterial]]}if(b!==void 0)e(k,b),l.morphTargets=!0,l=new THREE.SkinnedMesh(k,l),l.skeleton=b.skeleton,l.skinController=ta[b.url],l.skinInstanceController=b,l.name="skin_"+Ca.length,Ca.push(l);else if(d!==void 0){h=k;n=d instanceof o?ta[d.url]:d;if(!n||!n.morph)console.log("could not find morph controller!");else{n=n.morph;for(m=0;m<n.targets.length;m++)if(r=sa[n.targets[m]],r.mesh&&r.mesh.primitives&&r.mesh.primitives.length)r=r.mesh.primitives[0].geometry,r.vertices.length===
h.vertices.length&&h.morphTargets.push({name:"target_1",vertices:r.vertices});h.morphTargets.push({name:"target_Z",vertices:h.vertices})}l.morphTargets=!0;l=new THREE.Mesh(k,l);l.name="morph_"+Ba.length;Ba.push(l)}else l=new THREE.Mesh(k,l);a.geometries.length>1?c.add(l):c=l}}c.name=a.id||"";a.matrix.decompose(c.position,c.rotation,c.scale);for(f=0;f<a.nodes.length;f++)c.add(g(a.nodes[f],a));return c}function f(){this.init_from=this.id=""}function h(){this.type=this.name=this.id="";this.morph=this.skin=
null}function k(){this.weights=this.targets=this.source=this.method=null}function n(){this.source="";this.bindShapeMatrix=null;this.invBindMatrices=[];this.joints=[];this.weights=[]}function m(){this.name=this.id="";this.nodes=[];this.scene=new THREE.Object3D}function r(){this.sid=this.name=this.id="";this.nodes=[];this.controllers=[];this.transforms=[];this.geometries=[];this.channels=[];this.matrix=new THREE.Matrix4}function q(){this.type=this.sid="";this.data=[];this.matrix=new THREE.Matrix4}function o(){this.url=
"";this.skeleton=[];this.instance_material=[]}function t(){this.target=this.symbol=""}function p(){this.url="";this.instance_material=[]}function s(){this.id="";this.mesh=null}function v(a){this.geometry=a.id;this.primitives=[];this.geometry3js=this.vertices=null}function y(){}function w(){this.material="";this.count=0;this.inputs=[];this.vcount=null;this.p=[];this.geometry=new THREE.Geometry}function D(){this.source="";this.stride=this.count=0;this.params=[]}function H(){this.input={}}function C(){this.semantic=
"";this.offset=0;this.source="";this.set=0}function z(a){this.id=a;this.type=null}function A(){this.name=this.id="";this.instance_effect=null}function x(){this.color=new THREE.Color(0);this.color.setRGB(Math.random(),Math.random(),Math.random());this.color.a=1;this.texcoord=this.texture=null}function M(a,c){this.type=a;this.effect=c;this.material=null}function u(a){this.effect=a;this.format=this.init_from=null}function G(a){this.effect=a;this.mipfilter=this.magfilter=this.minfilter=this.wrap_t=this.wrap_s=
this.source=null}function T(){this.name=this.id="";this.sampler=this.surface=this.shader=null}function W(){this.url=""}function N(){this.name=this.id="";this.source={};this.sampler=[];this.channel=[]}function R(a){this.animation=a;this.target=this.source="";this.member=this.arrIndices=this.arrSyntax=this.dotSyntax=this.sid=null}function Q(a){this.id="";this.animation=a;this.inputs=[];this.endTime=this.startTime=this.interpolation=this.output=this.input=null;this.duration=0}function ca(a){var c=a.getAttribute("id");
if(ia[c]!=void 0)return ia[c];ia[c]=(new z(c)).parse(a);return ia[c]}function K(a){if(a=="dae")return"http://www.collada.org/2005/11/COLLADASchema";return null}function J(a){for(var a=O(a),c=[],b=0;b<a.length;b++)c.push(parseFloat(a[b]));return c}function L(a){for(var a=O(a),c=[],b=0;b<a.length;b++)c.push(parseInt(a[b],10));return c}function O(a){return a.replace(/^\s+/,"").replace(/\s+$/,"").split(/\s+/)}function U(a,c,b){return a.hasAttribute(c)?parseInt(a.getAttribute(c),10):b}function da(a,c){if(a===
void 0){for(var b="0.";b.length<c+2;)b+="0";return b}c=c||2;b=a.toString().split(".");for(b[1]=b.length>1?b[1].substr(0,c):"0";b[1].length<c;)b[1]+="0";return b.join(".")}function Y(a,c){var b="";b+=da(a.x,c)+",";b+=da(a.y,c)+",";b+=da(a.z,c);return b}var l=null,Z=null,X,fa=null,ia={},ba={},wa={},ta={},sa={},pa={},qa={},ra,Fa,Ba,Ca,Da=THREE.SmoothShading;f.prototype.parse=function(a){this.id=a.getAttribute("id");for(var c=0;c<a.childNodes.length;c++){var b=a.childNodes[c];if(b.nodeName=="init_from")this.init_from=
b.textContent}return this};h.prototype.parse=function(a){this.id=a.getAttribute("id");this.name=a.getAttribute("name");this.type="none";for(var c=0;c<a.childNodes.length;c++){var b=a.childNodes[c];switch(b.nodeName){case "skin":this.skin=(new n).parse(b);this.type=b.nodeName;break;case "morph":this.morph=(new k).parse(b),this.type=b.nodeName}}return this};k.prototype.parse=function(a){var c={},b=[],d;this.method=a.getAttribute("method");this.source=a.getAttribute("source").replace(/^#/,"");for(d=
0;d<a.childNodes.length;d++){var e=a.childNodes[d];if(e.nodeType==1)switch(e.nodeName){case "source":e=(new z).parse(e);c[e.id]=e;break;case "targets":b=this.parseInputs(e);break;default:console.log(e.nodeName)}}for(d=0;d<b.length;d++)switch(a=b[d],e=c[a.source],a.semantic){case "MORPH_TARGET":this.targets=e.read();break;case "MORPH_WEIGHT":this.weights=e.read()}return this};k.prototype.parseInputs=function(a){for(var c=[],b=0;b<a.childNodes.length;b++){var d=a.childNodes[b];if(d.nodeType==1)switch(d.nodeName){case "input":c.push((new C).parse(d))}}return c};
n.prototype.parse=function(a){var c={},b,d;this.source=a.getAttribute("source").replace(/^#/,"");this.invBindMatrices=[];this.joints=[];this.weights=[];for(var e=0;e<a.childNodes.length;e++){var f=a.childNodes[e];if(f.nodeType==1)switch(f.nodeName){case "bind_shape_matrix":f=J(f.textContent);this.bindShapeMatrix=new THREE.Matrix4;this.bindShapeMatrix.set(f[0],f[1],f[2],f[3],f[4],f[5],f[6],f[7],f[8],f[9],f[10],f[11],f[12],f[13],f[14],f[15]);break;case "source":f=(new z).parse(f);c[f.id]=f;break;case "joints":b=
f;break;case "vertex_weights":d=f;break;default:console.log(f.nodeName)}}this.parseJoints(b,c);this.parseWeights(d,c);return this};n.prototype.parseJoints=function(a,c){for(var b=0;b<a.childNodes.length;b++){var d=a.childNodes[b];if(d.nodeType==1)switch(d.nodeName){case "input":var d=(new C).parse(d),e=c[d.source];if(d.semantic=="JOINT")this.joints=e.read();else if(d.semantic=="INV_BIND_MATRIX")this.invBindMatrices=e.read()}}};n.prototype.parseWeights=function(a,c){for(var b,d,e=[],f=0;f<a.childNodes.length;f++){var g=
a.childNodes[f];if(g.nodeType==1)switch(g.nodeName){case "input":e.push((new C).parse(g));break;case "v":b=L(g.textContent);break;case "vcount":d=L(g.textContent)}}for(f=g=0;f<d.length;f++){for(var h=d[f],k=[],l=0;l<h;l++){for(var n={},m=0;m<e.length;m++){var o=e[m],p=b[g+o.offset];switch(o.semantic){case "JOINT":n.joint=p;break;case "WEIGHT":n.weight=c[o.source].data[p]}}k.push(n);g+=e.length}for(l=0;l<k.length;l++)k[l].index=f;this.weights.push(k)}};m.prototype.getChildById=function(a,c){for(var b=
0;b<this.nodes.length;b++){var d=this.nodes[b].getChildById(a,c);if(d)return d}return null};m.prototype.getChildBySid=function(a,c){for(var b=0;b<this.nodes.length;b++){var d=this.nodes[b].getChildBySid(a,c);if(d)return d}return null};m.prototype.parse=function(a){this.id=a.getAttribute("id");this.name=a.getAttribute("name");this.nodes=[];for(var c=0;c<a.childNodes.length;c++){var b=a.childNodes[c];if(b.nodeType==1)switch(b.nodeName){case "node":this.nodes.push((new r).parse(b))}}return this};r.prototype.getChannelForTransform=
function(a){for(var c=0;c<this.channels.length;c++){var b=this.channels[c],d=b.target.split("/");d.shift();var e=d.shift(),f=e.indexOf(".")>=0,g=e.indexOf("(")>=0,h;if(f)d=e.split("."),e=d.shift(),d.shift();else if(g){h=e.split("(");e=h.shift();for(d=0;d<h.length;d++)h[d]=parseInt(h[d].replace(/\)/,""))}if(e==a)return b.info={sid:e,dotSyntax:f,arrSyntax:g,arrIndices:h},b}return null};r.prototype.getChildById=function(a,c){if(this.id==a)return this;if(c)for(var b=0;b<this.nodes.length;b++){var d=this.nodes[b].getChildById(a,
c);if(d)return d}return null};r.prototype.getChildBySid=function(a,c){if(this.sid==a)return this;if(c)for(var b=0;b<this.nodes.length;b++){var d=this.nodes[b].getChildBySid(a,c);if(d)return d}return null};r.prototype.getTransformBySid=function(a){for(var c=0;c<this.transforms.length;c++)if(this.transforms[c].sid==a)return this.transforms[c];return null};r.prototype.parse=function(a){var c;this.id=a.getAttribute("id");this.sid=a.getAttribute("sid");this.name=a.getAttribute("name");this.type=a.getAttribute("type");
this.type=this.type=="JOINT"?this.type:"NODE";this.nodes=[];this.transforms=[];this.geometries=[];this.controllers=[];this.matrix=new THREE.Matrix4;for(var b=0;b<a.childNodes.length;b++)if(c=a.childNodes[b],c.nodeType==1)switch(c.nodeName){case "node":this.nodes.push((new r).parse(c));break;case "instance_camera":break;case "instance_controller":this.controllers.push((new o).parse(c));break;case "instance_geometry":this.geometries.push((new p).parse(c));break;case "instance_light":break;case "instance_node":c=
c.getAttribute("url").replace(/^#/,"");(c=l.evaluate(".//dae:library_nodes//dae:node[@id='"+c+"']",l,K,XPathResult.ORDERED_NODE_ITERATOR_TYPE,null).iterateNext())&&this.nodes.push((new r).parse(c));break;case "rotate":case "translate":case "scale":case "matrix":case "lookat":case "skew":this.transforms.push((new q).parse(c));break;case "extra":break;default:console.log(c.nodeName)}a=[];b=1E6;c=-1E6;for(var d in wa)for(var e=wa[d],f=0;f<e.channel.length;f++){var g=e.channel[f],h=e.sampler[f];d=g.target.split("/")[0];
if(d==this.id)h.create(),g.sampler=h,b=Math.min(b,h.startTime),c=Math.max(c,h.endTime),a.push(g)}if(a.length)this.startTime=b,this.endTime=c;if((this.channels=a)&&this.channels.length){d=1E7;for(a=0;a<this.channels.length;a++){b=this.channels[a].sampler;for(c=0;c<b.input.length-1;c++)d=Math.min(d,b.input[c+1]-b.input[c])}b=[];for(a=this.startTime;a<this.endTime;a+=d){c=a;for(var e={},k=f=void 0,f=0;f<this.channels.length;f++)k=this.channels[f],e[k.sid]=k;g=new THREE.Matrix4;for(f=0;f<this.transforms.length;f++)if(h=
this.transforms[f],k=e[h.sid],k!==void 0){for(var n=k.sampler,m,k=0;k<n.input.length-1;k++)if(n.input[k+1]>c){m=n.output[k];break}g=m!==void 0?m instanceof THREE.Matrix4?g.multiply(g,m):g.multiply(g,h.matrix):g.multiply(g,h.matrix)}else g=g.multiply(g,h.matrix);c=g;b.push({time:a,pos:[c.n14,c.n24,c.n34],rotq:[0,0,0,1],scl:[1,1,1]})}this.keys=b}this.updateMatrix();return this};r.prototype.updateMatrix=function(){this.matrix.identity();for(var a=0;a<this.transforms.length;a++)this.matrix.multiply(this.matrix,
this.transforms[a].matrix)};q.prototype.parse=function(a){this.sid=a.getAttribute("sid");this.type=a.nodeName;this.data=J(a.textContent);this.updateMatrix();return this};q.prototype.updateMatrix=function(){var a=0;this.matrix.identity();switch(this.type){case "matrix":this.matrix.set(this.data[0],this.data[1],this.data[2],this.data[3],this.data[4],this.data[5],this.data[6],this.data[7],this.data[8],this.data[9],this.data[10],this.data[11],this.data[12],this.data[13],this.data[14],this.data[15]);break;
case "translate":this.matrix.setTranslation(this.data[0],this.data[1],this.data[2]);break;case "rotate":a=this.data[3]*(Math.PI/180);this.matrix.setRotationAxis(new THREE.Vector3(this.data[0],this.data[1],this.data[2]),a);break;case "scale":this.matrix.setScale(this.data[0],this.data[1],this.data[2])}return this.matrix};o.prototype.parse=function(a){this.url=a.getAttribute("url").replace(/^#/,"");this.skeleton=[];this.instance_material=[];for(var c=0;c<a.childNodes.length;c++){var b=a.childNodes[c];
if(b.nodeType==1)switch(b.nodeName){case "skeleton":this.skeleton.push(b.textContent.replace(/^#/,""));break;case "bind_material":if(b=l.evaluate(".//dae:instance_material",b,K,XPathResult.ORDERED_NODE_ITERATOR_TYPE,null))for(var d=b.iterateNext();d;)this.instance_material.push((new t).parse(d)),d=b.iterateNext()}}return this};t.prototype.parse=function(a){this.symbol=a.getAttribute("symbol");this.target=a.getAttribute("target").replace(/^#/,"");return this};p.prototype.parse=function(a){this.url=
a.getAttribute("url").replace(/^#/,"");this.instance_material=[];for(var c=0;c<a.childNodes.length;c++){var b=a.childNodes[c];if(b.nodeType==1&&b.nodeName=="bind_material"){if(a=l.evaluate(".//dae:instance_material",b,K,XPathResult.ORDERED_NODE_ITERATOR_TYPE,null))for(c=a.iterateNext();c;)this.instance_material.push((new t).parse(c)),c=a.iterateNext();break}}return this};s.prototype.parse=function(a){this.id=a.getAttribute("id");for(var c=0;c<a.childNodes.length;c++){var b=a.childNodes[c];switch(b.nodeName){case "mesh":this.mesh=
(new v(this)).parse(b)}}return this};v.prototype.parse=function(a){function c(a,b){var d=Y(a.position);e[d]===void 0&&(e[d]={v:a,index:b});return e[d]}this.primitives=[];var b;for(b=0;b<a.childNodes.length;b++){var d=a.childNodes[b];switch(d.nodeName){case "source":ca(d);break;case "vertices":this.vertices=(new H).parse(d);break;case "triangles":this.primitives.push((new w).parse(d));break;case "polygons":console.warn("polygon holes not yet supported!");case "polylist":this.primitives.push((new y).parse(d))}}var e=
{};this.geometry3js=new THREE.Geometry;d=ia[this.vertices.input.POSITION.source].data;for(a=b=0;b<d.length;b+=3,a++){var f=new THREE.Vertex(new THREE.Vector3(d[b],d[b+1],d[b+2]));c(f,a);this.geometry3js.vertices.push(f)}for(b=0;b<this.primitives.length;b++)a=this.primitives[b],a.setVertices(this.vertices),this.handlePrimitive(a,this.geometry3js,e);this.geometry3js.computeCentroids();this.geometry3js.computeFaceNormals();this.geometry3js.computeVertexNormals();this.geometry3js.computeBoundingBox();
return this};v.prototype.handlePrimitive=function(a,c,b){var d=0,e,f,g=a.p,h=a.inputs,k,l,n,m,o=0,p=3,q=[];for(e=0;e<h.length;e++)switch(k=h[e],k.semantic){case "TEXCOORD":q.push(k.set)}for(;d<g.length;){var r=[],s=[],t={},v=[];a.vcount&&(p=a.vcount[o++]);for(e=0;e<p;e++)for(f=0;f<h.length;f++)switch(k=h[f],m=ia[k.source],l=g[d+e*h.length+k.offset],n=m.accessor.params.length,n*=l,k.semantic){case "VERTEX":k=Y(c.vertices[l].position);r.push(b[k].index);break;case "NORMAL":s.push(new THREE.Vector3(m.data[n],
m.data[n+1],m.data[n+2]));break;case "TEXCOORD":t[k.set]===void 0&&(t[k.set]=[]);t[k.set].push(new THREE.UV(m.data[n],m.data[n+1]));break;case "COLOR":v.push((new THREE.Color).setRGB(m.data[n],m.data[n+1],m.data[n+2]))}var u;p==3?u=new THREE.Face3(r[0],r[1],r[2],[s[0],s[1],s[2]],v.length?v:new THREE.Color):p==4&&(u=new THREE.Face4(r[0],r[1],r[2],r[3],[s[0],s[1],s[2],s[3]],v.length?v:new THREE.Color));u.daeMaterial=a.material;c.faces.push(u);for(f=0;f<q.length;f++)e=t[q[f]],c.faceVertexUvs[f].push([e[0],
e[1],e[2]]);d+=h.length*p}};y.prototype=new w;y.prototype.constructor=y;w.prototype.setVertices=function(a){for(var c=0;c<this.inputs.length;c++)if(this.inputs[c].source==a.id)this.inputs[c].source=a.input.POSITION.source};w.prototype.parse=function(a){this.inputs=[];this.material=a.getAttribute("material");this.count=U(a,"count",0);for(var c=0;c<a.childNodes.length;c++){var b=a.childNodes[c];switch(b.nodeName){case "input":this.inputs.push((new C).parse(a.childNodes[c]));break;case "vcount":this.vcount=
L(b.textContent);break;case "p":this.p=L(b.textContent)}}return this};D.prototype.parse=function(a){this.params=[];this.source=a.getAttribute("source");this.count=U(a,"count",0);this.stride=U(a,"stride",0);for(var c=0;c<a.childNodes.length;c++){var b=a.childNodes[c];if(b.nodeName=="param"){var d={};d.name=b.getAttribute("name");d.type=b.getAttribute("type");this.params.push(d)}}return this};H.prototype.parse=function(a){this.id=a.getAttribute("id");for(var c=0;c<a.childNodes.length;c++)if(a.childNodes[c].nodeName==
"input"){var b=(new C).parse(a.childNodes[c]);this.input[b.semantic]=b}return this};C.prototype.parse=function(a){this.semantic=a.getAttribute("semantic");this.source=a.getAttribute("source").replace(/^#/,"");this.set=U(a,"set",-1);this.offset=U(a,"offset",0);if(this.semantic=="TEXCOORD"&&this.set<0)this.set=0;return this};z.prototype.parse=function(a){this.id=a.getAttribute("id");for(var c=0;c<a.childNodes.length;c++){var b=a.childNodes[c];switch(b.nodeName){case "bool_array":for(var d=O(b.textContent),
e=[],f=0;f<d.length;f++)e.push(d[f]=="true"||d[f]=="1"?!0:!1);this.data=e;this.type=b.nodeName;break;case "float_array":this.data=J(b.textContent);this.type=b.nodeName;break;case "int_array":this.data=L(b.textContent);this.type=b.nodeName;break;case "IDREF_array":case "Name_array":this.data=O(b.textContent);this.type=b.nodeName;break;case "technique_common":for(d=0;d<b.childNodes.length;d++)if(b.childNodes[d].nodeName=="accessor"){this.accessor=(new D).parse(b.childNodes[d]);break}}}return this};
z.prototype.read=function(){var a=[],c=this.accessor.params[0];switch(c.type){case "IDREF":case "Name":case "name":case "float":return this.data;case "float4x4":for(c=0;c<this.data.length;c+=16){var b=this.data.slice(c,c+16),d=new THREE.Matrix4;d.set(b[0],b[1],b[2],b[3],b[4],b[5],b[6],b[7],b[8],b[9],b[10],b[11],b[12],b[13],b[14],b[15]);a.push(d)}break;default:console.log("ColladaLoader: Source: Read dont know how to read "+c.type+".")}return a};A.prototype.parse=function(a){this.id=a.getAttribute("id");
this.name=a.getAttribute("name");for(var c=0;c<a.childNodes.length;c++)if(a.childNodes[c].nodeName=="instance_effect"){this.instance_effect=(new W).parse(a.childNodes[c]);break}return this};x.prototype.isColor=function(){return this.texture==null};x.prototype.isTexture=function(){return this.texture!=null};x.prototype.parse=function(a){for(var c=0;c<a.childNodes.length;c++){var b=a.childNodes[c];if(b.nodeType==1)switch(b.nodeName){case "color":b=J(b.textContent);this.color=new THREE.Color(0);this.color.setRGB(b[0],
b[1],b[2]);this.color.a=b[3];break;case "texture":this.texture=b.getAttribute("texture"),this.texcoord=b.getAttribute("texcoord")}}return this};M.prototype.parse=function(a){for(var c=0;c<a.childNodes.length;c++){var b=a.childNodes[c];if(b.nodeType==1)switch(b.nodeName){case "ambient":case "emission":case "diffuse":case "specular":case "transparent":this[b.nodeName]=(new x).parse(b);break;case "shininess":case "reflectivity":case "transparency":var d;d=l.evaluate(".//dae:float",b,K,XPathResult.ORDERED_NODE_ITERATOR_TYPE,
null);for(var e=d.iterateNext(),f=[];e;)f.push(e),e=d.iterateNext();d=f;d.length>0&&(this[b.nodeName]=parseFloat(d[0].textContent))}}this.create();return this};M.prototype.create=function(){var a={},c=this.transparency!==void 0&&this.transparency<1,b;for(b in this)switch(b){case "ambient":case "emission":case "diffuse":case "specular":var d=this[b];if(d instanceof x)if(d.isTexture()){if(this.effect.sampler&&this.effect.surface&&this.effect.sampler.source==this.effect.surface.sid&&(d=ba[this.effect.surface.init_from]))a.map=
THREE.ImageUtils.loadTexture(Fa+d.init_from),a.map.wrapS=THREE.RepeatWrapping,a.map.wrapT=THREE.RepeatWrapping,a.map.repeat.x=1,a.map.repeat.y=-1}else b=="diffuse"?a.color=d.color.getHex():c||(a[b]=d.color.getHex());break;case "shininess":case "reflectivity":a[b]=this[b];break;case "transparency":if(c)a.transparent=!0,a.opacity=this[b],c=!0}a.shading=Da;return this.material=new THREE.MeshLambertMaterial(a)};u.prototype.parse=function(a){for(var c=0;c<a.childNodes.length;c++){var b=a.childNodes[c];
if(b.nodeType==1)switch(b.nodeName){case "init_from":this.init_from=b.textContent;break;case "format":this.format=b.textContent;break;default:console.log("unhandled Surface prop: "+b.nodeName)}}return this};G.prototype.parse=function(a){for(var c=0;c<a.childNodes.length;c++){var b=a.childNodes[c];if(b.nodeType==1)switch(b.nodeName){case "source":this.source=b.textContent;break;case "minfilter":this.minfilter=b.textContent;break;case "magfilter":this.magfilter=b.textContent;break;case "mipfilter":this.mipfilter=
b.textContent;break;case "wrap_s":this.wrap_s=b.textContent;break;case "wrap_t":this.wrap_t=b.textContent;break;default:console.log("unhandled Sampler2D prop: "+b.nodeName)}}return this};T.prototype.create=function(){if(this.shader==null)return null};T.prototype.parse=function(a){this.id=a.getAttribute("id");this.name=a.getAttribute("name");this.shader=null;for(var c=0;c<a.childNodes.length;c++){var b=a.childNodes[c];if(b.nodeType==1)switch(b.nodeName){case "profile_COMMON":this.parseTechnique(this.parseProfileCOMMON(b))}}return this};
T.prototype.parseNewparam=function(a){for(var c=a.getAttribute("sid"),b=0;b<a.childNodes.length;b++){var d=a.childNodes[b];if(d.nodeType==1)switch(d.nodeName){case "surface":this.surface=(new u(this)).parse(d);this.surface.sid=c;break;case "sampler2D":this.sampler=(new G(this)).parse(d);this.sampler.sid=c;break;case "extra":break;default:console.log(d.nodeName)}}};T.prototype.parseProfileCOMMON=function(a){for(var c,b=0;b<a.childNodes.length;b++){var d=a.childNodes[b];if(d.nodeType==1)switch(d.nodeName){case "profile_COMMON":this.parseProfileCOMMON(d);
break;case "technique":c=d;break;case "newparam":this.parseNewparam(d);break;case "extra":break;default:console.log(d.nodeName)}}return c};T.prototype.parseTechnique=function(a){for(var c=0;c<a.childNodes.length;c++){var b=a.childNodes[c];if(b.nodeType==1)switch(b.nodeName){case "lambert":case "blinn":case "phong":this.shader=(new M(b.nodeName,this)).parse(b)}}};W.prototype.parse=function(a){this.url=a.getAttribute("url").replace(/^#/,"");return this};N.prototype.parse=function(a){this.id=a.getAttribute("id");
this.name=a.getAttribute("name");this.source={};for(var c=0;c<a.childNodes.length;c++){var b=a.childNodes[c];if(b.nodeType==1)switch(b.nodeName){case "source":b=(new z).parse(b);this.source[b.id]=b;break;case "sampler":this.sampler.push((new Q(this)).parse(b));break;case "channel":this.channel.push((new R(this)).parse(b))}}return this};R.prototype.parse=function(a){this.source=a.getAttribute("source").replace(/^#/,"");this.target=a.getAttribute("target");var c=this.target.split("/");c.shift();var a=
c.shift(),b=a.indexOf(".")>=0,d=a.indexOf("(")>=0,e,f;if(b)c=a.split("."),a=c.shift(),f=c.shift();else if(d){e=a.split("(");a=e.shift();for(c=0;c<e.length;c++)e[c]=parseInt(e[c].replace(/\)/,""))}this.sid=a;this.dotSyntax=b;this.arrSyntax=d;this.arrIndices=e;this.member=f;return this};Q.prototype.parse=function(a){this.id=a.getAttribute("id");this.inputs=[];for(var c=0;c<a.childNodes.length;c++){var b=a.childNodes[c];if(b.nodeType==1)switch(b.nodeName){case "input":this.inputs.push((new C).parse(b))}}return this};
Q.prototype.create=function(){for(var a=0;a<this.inputs.length;a++){var c=this.inputs[a],b=this.animation.source[c.source];switch(c.semantic){case "INPUT":this.input=b.read();break;case "OUTPUT":this.output=b.read();break;case "INTERPOLATION":this.interpolation=b.read();break;case "IN_TANGENT":break;case "OUT_TANGENT":break;default:console.log(c.semantic)}}this.duration=this.endTime=this.startTime=0;if(this.input.length){this.startTime=1E8;this.endTime=-1E8;for(a=0;a<this.input.length;a++)this.startTime=
Math.min(this.startTime,this.input[a]),this.endTime=Math.max(this.endTime,this.input[a]);this.duration=this.endTime-this.startTime}};return{load:function(c,b){if(document.implementation&&document.implementation.createDocument){document.implementation.createDocument("http://www.collada.org/2005/11/COLLADASchema","COLLADA",null);c+="?rnd="+Math.random();var d=new XMLHttpRequest;d.overrideMimeType&&d.overrideMimeType("text/xml");d.onreadystatechange=function(){if(d.readyState==4&&(d.status==0||d.status==
200))fa=b,a(d.responseXML,void 0,c)};d.open("GET",c,!0);d.send(null)}else alert("Don't know how to parse XML!")},parse:a,setPreferredShading:function(a){Da=a},applySkin:e,geometries:sa}};THREE.JSONLoader=function(a){THREE.Loader.call(this,a)};THREE.JSONLoader.prototype=new THREE.Loader;THREE.JSONLoader.prototype.constructor=THREE.JSONLoader;THREE.JSONLoader.prototype.supr=THREE.Loader.prototype;
THREE.JSONLoader.prototype.load=function(a,b,c){if(a instanceof Object)console.warn("DEPRECATED: JSONLoader( parameters ) is now JSONLoader( url, callback, texturePath )."),c=a,a=c.model,b=c.callback,c=c.texture_path;c=c?c:this.extractUrlbase(a);this.onLoadStart();this.loadAjaxJSON(this,a,b,c)};
THREE.JSONLoader.prototype.loadAjaxJSON=function(a,b,c,d,e){var g=new XMLHttpRequest,f=0;g.onreadystatechange=function(){if(g.readyState==4)if(g.status==200||g.status==0)try{var h=JSON.parse(g.responseText);a.createModel(h,c,d);a.onLoadComplete()}catch(k){console.error(k),console.warn("DEPRECATED: ["+b+"] seems to be using old model format")}else console.error("Couldn't load ["+b+"] ["+g.status+"]");else g.readyState==3?e&&(f==0&&(f=g.getResponseHeader("Content-Length")),e({total:f,loaded:g.responseText.length})):
g.readyState==2&&(f=g.getResponseHeader("Content-Length"))};g.open("GET",b,!0);g.overrideMimeType("text/plain; charset=x-user-defined");g.setRequestHeader("Content-Type","text/plain");g.send(null)};
THREE.JSONLoader.prototype.createModel=function(a,b,c){var d=new THREE.Geometry,e=a.scale!==void 0?1/a.scale:1;this.initMaterials(d,a.materials,c);(function(c){if(a.metadata===void 0||a.metadata.formatVersion===void 0||a.metadata.formatVersion!==3)console.error("Deprecated file format.");else{var b,e,k,n,m,r,q,o,t,p,s,v,y,w,D=a.faces;r=a.vertices;var H=a.normals,C=a.colors,z=0;for(b=0;b<a.uvs.length;b++)a.uvs[b].length&&z++;for(b=0;b<z;b++)d.faceUvs[b]=[],d.faceVertexUvs[b]=[];n=0;for(m=r.length;n<
m;)q=new THREE.Vertex,q.position.x=r[n++]*c,q.position.y=r[n++]*c,q.position.z=r[n++]*c,d.vertices.push(q);n=0;for(m=D.length;n<m;){c=D[n++];r=c&1;k=c&2;b=c&4;e=c&8;o=c&16;q=c&32;p=c&64;c&=128;r?(s=new THREE.Face4,s.a=D[n++],s.b=D[n++],s.c=D[n++],s.d=D[n++],r=4):(s=new THREE.Face3,s.a=D[n++],s.b=D[n++],s.c=D[n++],r=3);if(k)k=D[n++],s.materialIndex=k;k=d.faces.length;if(b)for(b=0;b<z;b++)v=a.uvs[b],t=D[n++],w=v[t*2],t=v[t*2+1],d.faceUvs[b][k]=new THREE.UV(w,t);if(e)for(b=0;b<z;b++){v=a.uvs[b];y=[];
for(e=0;e<r;e++)t=D[n++],w=v[t*2],t=v[t*2+1],y[e]=new THREE.UV(w,t);d.faceVertexUvs[b][k]=y}if(o)o=D[n++]*3,e=new THREE.Vector3,e.x=H[o++],e.y=H[o++],e.z=H[o],s.normal=e;if(q)for(b=0;b<r;b++)o=D[n++]*3,e=new THREE.Vector3,e.x=H[o++],e.y=H[o++],e.z=H[o],s.vertexNormals.push(e);if(p)q=D[n++],q=new THREE.Color(C[q]),s.color=q;if(c)for(b=0;b<r;b++)q=D[n++],q=new THREE.Color(C[q]),s.vertexColors.push(q);d.faces.push(s)}}})(e);(function(){var c,b,e,k;if(a.skinWeights){c=0;for(b=a.skinWeights.length;c<b;c+=
2)e=a.skinWeights[c],k=a.skinWeights[c+1],d.skinWeights.push(new THREE.Vector4(e,k,0,0))}if(a.skinIndices){c=0;for(b=a.skinIndices.length;c<b;c+=2)e=a.skinIndices[c],k=a.skinIndices[c+1],d.skinIndices.push(new THREE.Vector4(e,k,0,0))}d.bones=a.bones;d.animation=a.animation})();(function(c){if(a.morphTargets!==void 0){var b,e,k,n,m,r,q,o,t;b=0;for(e=a.morphTargets.length;b<e;b++){d.morphTargets[b]={};d.morphTargets[b].name=a.morphTargets[b].name;d.morphTargets[b].vertices=[];o=d.morphTargets[b].vertices;
t=a.morphTargets[b].vertices;k=0;for(n=t.length;k<n;k+=3)m=t[k]*c,r=t[k+1]*c,q=t[k+2]*c,o.push(new THREE.Vertex(new THREE.Vector3(m,r,q)))}}if(a.morphColors!==void 0){b=0;for(e=a.morphColors.length;b<e;b++){d.morphColors[b]={};d.morphColors[b].name=a.morphColors[b].name;d.morphColors[b].colors=[];n=d.morphColors[b].colors;m=a.morphColors[b].colors;c=0;for(k=m.length;c<k;c+=3)r=new THREE.Color(16755200),r.setRGB(m[c],m[c+1],m[c+2]),n.push(r)}}})(e);d.computeCentroids();d.computeFaceNormals();this.hasNormals(d)&&
d.computeTangents();b(d)};THREE.SceneLoader=function(){this.onLoadStart=function(){};this.onLoadProgress=function(){};this.onLoadComplete=function(){};this.callbackSync=function(){};this.callbackProgress=function(){}};THREE.SceneLoader.prototype.constructor=THREE.SceneLoader;
THREE.SceneLoader.prototype.load=function(a,b){var c=this,d=new XMLHttpRequest;d.onreadystatechange=function(){if(d.readyState==4)if(d.status==200||d.status==0)try{var e=JSON.parse(d.responseText);e.metadata===void 0||e.metadata.formatVersion===void 0||e.metadata.formatVersion!==3?console.error("Deprecated file format."):c.createScene(e,b,a)}catch(g){console.error(g),console.warn("DEPRECATED: ["+a+"] seems to be using old model format")}else console.error("Couldn't load ["+a+"] ["+d.status+"]")};
d.open("GET",a,!0);d.overrideMimeType("text/plain; charset=x-user-defined");d.setRequestHeader("Content-Type","text/plain");d.send(null)};
THREE.SceneLoader.prototype.createScene=function(a,b,c){function d(a,c){return c=="relativeToHTML"?a:n+"/"+a}function e(){var a;for(q in T.objects)if(!K.objects[q])if(v=T.objects[q],v.geometry!==void 0){if(x=K.geometries[v.geometry]){a=!1;for(L=0;L<v.materials.length;L++)G=K.materials[v.materials[L]],a=G instanceof THREE.ShaderMaterial;a&&x.computeTangents();D=v.position;H=v.rotation;C=v.quaternion;z=v.scale;C=0;G.length==0&&(G=new THREE.MeshFaceMaterial);G.length>1&&(G=new THREE.MeshFaceMaterial);
a=new THREE.Mesh(x,G);a.name=q;a.position.set(D[0],D[1],D[2]);C?(a.quaternion.set(C[0],C[1],C[2],C[3]),a.useQuaternion=!0):a.rotation.set(H[0],H[1],H[2]);a.scale.set(z[0],z[1],z[2]);a.visible=v.visible;K.scene.add(a);K.objects[q]=a;if(v.meshCollider){var c=THREE.CollisionUtils.MeshColliderWBox(a);K.scene.collisions.colliders.push(c)}if(v.castsShadow)c=new THREE.ShadowVolume(x),K.scene.add(c),c.position=a.position,c.rotation=a.rotation,c.scale=a.scale;v.trigger&&v.trigger.toLowerCase()!="none"&&(c=
{type:v.trigger,object:v},K.triggers[a.name]=c)}}else D=v.position,H=v.rotation,C=v.quaternion,z=v.scale,C=0,a=new THREE.Object3D,a.name=q,a.position.set(D[0],D[1],D[2]),C?(a.quaternion.set(C[0],C[1],C[2],C[3]),a.useQuaternion=!0):a.rotation.set(H[0],H[1],H[2]),a.scale.set(z[0],z[1],z[2]),a.visible=v.visible!==void 0?v.visible:!1,K.scene.add(a),K.objects[q]=a,K.empties[q]=a,v.trigger&&v.trigger.toLowerCase()!="none"&&(c={type:v.trigger,object:v},K.triggers[a.name]=c)}function g(a){return function(c){K.geometries[a]=
c;e();N-=1;k.onLoadComplete();h()}}function f(a){return function(c){K.geometries[a]=c}}function h(){k.callbackProgress({totalModels:Q,totalTextures:ca,loadedModels:Q-N,loadedTextures:ca-R},K);k.onLoadProgress();N==0&&R==0&&b(K)}var k=this,n=THREE.Loader.prototype.extractUrlbase(c),m,r,q,o,t,p,s,v,y,w,D,H,C,z,A,x,M,u,G,T,W,N,R,Q,ca,K;T=a;c=new THREE.BinaryLoader;W=new THREE.JSONLoader;R=N=0;K={scene:new THREE.Scene,geometries:{},materials:{},textures:{},objects:{},cameras:{},lights:{},fogs:{},triggers:{},
empties:{}};a=!1;for(q in T.objects)if(v=T.objects[q],v.meshCollider){a=!0;break}if(a)K.scene.collisions=new THREE.CollisionSystem;if(T.transform){a=T.transform.position;y=T.transform.rotation;var J=T.transform.scale;a&&K.scene.position.set(a[0],a[1],a[2]);y&&K.scene.rotation.set(y[0],y[1],y[2]);J&&K.scene.scale.set(J[0],J[1],J[2]);(a||y||J)&&K.scene.updateMatrix()}a=function(){R-=1;h();k.onLoadComplete()};for(t in T.cameras)y=T.cameras[t],y.type=="perspective"?M=new THREE.PerspectiveCamera(y.fov,
y.aspect,y.near,y.far):y.type=="ortho"&&(M=new THREE.OrthographicCamera(y.left,y.right,y.top,y.bottom,y.near,y.far)),D=y.position,y=y.target,M.position.set(D[0],D[1],D[2]),M.target=new THREE.Vector3(y[0],y[1],y[2]),K.cameras[t]=M;for(o in T.lights)y=T.lights[o],t=y.color!==void 0?y.color:16777215,M=y.intensity!==void 0?y.intensity:1,y.type=="directional"?(D=y.direction,w=new THREE.DirectionalLight(t,M),w.position.set(D[0],D[1],D[2]),w.position.normalize()):y.type=="point"?(D=y.position,w=y.distance,
w=new THREE.PointLight(t,M,w),w.position.set(D[0],D[1],D[2])):y.type=="ambient"&&(w=new THREE.AmbientLight(t)),K.scene.add(w),K.lights[o]=w;for(p in T.fogs)o=T.fogs[p],o.type=="linear"?u=new THREE.Fog(0,o.near,o.far):o.type=="exp2"&&(u=new THREE.FogExp2(0,o.density)),y=o.color,u.color.setRGB(y[0],y[1],y[2]),K.fogs[p]=u;if(K.cameras&&T.defaults.camera)K.currentCamera=K.cameras[T.defaults.camera];if(K.fogs&&T.defaults.fog)K.scene.fog=K.fogs[T.defaults.fog];y=T.defaults.bgcolor;K.bgColor=new THREE.Color;
K.bgColor.setRGB(y[0],y[1],y[2]);K.bgColorAlpha=T.defaults.bgalpha;for(m in T.geometries)if(p=T.geometries[m],p.type=="bin_mesh"||p.type=="ascii_mesh")N+=1,k.onLoadStart();Q=N;for(m in T.geometries)p=T.geometries[m],p.type=="cube"?(x=new THREE.CubeGeometry(p.width,p.height,p.depth,p.segmentsWidth,p.segmentsHeight,p.segmentsDepth,null,p.flipped,p.sides),K.geometries[m]=x):p.type=="plane"?(x=new THREE.PlaneGeometry(p.width,p.height,p.segmentsWidth,p.segmentsHeight),K.geometries[m]=x):p.type=="sphere"?
(x=new THREE.SphereGeometry(p.radius,p.segmentsWidth,p.segmentsHeight),K.geometries[m]=x):p.type=="cylinder"?(x=new THREE.CylinderGeometry(p.topRad,p.botRad,p.height,p.radSegs,p.heightSegs),K.geometries[m]=x):p.type=="torus"?(x=new THREE.TorusGeometry(p.radius,p.tube,p.segmentsR,p.segmentsT),K.geometries[m]=x):p.type=="icosahedron"?(x=new THREE.IcosahedronGeometry(p.subdivisions),K.geometries[m]=x):p.type=="bin_mesh"?c.load(d(p.url,T.urlBaseType),g(m)):p.type=="ascii_mesh"?W.load(d(p.url,T.urlBaseType),
g(m)):p.type=="embedded_mesh"&&(p=T.embeds[p.id])&&W.createModel(p,f(m),"");for(s in T.textures)if(m=T.textures[s],m.url instanceof Array){R+=m.url.length;for(p=0;p<m.url.length;p++)k.onLoadStart()}else R+=1,k.onLoadStart();ca=R;for(s in T.textures){m=T.textures[s];if(m.mapping!=void 0&&THREE[m.mapping]!=void 0)m.mapping=new THREE[m.mapping];if(m.url instanceof Array){p=[];for(var L=0;L<m.url.length;L++)p[L]=d(m.url[L],T.urlBaseType);p=THREE.ImageUtils.loadTextureCube(p,m.mapping,a)}else{p=THREE.ImageUtils.loadTexture(d(m.url,
T.urlBaseType),m.mapping,a);if(THREE[m.minFilter]!=void 0)p.minFilter=THREE[m.minFilter];if(THREE[m.magFilter]!=void 0)p.magFilter=THREE[m.magFilter];if(m.repeat){p.repeat.set(m.repeat[0],m.repeat[1]);if(m.repeat[0]!=1)p.wrapS=THREE.RepeatWrapping;if(m.repeat[1]!=1)p.wrapT=THREE.RepeatWrapping}m.offset&&p.offset.set(m.offset[0],m.offset[1]);if(m.wrap){u={repeat:THREE.RepeatWrapping,mirror:THREE.MirroredRepeatWrapping};if(u[m.wrap[0]]!==void 0)p.wrapS=u[m.wrap[0]];if(u[m.wrap[1]]!==void 0)p.wrapT=
u[m.wrap[1]]}}K.textures[s]=p}for(r in T.materials){s=T.materials[r];for(A in s.parameters)if(A=="envMap"||A=="map"||A=="lightMap")s.parameters[A]=K.textures[s.parameters[A]];else if(A=="shading")s.parameters[A]=s.parameters[A]=="flat"?THREE.FlatShading:THREE.SmoothShading;else if(A=="blending")s.parameters[A]=THREE[s.parameters[A]]?THREE[s.parameters[A]]:THREE.NormalBlending;else if(A=="combine")s.parameters[A]=s.parameters[A]=="MixOperation"?THREE.MixOperation:THREE.MultiplyOperation;else if(A==
"vertexColors")if(s.parameters[A]=="face")s.parameters[A]=THREE.FaceColors;else if(s.parameters[A])s.parameters[A]=THREE.VertexColors;if(s.parameters.opacity!==void 0&&s.parameters.opacity<1)s.parameters.transparent=!0;if(s.parameters.normalMap){m=THREE.ShaderUtils.lib.normal;a=THREE.UniformsUtils.clone(m.uniforms);p=s.parameters.color;u=s.parameters.specular;c=s.parameters.ambient;W=s.parameters.shininess;a.tNormal.texture=K.textures[s.parameters.normalMap];if(s.parameters.normalMapFactor)a.uNormalScale.value=
s.parameters.normalMapFactor;if(s.parameters.map)a.tDiffuse.texture=s.parameters.map,a.enableDiffuse.value=!0;if(s.parameters.lightMap)a.tAO.texture=s.parameters.lightMap,a.enableAO.value=!0;if(s.parameters.specularMap)a.tSpecular.texture=K.textures[s.parameters.specularMap],a.enableSpecular.value=!0;a.uDiffuseColor.value.setHex(p);a.uSpecularColor.value.setHex(u);a.uAmbientColor.value.setHex(c);a.uShininess.value=W;if(s.parameters.opacity)a.uOpacity.value=s.parameters.opacity;s=new THREE.ShaderMaterial({fragmentShader:m.fragmentShader,
vertexShader:m.vertexShader,uniforms:a,lights:!0,fog:!0})}else s=new THREE[s.type](s.parameters);K.materials[r]=s}e();k.callbackSync(K);h()};THREE.UTF8Loader=function(){};THREE.UTF8Loader.prototype=new THREE.UTF8Loader;THREE.UTF8Loader.prototype.constructor=THREE.UTF8Loader;
THREE.UTF8Loader.prototype.load=function(a,b,c){if(a instanceof Object)console.warn("DEPRECATED: UTF8Loader( parameters ) is now UTF8Loader( url, callback, metaData )."),c=a,a=c.model,b=c.callback,c={scale:c.scale,offsetX:c.offsetX,offsetY:c.offsetY,offsetZ:c.offsetZ};var d=new XMLHttpRequest,e=c.scale!==void 0?c.scale:1,g=c.offsetX!==void 0?c.offsetX:0,f=c.offsetY!==void 0?c.offsetY:0,h=c.offsetZ!==void 0?c.offsetZ:0;d.onreadystatechange=function(){d.readyState==4?d.status==200||d.status==0?THREE.UTF8Loader.prototype.createModel(d.responseText,
b,e,g,f,h):alert("Couldn't load ["+a+"] ["+d.status+"]"):d.readyState!=3&&d.readyState==2&&d.getResponseHeader("Content-Length")};d.open("GET",a,!0);d.send(null)};THREE.UTF8Loader.prototype.decompressMesh=function(a){var b=a.charCodeAt(0);b>=57344&&(b-=2048);b++;for(var c=new Float32Array(8*b),d=1,e=0;e<8;e++){for(var g=0,f=0;f<b;++f){var h=a.charCodeAt(f+d);g+=h>>1^-(h&1);c[8*f+e]=g}d+=b}b=a.length-d;g=new Uint16Array(b);for(e=f=0;e<b;e++)h=a.charCodeAt(e+d),g[e]=f-h,h==0&&f++;return[c,g]};
THREE.UTF8Loader.prototype.createModel=function(a,b,c,d,e,g){var f=function(){var b=this;b.materials=[];THREE.Geometry.call(this);var f=THREE.UTF8Loader.prototype.decompressMesh(a),n=[],m=[];(function(a,f,k){for(var n,m,s,v=a.length;k<v;k+=f)n=a[k],m=a[k+1],s=a[k+2],n=n/16383*c,m=m/16383*c,s=s/16383*c,n+=d,m+=e,s+=g,b.vertices.push(new THREE.Vertex(new THREE.Vector3(n,m,s)))})(f[0],8,0);(function(a,c,b){for(var d,e,f=a.length;b<f;b+=c)d=a[b],e=a[b+1],d/=1023,e/=1023,m.push(d,1-e)})(f[0],8,3);(function(a,
c,b){for(var d,e,f,g=a.length;b<g;b+=c)d=a[b],e=a[b+1],f=a[b+2],d=(d-512)/511,e=(e-512)/511,f=(f-512)/511,n.push(d,e,f)})(f[0],8,5);(function(a){var c,d,e,f,g,k,y,w,D,H=a.length;for(c=0;c<H;c+=3){d=a[c];e=a[c+1];f=a[c+2];g=b;w=d;D=e;k=f;y=d;var C=e,z=f,A=g.materials[0],x=n[C*3],M=n[C*3+1],C=n[C*3+2],u=n[z*3],G=n[z*3+1],z=n[z*3+2];y=new THREE.Vector3(n[y*3],n[y*3+1],n[y*3+2]);C=new THREE.Vector3(x,M,C);z=new THREE.Vector3(u,G,z);g.faces.push(new THREE.Face3(w,D,k,[y,C,z],null,A));g=m[d*2];d=m[d*2+
1];k=m[e*2];y=m[e*2+1];w=m[f*2];D=m[f*2+1];f=b.faceVertexUvs[0];e=k;k=y;y=[];y.push(new THREE.UV(g,d));y.push(new THREE.UV(e,k));y.push(new THREE.UV(w,D));f.push(y)}})(f[1]);this.computeCentroids();this.computeFaceNormals()};f.prototype=new THREE.Geometry;f.prototype.constructor=f;b(new f)};
THREE.Axes=function(){THREE.Object3D.call(this);var a=new THREE.Geometry;a.vertices.push(new THREE.Vertex);a.vertices.push(new THREE.Vertex(new THREE.Vector3(0,100,0)));var b=new THREE.CylinderGeometry(0,5,25,5,1),c=new THREE.Line(a,new THREE.LineBasicMaterial({color:16711680}));c.rotation.z=-Math.PI/2;this.add(c);c=new THREE.Mesh(b,new THREE.MeshBasicMaterial({color:16711680}));c.position.x=100;c.rotation.z=-Math.PI/2;this.add(c);c=new THREE.Line(a,new THREE.LineBasicMaterial({color:65280}));this.add(c);
c=new THREE.Mesh(b,new THREE.MeshBasicMaterial({color:65280}));c.position.y=100;this.add(c);c=new THREE.Line(a,new THREE.LineBasicMaterial({color:255}));c.rotation.x=Math.PI/2;this.add(c);c=new THREE.Mesh(b,new THREE.MeshBasicMaterial({color:255}));c.position.z=100;c.rotation.x=Math.PI/2;this.add(c)};THREE.Axes.prototype=new THREE.Object3D;THREE.Axes.prototype.constructor=THREE.Axes;
THREE.MarchingCubes=function(a,b){THREE.Object3D.call(this);this.material=b;this.init=function(a){this.resolution=a;this.isolation=80;this.size=a;this.size2=this.size*this.size;this.size3=this.size2*this.size;this.halfsize=this.size/2;this.delta=2/this.size;this.yd=this.size;this.zd=this.size2;this.field=new Float32Array(this.size3);this.normal_cache=new Float32Array(this.size3*3);this.vlist=new Float32Array(36);this.nlist=new Float32Array(36);this.firstDraw=!0;this.maxCount=4096;this.count=0;this.hasNormal=
this.hasPos=!1;this.positionArray=new Float32Array(this.maxCount*3);this.normalArray=new Float32Array(this.maxCount*3)};this.lerp=function(a,b,e){return a+(b-a)*e};this.VIntX=function(a,b,e,g,f,h,k,n,m,r){f=(f-m)/(r-m);m=this.normal_cache;b[g]=h+f*this.delta;b[g+1]=k;b[g+2]=n;e[g]=this.lerp(m[a],m[a+3],f);e[g+1]=this.lerp(m[a+1],m[a+4],f);e[g+2]=this.lerp(m[a+2],m[a+5],f)};this.VIntY=function(a,b,e,g,f,h,k,n,m,r){f=(f-m)/(r-m);m=this.normal_cache;b[g]=h;b[g+1]=k+f*this.delta;b[g+2]=n;b=a+this.yd*
3;e[g]=this.lerp(m[a],m[b],f);e[g+1]=this.lerp(m[a+1],m[b+1],f);e[g+2]=this.lerp(m[a+2],m[b+2],f)};this.VIntZ=function(a,b,e,g,f,h,k,n,m,r){f=(f-m)/(r-m);m=this.normal_cache;b[g]=h;b[g+1]=k;b[g+2]=n+f*this.delta;b=a+this.zd*3;e[g]=this.lerp(m[a],m[b],f);e[g+1]=this.lerp(m[a+1],m[b+1],f);e[g+2]=this.lerp(m[a+2],m[b+2],f)};this.compNorm=function(a){var b=a*3;this.normal_cache[b]===0&&(this.normal_cache[b]=this.field[a-1]-this.field[a+1],this.normal_cache[b+1]=this.field[a-this.yd]-this.field[a+this.yd],
this.normal_cache[b+2]=this.field[a-this.zd]-this.field[a+this.zd])};this.polygonize=function(a,b,e,g,f,h){var k=g+1,n=g+this.yd,m=g+this.zd,r=k+this.yd,q=k+this.zd,o=g+this.yd+this.zd,t=k+this.yd+this.zd,p=0,s=this.field[g],v=this.field[k],y=this.field[n],w=this.field[r],D=this.field[m],H=this.field[q],C=this.field[o],z=this.field[t];s<f&&(p|=1);v<f&&(p|=2);y<f&&(p|=8);w<f&&(p|=4);D<f&&(p|=16);H<f&&(p|=32);C<f&&(p|=128);z<f&&(p|=64);var A=THREE.edgeTable[p];if(A===0)return 0;var x=this.delta,M=a+
x,u=b+x,x=e+x;A&1&&(this.compNorm(g),this.compNorm(k),this.VIntX(g*3,this.vlist,this.nlist,0,f,a,b,e,s,v));A&2&&(this.compNorm(k),this.compNorm(r),this.VIntY(k*3,this.vlist,this.nlist,3,f,M,b,e,v,w));A&4&&(this.compNorm(n),this.compNorm(r),this.VIntX(n*3,this.vlist,this.nlist,6,f,a,u,e,y,w));A&8&&(this.compNorm(g),this.compNorm(n),this.VIntY(g*3,this.vlist,this.nlist,9,f,a,b,e,s,y));A&16&&(this.compNorm(m),this.compNorm(q),this.VIntX(m*3,this.vlist,this.nlist,12,f,a,b,x,D,H));A&32&&(this.compNorm(q),
this.compNorm(t),this.VIntY(q*3,this.vlist,this.nlist,15,f,M,b,x,H,z));A&64&&(this.compNorm(o),this.compNorm(t),this.VIntX(o*3,this.vlist,this.nlist,18,f,a,u,x,C,z));A&128&&(this.compNorm(m),this.compNorm(o),this.VIntY(m*3,this.vlist,this.nlist,21,f,a,b,x,D,C));A&256&&(this.compNorm(g),this.compNorm(m),this.VIntZ(g*3,this.vlist,this.nlist,24,f,a,b,e,s,D));A&512&&(this.compNorm(k),this.compNorm(q),this.VIntZ(k*3,this.vlist,this.nlist,27,f,M,b,e,v,H));A&1024&&(this.compNorm(r),this.compNorm(t),this.VIntZ(r*
3,this.vlist,this.nlist,30,f,M,u,e,w,z));A&2048&&(this.compNorm(n),this.compNorm(o),this.VIntZ(n*3,this.vlist,this.nlist,33,f,a,u,e,y,C));p<<=4;for(f=g=0;THREE.triTable[p+f]!=-1;)a=p+f,b=a+1,e=a+2,this.posnormtriv(this.vlist,this.nlist,3*THREE.triTable[a],3*THREE.triTable[b],3*THREE.triTable[e],h),f+=3,g++;return g};this.posnormtriv=function(a,b,e,g,f,h){var k=this.count*3;this.positionArray[k]=a[e];this.positionArray[k+1]=a[e+1];this.positionArray[k+2]=a[e+2];this.positionArray[k+3]=a[g];this.positionArray[k+
4]=a[g+1];this.positionArray[k+5]=a[g+2];this.positionArray[k+6]=a[f];this.positionArray[k+7]=a[f+1];this.positionArray[k+8]=a[f+2];this.normalArray[k]=b[e];this.normalArray[k+1]=b[e+1];this.normalArray[k+2]=b[e+2];this.normalArray[k+3]=b[g];this.normalArray[k+4]=b[g+1];this.normalArray[k+5]=b[g+2];this.normalArray[k+6]=b[f];this.normalArray[k+7]=b[f+1];this.normalArray[k+8]=b[f+2];this.hasNormal=this.hasPos=!0;this.count+=3;this.count>=this.maxCount-3&&h(this)};this.begin=function(){this.count=0;
this.hasNormal=this.hasPos=!1};this.end=function(a){if(this.count!==0){for(var b=this.count*3;b<this.positionArray.length;b++)this.positionArray[b]=0;a(this)}};this.addBall=function(a,b,e,g,f){var h=this.size*Math.sqrt(g/f),k=e*this.size,n=b*this.size,m=a*this.size,r=Math.floor(k-h);r<1&&(r=1);k=Math.floor(k+h);k>this.size-1&&(k=this.size-1);var q=Math.floor(n-h);q<1&&(q=1);n=Math.floor(n+h);n>this.size-1&&(n=this.size-1);var o=Math.floor(m-h);o<1&&(o=1);h=Math.floor(m+h);h>this.size-1&&(h=this.size-
1);for(var t,p,s,v,y,w;r<k;r++){m=this.size2*r;p=r/this.size-e;y=p*p;for(p=q;p<n;p++){s=m+this.size*p;t=p/this.size-b;w=t*t;for(t=o;t<h;t++)v=t/this.size-a,v=g/(1.0E-6+v*v+w+y)-f,v>0&&(this.field[s+t]+=v)}}};this.addPlaneX=function(a,b){var e,g,f,h,k,n=this.size,m=this.yd,r=this.zd,q=this.field,o=n*Math.sqrt(a/b);o>n&&(o=n);for(e=0;e<o;e++)if(g=e/n,g*=g,h=a/(1.0E-4+g)-b,h>0)for(g=0;g<n;g++){k=e+g*m;for(f=0;f<n;f++)q[r*f+k]+=h}};this.addPlaneY=function(a,b){var e,g,f,h,k,n,m=this.size,r=this.yd,q=
this.zd,o=this.field,t=m*Math.sqrt(a/b);t>m&&(t=m);for(g=0;g<t;g++)if(e=g/m,e*=e,h=a/(1.0E-4+e)-b,h>0){k=g*r;for(e=0;e<m;e++){n=k+e;for(f=0;f<m;f++)o[q*f+n]+=h}}};this.addPlaneZ=function(a,b){var e,g,f,h,k,n,m=this.size,r=this.yd,q=this.zd,o=this.field,t=m*Math.sqrt(a/b);t>m&&(t=m);for(f=0;f<t;f++)if(e=f/m,e*=e,h=a/(1.0E-4+e)-b,h>0){k=q*f;for(g=0;g<m;g++){n=k+g*r;for(e=0;e<m;e++)o[n+e]+=h}}};this.reset=function(){var a;for(a=0;a<this.size3;a++)this.normal_cache[a*3]=0,this.field[a]=0};this.render=
function(a){this.begin();var b,e,g,f,h,k,n,m,r,q=this.size-2;for(f=1;f<q;f++){r=this.size2*f;n=(f-this.halfsize)/this.halfsize;for(g=1;g<q;g++){m=r+this.size*g;k=(g-this.halfsize)/this.halfsize;for(e=1;e<q;e++)h=(e-this.halfsize)/this.halfsize,b=m+e,this.polygonize(h,k,n,b,this.isolation,a)}}this.end(a)};this.generateGeometry=function(){var a=0,b=new THREE.Geometry,e=[];this.render(function(g){var f,h,k,n,m,r,q,o;for(f=0;f<g.count;f++)q=f*3,m=q+1,o=q+2,h=g.positionArray[q],k=g.positionArray[m],n=
g.positionArray[o],r=new THREE.Vector3(h,k,n),h=g.normalArray[q],k=g.normalArray[m],n=g.normalArray[o],q=new THREE.Vector3(h,k,n),q.normalize(),m=new THREE.Vertex(r),b.vertices.push(m),e.push(q);r=g.count/3;for(f=0;f<r;f++)q=(a+f)*3,m=q+1,o=q+2,h=e[q],k=e[m],n=e[o],q=new THREE.Face3(q,m,o,[h,k,n]),b.faces.push(q);a+=r;g.count=0});return b};this.init(a)};THREE.MarchingCubes.prototype=new THREE.Object3D;THREE.MarchingCubes.prototype.constructor=THREE.MarchingCubes;
THREE.edgeTable=new Int32Array([0,265,515,778,1030,1295,1541,1804,2060,2309,2575,2822,3082,3331,3593,3840,400,153,915,666,1430,1183,1941,1692,2460,2197,2975,2710,3482,3219,3993,3728,560,825,51,314,1590,1855,1077,1340,2620,2869,2111,2358,3642,3891,3129,3376,928,681,419,170,1958,1711,1445,1196,2988,2725,2479,2214,4010,3747,3497,3232,1120,1385,1635,1898,102,367,613,876,3180,3429,3695,3942,2154,2403,2665,2912,1520,1273,2035,1786,502,255,1013,764,3580,3317,4095,3830,2554,2291,3065,2800,1616,1881,1107,
1370,598,863,85,348,3676,3925,3167,3414,2650,2899,2137,2384,1984,1737,1475,1226,966,719,453,204,4044,3781,3535,3270,3018,2755,2505,2240,2240,2505,2755,3018,3270,3535,3781,4044,204,453,719,966,1226,1475,1737,1984,2384,2137,2899,2650,3414,3167,3925,3676,348,85,863,598,1370,1107,1881,1616,2800,3065,2291,2554,3830,4095,3317,3580,764,1013,255,502,1786,2035,1273,1520,2912,2665,2403,2154,3942,3695,3429,3180,876,613,367,102,1898,1635,1385,1120,3232,3497,3747,4010,2214,2479,2725,2988,1196,1445,1711,1958,170,
419,681,928,3376,3129,3891,3642,2358,2111,2869,2620,1340,1077,1855,1590,314,51,825,560,3728,3993,3219,3482,2710,2975,2197,2460,1692,1941,1183,1430,666,915,153,400,3840,3593,3331,3082,2822,2575,2309,2060,1804,1541,1295,1030,778,515,265,0]);
THREE.triTable=new Int32Array([-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,8,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,1,9,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,1,8,3,9,8,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,1,2,10,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,8,3,1,2,10,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,9,2,10,0,2,9,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,2,8,3,2,10,8,10,9,8,-1,-1,-1,-1,-1,-1,-1,3,11,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,11,2,8,11,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,1,9,0,2,3,11,-1,-1,-1,-1,-1,
-1,-1,-1,-1,-1,1,11,2,1,9,11,9,8,11,-1,-1,-1,-1,-1,-1,-1,3,10,1,11,10,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,10,1,0,8,10,8,11,10,-1,-1,-1,-1,-1,-1,-1,3,9,0,3,11,9,11,10,9,-1,-1,-1,-1,-1,-1,-1,9,8,10,10,8,11,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,4,7,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,4,3,0,7,3,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,1,9,8,4,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,4,1,9,4,7,1,7,3,1,-1,-1,-1,-1,-1,-1,-1,1,2,10,8,4,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,3,4,7,3,0,4,1,2,10,-1,-1,-1,-1,-1,-1,-1,9,2,10,9,0,2,8,4,7,
-1,-1,-1,-1,-1,-1,-1,2,10,9,2,9,7,2,7,3,7,9,4,-1,-1,-1,-1,8,4,7,3,11,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,11,4,7,11,2,4,2,0,4,-1,-1,-1,-1,-1,-1,-1,9,0,1,8,4,7,2,3,11,-1,-1,-1,-1,-1,-1,-1,4,7,11,9,4,11,9,11,2,9,2,1,-1,-1,-1,-1,3,10,1,3,11,10,7,8,4,-1,-1,-1,-1,-1,-1,-1,1,11,10,1,4,11,1,0,4,7,11,4,-1,-1,-1,-1,4,7,8,9,0,11,9,11,10,11,0,3,-1,-1,-1,-1,4,7,11,4,11,9,9,11,10,-1,-1,-1,-1,-1,-1,-1,9,5,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,9,5,4,0,8,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,5,4,1,5,0,-1,-1,-1,-1,-1,-1,
-1,-1,-1,-1,8,5,4,8,3,5,3,1,5,-1,-1,-1,-1,-1,-1,-1,1,2,10,9,5,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,3,0,8,1,2,10,4,9,5,-1,-1,-1,-1,-1,-1,-1,5,2,10,5,4,2,4,0,2,-1,-1,-1,-1,-1,-1,-1,2,10,5,3,2,5,3,5,4,3,4,8,-1,-1,-1,-1,9,5,4,2,3,11,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,11,2,0,8,11,4,9,5,-1,-1,-1,-1,-1,-1,-1,0,5,4,0,1,5,2,3,11,-1,-1,-1,-1,-1,-1,-1,2,1,5,2,5,8,2,8,11,4,8,5,-1,-1,-1,-1,10,3,11,10,1,3,9,5,4,-1,-1,-1,-1,-1,-1,-1,4,9,5,0,8,1,8,10,1,8,11,10,-1,-1,-1,-1,5,4,0,5,0,11,5,11,10,11,0,3,-1,-1,-1,-1,5,4,8,5,
8,10,10,8,11,-1,-1,-1,-1,-1,-1,-1,9,7,8,5,7,9,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,9,3,0,9,5,3,5,7,3,-1,-1,-1,-1,-1,-1,-1,0,7,8,0,1,7,1,5,7,-1,-1,-1,-1,-1,-1,-1,1,5,3,3,5,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,9,7,8,9,5,7,10,1,2,-1,-1,-1,-1,-1,-1,-1,10,1,2,9,5,0,5,3,0,5,7,3,-1,-1,-1,-1,8,0,2,8,2,5,8,5,7,10,5,2,-1,-1,-1,-1,2,10,5,2,5,3,3,5,7,-1,-1,-1,-1,-1,-1,-1,7,9,5,7,8,9,3,11,2,-1,-1,-1,-1,-1,-1,-1,9,5,7,9,7,2,9,2,0,2,7,11,-1,-1,-1,-1,2,3,11,0,1,8,1,7,8,1,5,7,-1,-1,-1,-1,11,2,1,11,1,7,7,1,5,-1,-1,-1,-1,-1,-1,
-1,9,5,8,8,5,7,10,1,3,10,3,11,-1,-1,-1,-1,5,7,0,5,0,9,7,11,0,1,0,10,11,10,0,-1,11,10,0,11,0,3,10,5,0,8,0,7,5,7,0,-1,11,10,5,7,11,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,10,6,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,8,3,5,10,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,9,0,1,5,10,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,1,8,3,1,9,8,5,10,6,-1,-1,-1,-1,-1,-1,-1,1,6,5,2,6,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,1,6,5,1,2,6,3,0,8,-1,-1,-1,-1,-1,-1,-1,9,6,5,9,0,6,0,2,6,-1,-1,-1,-1,-1,-1,-1,5,9,8,5,8,2,5,2,6,3,2,8,-1,-1,-1,-1,2,3,11,10,6,
5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,11,0,8,11,2,0,10,6,5,-1,-1,-1,-1,-1,-1,-1,0,1,9,2,3,11,5,10,6,-1,-1,-1,-1,-1,-1,-1,5,10,6,1,9,2,9,11,2,9,8,11,-1,-1,-1,-1,6,3,11,6,5,3,5,1,3,-1,-1,-1,-1,-1,-1,-1,0,8,11,0,11,5,0,5,1,5,11,6,-1,-1,-1,-1,3,11,6,0,3,6,0,6,5,0,5,9,-1,-1,-1,-1,6,5,9,6,9,11,11,9,8,-1,-1,-1,-1,-1,-1,-1,5,10,6,4,7,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,4,3,0,4,7,3,6,5,10,-1,-1,-1,-1,-1,-1,-1,1,9,0,5,10,6,8,4,7,-1,-1,-1,-1,-1,-1,-1,10,6,5,1,9,7,1,7,3,7,9,4,-1,-1,-1,-1,6,1,2,6,5,1,4,7,8,-1,-1,-1,-1,
-1,-1,-1,1,2,5,5,2,6,3,0,4,3,4,7,-1,-1,-1,-1,8,4,7,9,0,5,0,6,5,0,2,6,-1,-1,-1,-1,7,3,9,7,9,4,3,2,9,5,9,6,2,6,9,-1,3,11,2,7,8,4,10,6,5,-1,-1,-1,-1,-1,-1,-1,5,10,6,4,7,2,4,2,0,2,7,11,-1,-1,-1,-1,0,1,9,4,7,8,2,3,11,5,10,6,-1,-1,-1,-1,9,2,1,9,11,2,9,4,11,7,11,4,5,10,6,-1,8,4,7,3,11,5,3,5,1,5,11,6,-1,-1,-1,-1,5,1,11,5,11,6,1,0,11,7,11,4,0,4,11,-1,0,5,9,0,6,5,0,3,6,11,6,3,8,4,7,-1,6,5,9,6,9,11,4,7,9,7,11,9,-1,-1,-1,-1,10,4,9,6,4,10,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,4,10,6,4,9,10,0,8,3,-1,-1,-1,-1,-1,-1,-1,
10,0,1,10,6,0,6,4,0,-1,-1,-1,-1,-1,-1,-1,8,3,1,8,1,6,8,6,4,6,1,10,-1,-1,-1,-1,1,4,9,1,2,4,2,6,4,-1,-1,-1,-1,-1,-1,-1,3,0,8,1,2,9,2,4,9,2,6,4,-1,-1,-1,-1,0,2,4,4,2,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,8,3,2,8,2,4,4,2,6,-1,-1,-1,-1,-1,-1,-1,10,4,9,10,6,4,11,2,3,-1,-1,-1,-1,-1,-1,-1,0,8,2,2,8,11,4,9,10,4,10,6,-1,-1,-1,-1,3,11,2,0,1,6,0,6,4,6,1,10,-1,-1,-1,-1,6,4,1,6,1,10,4,8,1,2,1,11,8,11,1,-1,9,6,4,9,3,6,9,1,3,11,6,3,-1,-1,-1,-1,8,11,1,8,1,0,11,6,1,9,1,4,6,4,1,-1,3,11,6,3,6,0,0,6,4,-1,-1,-1,-1,-1,-1,-1,
6,4,8,11,6,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,7,10,6,7,8,10,8,9,10,-1,-1,-1,-1,-1,-1,-1,0,7,3,0,10,7,0,9,10,6,7,10,-1,-1,-1,-1,10,6,7,1,10,7,1,7,8,1,8,0,-1,-1,-1,-1,10,6,7,10,7,1,1,7,3,-1,-1,-1,-1,-1,-1,-1,1,2,6,1,6,8,1,8,9,8,6,7,-1,-1,-1,-1,2,6,9,2,9,1,6,7,9,0,9,3,7,3,9,-1,7,8,0,7,0,6,6,0,2,-1,-1,-1,-1,-1,-1,-1,7,3,2,6,7,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,2,3,11,10,6,8,10,8,9,8,6,7,-1,-1,-1,-1,2,0,7,2,7,11,0,9,7,6,7,10,9,10,7,-1,1,8,0,1,7,8,1,10,7,6,7,10,2,3,11,-1,11,2,1,11,1,7,10,6,1,6,7,1,-1,-1,-1,-1,
8,9,6,8,6,7,9,1,6,11,6,3,1,3,6,-1,0,9,1,11,6,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,7,8,0,7,0,6,3,11,0,11,6,0,-1,-1,-1,-1,7,11,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,7,6,11,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,3,0,8,11,7,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,1,9,11,7,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,8,1,9,8,3,1,11,7,6,-1,-1,-1,-1,-1,-1,-1,10,1,2,6,11,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,1,2,10,3,0,8,6,11,7,-1,-1,-1,-1,-1,-1,-1,2,9,0,2,10,9,6,11,7,-1,-1,-1,-1,-1,-1,-1,6,11,7,2,10,3,10,8,3,10,9,8,-1,-1,-1,-1,7,
2,3,6,2,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,7,0,8,7,6,0,6,2,0,-1,-1,-1,-1,-1,-1,-1,2,7,6,2,3,7,0,1,9,-1,-1,-1,-1,-1,-1,-1,1,6,2,1,8,6,1,9,8,8,7,6,-1,-1,-1,-1,10,7,6,10,1,7,1,3,7,-1,-1,-1,-1,-1,-1,-1,10,7,6,1,7,10,1,8,7,1,0,8,-1,-1,-1,-1,0,3,7,0,7,10,0,10,9,6,10,7,-1,-1,-1,-1,7,6,10,7,10,8,8,10,9,-1,-1,-1,-1,-1,-1,-1,6,8,4,11,8,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,3,6,11,3,0,6,0,4,6,-1,-1,-1,-1,-1,-1,-1,8,6,11,8,4,6,9,0,1,-1,-1,-1,-1,-1,-1,-1,9,4,6,9,6,3,9,3,1,11,3,6,-1,-1,-1,-1,6,8,4,6,11,8,2,10,1,-1,-1,-1,
-1,-1,-1,-1,1,2,10,3,0,11,0,6,11,0,4,6,-1,-1,-1,-1,4,11,8,4,6,11,0,2,9,2,10,9,-1,-1,-1,-1,10,9,3,10,3,2,9,4,3,11,3,6,4,6,3,-1,8,2,3,8,4,2,4,6,2,-1,-1,-1,-1,-1,-1,-1,0,4,2,4,6,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,1,9,0,2,3,4,2,4,6,4,3,8,-1,-1,-1,-1,1,9,4,1,4,2,2,4,6,-1,-1,-1,-1,-1,-1,-1,8,1,3,8,6,1,8,4,6,6,10,1,-1,-1,-1,-1,10,1,0,10,0,6,6,0,4,-1,-1,-1,-1,-1,-1,-1,4,6,3,4,3,8,6,10,3,0,3,9,10,9,3,-1,10,9,4,6,10,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,4,9,5,7,6,11,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,8,3,4,9,5,11,7,6,
-1,-1,-1,-1,-1,-1,-1,5,0,1,5,4,0,7,6,11,-1,-1,-1,-1,-1,-1,-1,11,7,6,8,3,4,3,5,4,3,1,5,-1,-1,-1,-1,9,5,4,10,1,2,7,6,11,-1,-1,-1,-1,-1,-1,-1,6,11,7,1,2,10,0,8,3,4,9,5,-1,-1,-1,-1,7,6,11,5,4,10,4,2,10,4,0,2,-1,-1,-1,-1,3,4,8,3,5,4,3,2,5,10,5,2,11,7,6,-1,7,2,3,7,6,2,5,4,9,-1,-1,-1,-1,-1,-1,-1,9,5,4,0,8,6,0,6,2,6,8,7,-1,-1,-1,-1,3,6,2,3,7,6,1,5,0,5,4,0,-1,-1,-1,-1,6,2,8,6,8,7,2,1,8,4,8,5,1,5,8,-1,9,5,4,10,1,6,1,7,6,1,3,7,-1,-1,-1,-1,1,6,10,1,7,6,1,0,7,8,7,0,9,5,4,-1,4,0,10,4,10,5,0,3,10,6,10,7,3,7,10,
-1,7,6,10,7,10,8,5,4,10,4,8,10,-1,-1,-1,-1,6,9,5,6,11,9,11,8,9,-1,-1,-1,-1,-1,-1,-1,3,6,11,0,6,3,0,5,6,0,9,5,-1,-1,-1,-1,0,11,8,0,5,11,0,1,5,5,6,11,-1,-1,-1,-1,6,11,3,6,3,5,5,3,1,-1,-1,-1,-1,-1,-1,-1,1,2,10,9,5,11,9,11,8,11,5,6,-1,-1,-1,-1,0,11,3,0,6,11,0,9,6,5,6,9,1,2,10,-1,11,8,5,11,5,6,8,0,5,10,5,2,0,2,5,-1,6,11,3,6,3,5,2,10,3,10,5,3,-1,-1,-1,-1,5,8,9,5,2,8,5,6,2,3,8,2,-1,-1,-1,-1,9,5,6,9,6,0,0,6,2,-1,-1,-1,-1,-1,-1,-1,1,5,8,1,8,0,5,6,8,3,8,2,6,2,8,-1,1,5,6,2,1,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
1,3,6,1,6,10,3,8,6,5,6,9,8,9,6,-1,10,1,0,10,0,6,9,5,0,5,6,0,-1,-1,-1,-1,0,3,8,5,6,10,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,10,5,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,11,5,10,7,5,11,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,11,5,10,11,7,5,8,3,0,-1,-1,-1,-1,-1,-1,-1,5,11,7,5,10,11,1,9,0,-1,-1,-1,-1,-1,-1,-1,10,7,5,10,11,7,9,8,1,8,3,1,-1,-1,-1,-1,11,1,2,11,7,1,7,5,1,-1,-1,-1,-1,-1,-1,-1,0,8,3,1,2,7,1,7,5,7,2,11,-1,-1,-1,-1,9,7,5,9,2,7,9,0,2,2,11,7,-1,-1,-1,-1,7,5,2,7,2,11,5,9,2,3,2,8,9,8,2,-1,2,5,10,2,3,5,3,7,5,-1,-1,
-1,-1,-1,-1,-1,8,2,0,8,5,2,8,7,5,10,2,5,-1,-1,-1,-1,9,0,1,5,10,3,5,3,7,3,10,2,-1,-1,-1,-1,9,8,2,9,2,1,8,7,2,10,2,5,7,5,2,-1,1,3,5,3,7,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,8,7,0,7,1,1,7,5,-1,-1,-1,-1,-1,-1,-1,9,0,3,9,3,5,5,3,7,-1,-1,-1,-1,-1,-1,-1,9,8,7,5,9,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,5,8,4,5,10,8,10,11,8,-1,-1,-1,-1,-1,-1,-1,5,0,4,5,11,0,5,10,11,11,3,0,-1,-1,-1,-1,0,1,9,8,4,10,8,10,11,10,4,5,-1,-1,-1,-1,10,11,4,10,4,5,11,3,4,9,4,1,3,1,4,-1,2,5,1,2,8,5,2,11,8,4,5,8,-1,-1,-1,-1,0,4,11,0,11,3,4,5,11,
2,11,1,5,1,11,-1,0,2,5,0,5,9,2,11,5,4,5,8,11,8,5,-1,9,4,5,2,11,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,2,5,10,3,5,2,3,4,5,3,8,4,-1,-1,-1,-1,5,10,2,5,2,4,4,2,0,-1,-1,-1,-1,-1,-1,-1,3,10,2,3,5,10,3,8,5,4,5,8,0,1,9,-1,5,10,2,5,2,4,1,9,2,9,4,2,-1,-1,-1,-1,8,4,5,8,5,3,3,5,1,-1,-1,-1,-1,-1,-1,-1,0,4,5,1,0,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,8,4,5,8,5,3,9,0,5,0,3,5,-1,-1,-1,-1,9,4,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,4,11,7,4,9,11,9,10,11,-1,-1,-1,-1,-1,-1,-1,0,8,3,4,9,7,9,11,7,9,10,11,-1,-1,-1,-1,1,10,11,1,11,
4,1,4,0,7,4,11,-1,-1,-1,-1,3,1,4,3,4,8,1,10,4,7,4,11,10,11,4,-1,4,11,7,9,11,4,9,2,11,9,1,2,-1,-1,-1,-1,9,7,4,9,11,7,9,1,11,2,11,1,0,8,3,-1,11,7,4,11,4,2,2,4,0,-1,-1,-1,-1,-1,-1,-1,11,7,4,11,4,2,8,3,4,3,2,4,-1,-1,-1,-1,2,9,10,2,7,9,2,3,7,7,4,9,-1,-1,-1,-1,9,10,7,9,7,4,10,2,7,8,7,0,2,0,7,-1,3,7,10,3,10,2,7,4,10,1,10,0,4,0,10,-1,1,10,2,8,7,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,4,9,1,4,1,7,7,1,3,-1,-1,-1,-1,-1,-1,-1,4,9,1,4,1,7,0,8,1,8,7,1,-1,-1,-1,-1,4,0,3,7,4,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,4,8,7,-1,-1,-1,
-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,9,10,8,10,11,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,3,0,9,3,9,11,11,9,10,-1,-1,-1,-1,-1,-1,-1,0,1,10,0,10,8,8,10,11,-1,-1,-1,-1,-1,-1,-1,3,1,10,11,3,10,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,1,2,11,1,11,9,9,11,8,-1,-1,-1,-1,-1,-1,-1,3,0,9,3,9,11,1,2,9,2,11,9,-1,-1,-1,-1,0,2,11,8,0,11,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,3,2,11,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,2,3,8,2,8,10,10,8,9,-1,-1,-1,-1,-1,-1,-1,9,10,2,0,9,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,2,3,8,2,8,10,0,1,8,1,10,8,-1,-1,-1,-1,1,10,
2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,1,3,8,9,1,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,9,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,3,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1]);
if(THREE.WebGLRenderer)THREE.AnaglyphWebGLRenderer=function(a){THREE.WebGLRenderer.call(this,a);this.autoUpdateScene=!1;var b=this,c=this.setSize,d=this.render,e=new THREE.PerspectiveCamera,g=new THREE.PerspectiveCamera,f=new THREE.Matrix4,h=new THREE.Matrix4,k,n,m,r;e.matrixAutoUpdate=g.matrixAutoUpdate=!1;var a={minFilter:THREE.LinearFilter,magFilter:THREE.NearestFilter,format:THREE.RGBAFormat},q=new THREE.WebGLRenderTarget(512,512,a),o=new THREE.WebGLRenderTarget(512,512,a),t=new THREE.PerspectiveCamera(53,
1,1,1E4);t.position.z=2;var a=new THREE.ShaderMaterial({uniforms:{mapLeft:{type:"t",value:0,texture:q},mapRight:{type:"t",value:1,texture:o}},vertexShader:"varying vec2 vUv;\nvoid main() {\nvUv = vec2( uv.x, 1.0 - uv.y );\ngl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",fragmentShader:"uniform sampler2D mapLeft;\nuniform sampler2D mapRight;\nvarying vec2 vUv;\nvoid main() {\nvec4 colorL, colorR;\nvec2 uv = vUv;\ncolorL = texture2D( mapLeft, uv );\ncolorR = texture2D( mapRight, uv );\ngl_FragColor = vec4( colorL.g * 0.7 + colorL.b * 0.3, colorR.g, colorR.b, colorL.a + colorR.a ) * 1.1;\n}"}),
p=new THREE.Scene;p.add(new THREE.Mesh(new THREE.PlaneGeometry(2,2),a));p.add(t);this.setSize=function(a,d){c.call(b,a,d);q.width=a;q.height=d;o.width=a;o.height=d};this.render=function(a,c){a.updateMatrixWorld();if(k!==c.aspect||n!==c.near||m!==c.far||r!==c.fov){k=c.aspect;n=c.near;m=c.far;r=c.fov;var y=c.projectionMatrix.clone(),w=125/30*0.5,D=w*n/125,H=n*Math.tan(r*Math.PI/360),C;f.n14=w;h.n14=-w;w=-H*k+D;C=H*k+D;y.n11=2*n/(C-w);y.n13=(C+w)/(C-w);e.projectionMatrix.copy(y);w=-H*k-D;C=H*k-D;y.n11=
2*n/(C-w);y.n13=(C+w)/(C-w);g.projectionMatrix.copy(y)}e.matrixWorld.copy(c.matrixWorld).multiplySelf(h);e.position.copy(c.position);e.near=c.near;e.far=c.far;d.call(b,a,e,q,!0);g.matrixWorld.copy(c.matrixWorld).multiplySelf(f);g.position.copy(c.position);g.near=c.near;g.far=c.far;d.call(b,a,g,o,!0);p.updateMatrixWorld();d.call(b,p,t)}};
if(THREE.WebGLRenderer)THREE.CrosseyedWebGLRenderer=function(a){THREE.WebGLRenderer.call(this,a);this.autoClear=!1;var b=this,c=this.setSize,d=this.render,e,g,f=new THREE.PerspectiveCamera;f.target=new THREE.Vector3(0,0,0);var h=new THREE.PerspectiveCamera;h.target=new THREE.Vector3(0,0,0);b.separation=10;if(a&&a.separation!==void 0)b.separation=a.separation;this.setSize=function(a,d){c.call(b,a,d);e=a/2;g=d};this.render=function(a,c){this.clear();f.fov=c.fov;f.aspect=0.5*c.aspect;f.near=c.near;f.far=
c.far;f.updateProjectionMatrix();f.position.copy(c.position);f.target.copy(c.target);f.translateX(b.separation);f.lookAt(f.target);h.projectionMatrix=f.projectionMatrix;h.position.copy(c.position);h.target.copy(c.target);h.translateX(-b.separation);h.lookAt(h.target);this.setViewport(0,0,e,g);d.call(b,a,f);this.setViewport(e,0,e,g);d.call(b,a,h,!1)}};
