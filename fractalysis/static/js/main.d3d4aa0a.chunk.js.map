{"version":3,"sources":["components/TextIcon/TextIcon.tsx","pages/Editor/utils/uniforms.js","constants.ts","utils/query-parser.js","pages/Editor/hocs/withScene.tsx","pages/Editor/components/Scene/Scene.js","pages/Editor/components/Controls/CameraControl.tsx","components/Loader/Loader.js","components/Fractal/Fractal.tsx","pages/Editor/components/UniformPanel/Controls/Vec2.tsx","utils/colors.js","pages/Editor/components/UniformPanel/UniformControl.js","pages/Editor/components/UniformPanel/UniformPane.js","pages/Editor/components/UniformPanel/UniformPanel.js","pages/Editor/Editor.js","pages/Editor/components/ShaderComposer/ShaderComposer.js","pages/Editor/components/RandomizeUniforms/RandomizeUniforms.js","pages/Editor/components/DownloadButton/DownloadButton.tsx","utils/storage.ts","pages/Editor/components/SaveButton/SaveButton.tsx","pages/Editor/EditorNav.js","pages/Scenes/Scenes.tsx","pages/Renders/Renders.js","pages/Renders/RendersNav.js","routes.js","pages/Navbar/PageSelector.js","pages/Navbar/Navbar.js","App.js","index.tsx"],"names":["TextIcon","props","to","react_default","a","createElement","Link","Icon","name","icon","size","title","style","cursor","border","backgroundColor","onClick","defaultProps","isInt","v","test","concat","getUniformType","value","length","getVectorType","console","warn","constants","DEFAULT_SHADER","parser","query","queryObject","parse","queryType","parseObject","withScene","WrappedComponent","withRouter","location","search","substring","_query$shader","shader","Constants","_query$download","download","uniforms","Object","objectWithoutProperties","defaultValues","shaderName","configurations","keys","reduce","acc","key","config","defaultValue","getUniformDefaultValues","uniformValues","assign","switchShader","updatedScene","queryString","stringify","history","push","updateUniform","objectSpread","defineProperty","replace","updateUniforms","_this$props","this","children","childProps","width","window","innerWidth","height","innerHeight","childrenWithProps","React","Children","map","child","cloneElement","Component","state","prevClientX","prevClientY","event","setState","clientX","clientY","_event$currentTarget$","currentTarget","getBoundingClientRect","_this$state","offsetX","offsetY","uniformValue","y","x","cameraPosition","_this2","rest","onMouseDown","e","handleMouseDown","onMouseUp","handleMouseUp","Loader","className","visible","Fractal","undefined","shaders","shaderKey","fetch","process","cache","response","text","fragmentShader","Shaders","create","frag","createdShaders","newShaders","loadShader","prevProps","quality","shaderDef","src_components_Loader_Loader","getShortName","qlty","Math","min","max","outputSize","gl_react_dom_lib","webglContextAttributes","preserveDrawingBuffer","ref","onSurfaceRef","gl_react_lib","onDraw","Vec2","values","_this","value1","value2","onChange","label","Input","type","handleChange","parseInt","target","floatToHex","_values","slicedToArray","r","g","hex","toString","slice","SLIDER_ICONS","main","secondary","reset","UniformControl","inputType","uniformType","getInputTypeForUniform","react_precision_slider_lib_default","icons","includes","Checkbox","checked","_","data","charAt","bigint","hexToFloat","UniformPanel_Controls_Vec2","log","UniformPane","Tab","Pane","components_UniformPanel_UniformControl","group","uniformConfigurations","paneUniforms","paneUniformValues","forEach","uniformKey","menuItem","content","render","UniformPanel_UniformPane","_configurations$shade","_configurations$shade2","groups","groupedUniforms","panes","index","createTabPane","restGroup","filter","u","Segment","_callee","capture","url","regenerator_default","wrap","_context","prev","next","surfaceRef","captureAsBlob","sent","URL","createObjectURL","stop","components_UniformPanel_UniformPanel","components_Scene_Scene","Controls_CameraControl","components_Fractal_Fractal","Dimmer","active","page","onClickOutside","close","Loader_Loader","indeterminate","Dropdown","trigger","components_TextIcon_TextIcon","Menu","conf","Item","randomizable","randomUniforms","Array","isArray","round","random","uniformDefaults","Fragment","randomizeUniforms","resetUniforms","onDownload","open","origin","getScenes","JSON","localStorage","getItem","storage","storeScene","presetName","scene","scenes","setItem","removeScene","newScenes","sc","dialogOpen","inputValue","handleConfirm","handleInput","Confirm","header","Modal","Content","Description","placeholder","onCancel","onConfirm","EditorNavbar","ShaderComposer","maxWidth","borderLeft","borderRight","borderRadius","components_RandomizeUniforms_RandomizeUniforms","components_SaveButton_SaveButton","components_DownloadButton_DownloadButton","Scenes","handleRemove","forceUpdate","Container","Card","Group","params","Header","extra","Button","color","as","basic","presets","p","Renders","RendersNavbar","routes","path","exact","navbar","EditorNav","pages_Editor_Editor","pages_Scenes_Scenes","RendersNav","pages_Renders_Renders","DROPDOWN_MENU","_ref","currentIndex","findIndex","pathname","activeMenu","labeled","item","disabled","Navbar","onDismiss","hideNotif","Navbar_PageSelector","route","Route","component","List","href","Message","zIndex","App","BrowserRouter","pages_Navbar_Navbar","ReactDOM","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.d3d4aa0a.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Icon } from 'semantic-ui-react';\n\ninterface IProps {\n  to?: string;\n  icon: any;\n  title: string;\n  size: any;\n  onClick: () => React.MouseEvent | void;\n}\n\nconst TextIcon = (props: IProps) => {\n  if (!props.to) {\n    return (\n      <button\n        style={{ cursor: 'pointer', border: 'none', backgroundColor: 'white' }}\n        onClick={props.onClick}\n      >\n        <Icon name={props.icon} size={props.size} />\n        <span>{props.title}</span>\n      </button>\n    );\n  }\n  return (\n    <Link to={props.to}>\n      <Icon name={props.icon} size={props.size} />\n      <span>{props.title}</span>\n    </Link>\n  );\n};\n\nTextIcon.propTypes = {\n  to: PropTypes.string,\n  icon: PropTypes.string,\n  title: PropTypes.string,\n  size: PropTypes.string\n};\n\nTextIcon.defaultProps = {\n  icon: 'sticky note outline',\n  title: '',\n  size: 'huge'\n};\n\nexport default TextIcon;\n","import configurations from '../configurations.json';\n\nconst isInt = v => /^-?[0-9]+$/.test(`${v}`);\n\nexport function getUniformType(value) {\n  switch (typeof value) {\n    case 'boolean':\n      return 'bool';\n    case 'number':\n      return isInt(value) ? 'int' : 'float';\n    case 'object':\n      return getVectorType(value);\n    default:\n      console.warn(\n        `Unsupported value type for value: ${value}. Add a new type configuration.`\n      );\n      return null;\n  }\n}\n\nexport function getInputTypeForUniform(type) {\n  switch (type) {\n    case 'int':\n    case 'float':\n      return 'range';\n    case 'bool':\n      return 'checkbox';\n    default:\n      return null;\n  }\n}\n\nexport function getVectorType(value) {\n  // TODO Add support for other vectors\n  switch (value.length) {\n    case 2:\n      return 'vec2';\n    default:\n      return 'unknown vec';\n  }\n}\n\nexport function getUniformDefaultValues(shaderName) {\n  // Pull default uniform values from the configurations\n  const { uniforms } = configurations[shaderName];\n\n  // Collect the default values from the uniforms configs\n  return Object.keys(uniforms).reduce((acc, key) => {\n    const config = uniforms[key];\n    acc[key] = config.defaultValue;\n    return acc;\n  }, {});\n}\n","const DEFAULT_SHADER = 'Mandelbrot';\n\nexport default {\n  DEFAULT_SHADER\n};\n","import { parse } from 'qs';\nimport queryType from 'query-types';\n\n// Parser utility that also parses 'true' and 'false' to booleans, qs does not do this by default\nconst parser = query => {\n  const queryObject = parse(query);\n  return queryType.parseObject(queryObject);\n};\n\nexport default parser;\n","import React from 'react';\nimport { withRouter, RouteComponentProps } from 'react-router';\nimport { stringify } from 'qs';\nimport { getUniformDefaultValues } from '../utils/uniforms';\nimport Constants from '../../../constants';\nimport { Uniforms } from '../../../types/index';\nimport parse from '../../../utils/query-parser';\n\n/*\n  Higher-order component to pull current scene information together\n  and pass it to the the children.\n  Current scene includes the shader name and the uniforms.\n  These values can be either coming from defaults or from the URL.\n\n  URL is the state for this application. Preferably this should be only component\n  reading and modifying the URL (with exception of routing itself)\n\n  Note: In the URL the uniforms are spread out, so the URL is not 1:1\n  stringification of Scene object\n*/\nexport default function withScene(WrappedComponent: React.ComponentType<any>) {\n  const WithScene = (props: RouteComponentProps) => {\n    const query = parse(props.location.search.substring(1));\n    // TODO Verify given shader name exists\n    const {\n      shader = Constants.DEFAULT_SHADER,\n      download = false,\n      ...uniforms\n    } = query;\n\n    // Use the values from the URL or pull the defaults from storage\n    // Merge the values, as URL might have some parameters but not all\n    const defaultValues = getUniformDefaultValues(shader);\n    const uniformValues: Uniforms = Object.assign({}, defaultValues, uniforms);\n\n    const handleShaderSwitch = (name: string) => {\n      const updatedScene = Object.assign({}, { shader: name });\n      const queryString = stringify(updatedScene);\n      props.history.push(`?${queryString}`);\n    };\n\n    const handleUpdateUniform = (name: string, value: any) => {\n      // Merge the given uniform to rest of the current values\n      const updatedScene = Object.assign(\n        {},\n        { shader, ...uniformValues },\n        {\n          [name]: value\n        }\n      );\n\n      // Push the uniform key-value into the URL\n      const queryString = stringify(updatedScene);\n      props.history.replace(`?${queryString}`);\n    };\n\n    const handleUpdateUniforms = (uniforms: Uniforms) => {\n      // Merge the given uniforms to rest of the current values (in case given uniforms does not contain all necessary ones)\n      const updatedScene = Object.assign(\n        {},\n        { shader, ...uniformValues },\n        uniforms\n      );\n\n      // Push the uniform key-value into the URL\n      const queryString = stringify(updatedScene);\n      props.history.replace(`?${queryString}`);\n    };\n\n    return (\n      <WrappedComponent\n        {...props}\n        shader={shader}\n        download={download}\n        uniforms={uniformValues}\n        switchShader={handleShaderSwitch}\n        updateUniform={handleUpdateUniform}\n        updateUniforms={handleUpdateUniforms}\n      />\n    );\n  };\n\n  return withRouter(WithScene);\n}\n","import PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport withScene from '../../hocs/withScene';\n\nclass Scene extends Component {\n  static propTypes = {\n    children: PropTypes.node.isRequired\n  };\n\n  render() {\n    const { children, shader, uniforms } = this.props;\n\n    // Pass the props to children and render\n    const childProps = {\n      width: window.innerWidth,\n      height: window.innerHeight,\n      shader,\n      uniforms\n    };\n    const childrenWithProps = React.Children.map(children, child =>\n      React.cloneElement(child, childProps)\n    );\n    return <div>{childrenWithProps}</div>;\n  }\n}\n\nexport default withScene(Scene);\n","import PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport withScene from '../../hocs/withScene';\nimport { WithSceneProps } from '../../../../types/index';\n\ninterface IProps extends WithSceneProps {\n  children: any;\n}\n\ninterface IState {\n  prevClientX: number;\n  prevClientY: number;\n}\n\nclass CameraControl extends Component<IProps, IState> {\n  static propTypes = {\n    children: PropTypes.node\n  };\n  state = {\n    prevClientX: 0,\n    prevClientY: 0\n  };\n\n  handleMouseDown(event: React.MouseEvent<HTMLDivElement, MouseEvent>) {\n    this.setState({\n      prevClientX: event.clientX,\n      prevClientY: event.clientY\n    });\n  }\n\n  handleMouseUp(event: React.MouseEvent<HTMLDivElement, MouseEvent>) {\n    const { width, height } = event.currentTarget.getBoundingClientRect();\n    const { clientX, clientY } = event;\n    const { prevClientX, prevClientY } = this.state;\n\n    const offsetX = clientX - prevClientX;\n    const offsetY = clientY - prevClientY;\n\n    const moveBy = 0.02; // TODO Read this from configuration.json\n    const uniformName = 'cameraPosition'; // TODO Read this from configuration.json\n    const uniformValue = this.props.uniforms[uniformName];\n\n    const y = (offsetY / height) * moveBy;\n    const x = (offsetX / width) * moveBy;\n\n    const cameraPosition = [\n      uniformValue[0] - x,\n      uniformValue[1] + y,\n      uniformValue[2]\n    ];\n\n    this.props.updateUniform(uniformName, cameraPosition);\n  }\n  render() {\n    const { children, ...rest } = this.props;\n    const childrenWithProps = React.Children.map(children, child =>\n      React.cloneElement(child, rest)\n    );\n    return (\n      <div\n        onMouseDown={e => this.handleMouseDown(e)}\n        onMouseUp={e => this.handleMouseUp(e)}\n      >\n        {childrenWithProps}\n      </div>\n    );\n  }\n}\n\nexport default withScene(CameraControl);\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport './Loader.css';\n\nconst Loader = props => (\n  <div className=\"loader\">\n    <div className=\"lds-dual-ring\" />\n  </div>\n);\n\nLoader.propTypes = {\n  visible: PropTypes.bool\n};\n\nLoader.defaultProps = {\n  visible: true\n};\n\nexport default Loader;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Node, Shaders, ShadersSheet } from 'gl-react';\nimport { Surface } from 'gl-react-dom';\nimport Loader from '../Loader/Loader';\n\ninterface IProps {\n  width: number;\n  height: number;\n  uniforms: object;\n  shader: string;\n  quality: number;\n  onSurfaceRef?: () => void;\n  onDraw?: () => void;\n}\n\ninterface IState {\n  shader?: string;\n  shaders: ShadersSheet;\n}\n\nclass Fractal extends Component<IProps, IState> {\n  static propTypes = {\n    width: PropTypes.number,\n    height: PropTypes.number,\n    uniforms: PropTypes.object,\n    shader: PropTypes.string,\n    quality: PropTypes.number,\n    onSurfaceRef: PropTypes.func,\n    onDraw: PropTypes.func\n  };\n  static defaultProps = {\n    quality: 1,\n    onDraw: () => {}\n  };\n  state = {\n    shader: undefined,\n    shaders: {} as ShadersSheet\n  };\n\n  async loadShader(shaderKey: string) {\n    const { shaders } = this.state;\n    // If shader has been loaded already for the given key,\n    // set the key as current and do not reload\n    if (shaderKey in shaders) {\n      this.setState({ shader: shaderKey });\n      return;\n    }\n\n    // Load the fragment shader, compile it and set it as current\n    const response = await fetch(\n      `${process.env.PUBLIC_URL}/shaders/${shaderKey}.glsl`,\n      {\n        cache: 'no-cache'\n      }\n    );\n    const fragmentShader = await response.text();\n\n    const createdShaders = await Shaders.create({\n      [shaderKey]: {\n        frag: fragmentShader\n      }\n    });\n    const newShaders = Object.assign({}, shaders, createdShaders);\n    this.setState({ shader: shaderKey, shaders: newShaders });\n  }\n\n  async componentDidMount() {\n    const { shader } = this.props;\n    await this.loadShader(shader);\n  }\n\n  async componentDidUpdate(prevProps: IProps) {\n    if (this.props.shader !== prevProps.shader) {\n      await this.loadShader(this.props.shader);\n    }\n  }\n\n  render() {\n    const { width, height, uniforms, quality, shader } = this.props;\n    const { shaders } = this.state;\n    const shaderDef = shaders[shader];\n\n    if (!shaderDef) {\n      return <Loader />;\n    }\n\n    // TODO Would be nice to display different states: Loading, compiling, rendering\n\n    // If shaderID is not present yet, shader might still be compiling\n    // or if page was refreshed, ID is there but it anyway might not be compiled yet\n    const shaderExists = Shaders.getShortName(shaderDef) !== '???';\n    if (!shaderExists) {\n      return <Loader />;\n    }\n\n    // If the shader changes, we shouldn't render anything before new shader has been loaded & compiled\n    // Otherwise we could end up briefly rendering previous shader with new uniforms\n    if (this.props.shader !== this.state.shader) {\n      return <Loader />;\n    }\n\n    // Append some constants to the uniforms\n    const qlty = Math.min(Math.max(quality, 1), 5);\n    const uniformValues = Object.assign({}, uniforms, {\n      size: [width, height],\n      outputSize: [width / qlty, height / qlty]\n    });\n\n    return (\n      <Surface\n        width={width}\n        height={height}\n        webglContextAttributes={{ preserveDrawingBuffer: true }}\n        ref={this.props.onSurfaceRef}\n      >\n        <Node\n          shader={shaderDef}\n          uniforms={uniformValues}\n          onDraw={this.props.onDraw}\n        />\n      </Surface>\n    );\n  }\n}\n\nexport default Fractal;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Input } from 'semantic-ui-react';\nimport './Vec2.css';\n\ninterface IProps {\n  label: string;\n  value: Array<number>;\n  onChange: (value: Array<number>) => void;\n}\n\ninterface IState {\n  values: Array<number>;\n}\n\nclass Vec2 extends Component<IProps, IState> {\n  static propTypes = {\n    label: PropTypes.string,\n    value: PropTypes.array,\n    onChange: PropTypes.func\n  };\n  state = {\n    values: this.props.value\n  };\n  handleChange(value1: number | null, value2: number | null) {\n    const values = [\n      value1 || this.state.values[0],\n      value2 || this.state.values[1]\n    ];\n    this.props.onChange(values);\n  }\n  render() {\n    const { label, value } = this.props;\n\n    return (\n      <div className=\"uniform-control__vec2\">\n        <strong>{label}</strong>\n        <div>\n          <Input\n            type=\"number\"\n            value={value[0]}\n            onChange={e => this.handleChange(parseInt(e.target.value), null)}\n          />\n          <Input\n            type=\"number\"\n            value={value[1]}\n            onChange={e => this.handleChange(null, parseInt(e.target.value))}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Vec2;\n","export function hexToFloat(value) {\n  let hex = value;\n  if (hex.charAt && hex.charAt(0) === '#') {\n    hex = hex.substring(1);\n  }\n\n  var bigint = parseInt(hex, 16);\n  var r = (bigint >> 16) & 255;\n  var g = (bigint >> 8) & 255;\n  var b = bigint & 255;\n\n  return [r / 255, g / 255, b / 255];\n}\n\n/* eslint-disable */\nexport function floatToHex(values) {\n  const [ r, g, b ] = values;\n  const red = r * 255;\n  const green = g * 255;\n  const blue = b * 255;\n  const hex = ((blue | green << 8 | red << 16) | 1 << 24).toString(16).slice(1);\n  return `#${hex}`;\n}\n","import PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport Slider from 'react-precision-slider';\nimport Vec2 from './Controls/Vec2';\nimport { Checkbox } from 'semantic-ui-react';\nimport { getUniformType, getInputTypeForUniform } from '../../utils/uniforms';\nimport { floatToHex, hexToFloat } from '../../../../utils/colors';\nimport './UniformControl.css';\n\nconst SLIDER_ICONS = {\n  main: '▲',\n  secondary: '▽',\n  reset: '↺'\n};\n\nclass UniformControl extends Component {\n  static propTypes = {\n    label: PropTypes.string,\n    value: PropTypes.any,\n    inputType: PropTypes.string,\n    onChange: PropTypes.func.isRequired\n  };\n  render() {\n    const {\n      label,\n      value,\n      defaultValue,\n      onChange,\n      inputType,\n      ...rest\n    } = this.props;\n\n    const uniformType = getUniformType(value);\n    let type = inputType || getInputTypeForUniform(uniformType);\n\n    if (type === 'range') {\n      return (\n        <div>\n          <Slider\n            value={value}\n            label={label}\n            onChange={v => onChange(v)}\n            icons={SLIDER_ICONS}\n            {...rest}\n          />\n        </div>\n      );\n    }\n    // Default input types\n    else if (['checkbox'].includes(type)) {\n      return (\n        <div>\n          <Checkbox\n            label={label}\n            checked={value}\n            onChange={(_, data) => onChange(data.checked)}\n          />\n        </div>\n      );\n    } else if (['color'].includes(inputType)) {\n      return (\n        <div className=\"uniform-control__color\">\n          <input\n            type={type}\n            value={floatToHex(value)}\n            {...rest}\n            onChange={e => onChange(hexToFloat(e.target.value))}\n          />\n          <label>{label}</label>\n        </div>\n      );\n    }\n\n    if (uniformType === 'vec2') {\n      return <Vec2 label={label} value={value} onChange={onChange} />;\n    }\n\n    // TODO Support for rest of uniform types\n    console.log('Unsupported uniform', this.props, uniformType, type);\n    return null;\n  }\n}\n\nexport default UniformControl;\n","import React, { Component } from 'react';\nimport { Tab } from 'semantic-ui-react';\nimport UniformControl from './UniformControl';\n\nclass UniformPane extends Component {\n  render() {\n    const { uniforms, uniformValues, onChange } = this.props;\n\n    return (\n      <Tab.Pane>\n        <section className=\"panel-tab\">\n          {Object.keys(uniforms).map(key => (\n            <UniformControl\n              key={`uniform-${key}`}\n              value={uniformValues[key]}\n              {...uniforms[key]}\n              onChange={v => onChange(v, key)}\n            />\n          ))}\n        </section>\n      </Tab.Pane>\n    );\n  }\n}\n\nexport default UniformPane;\n","import React, { Component } from 'react';\nimport { Segment, Tab } from 'semantic-ui-react';\nimport UniformPane from './UniformPane';\nimport withScene from '../../hocs/withScene';\nimport configurations from '../../configurations.json';\nimport './react-precision-slider.css';\nimport './UniformPanel.css';\n\nclass UniformPanel extends Component {\n  createTabPane(group, uniforms, uniformConfigurations, key) {\n    // TODO This could use a clean up, names are confusing\n    const paneUniforms = {};\n    const paneUniformValues = {};\n    group.uniforms.forEach(uniformKey => {\n      paneUniforms[uniformKey] = uniformConfigurations[uniformKey];\n      paneUniformValues[uniformKey] = uniforms[uniformKey];\n    });\n\n    return {\n      menuItem: { key, icon: group.icon || null, content: group.label },\n      render: () => (\n        <UniformPane\n          uniforms={paneUniforms}\n          uniformValues={paneUniformValues}\n          onChange={(value, key) => this.props.updateUniform(key, value)}\n        />\n      )\n    };\n  }\n\n  render() {\n    const { shader, uniforms } = this.props;\n    if (!configurations[shader]) {\n      return null;\n    }\n\n    // Here we need also the uniform configuration (with labels, defaults, etc.)\n    const { groups = [], uniforms: uniformConfigurations } = configurations[\n      shader\n    ];\n\n    // Divide all uniforms into groups and create tab for each\n    let groupedUniforms = [];\n    const panes = groups.map((group, index) => {\n      groupedUniforms = groupedUniforms.concat(group.uniforms);\n      return this.createTabPane(group, uniforms, uniformConfigurations, index);\n    });\n\n    // Create one more tab for uniforms that didn't have any tab assigned\n    const restUniformsKeys = Object.keys(uniforms).filter(\n      u => !groupedUniforms.includes(u)\n    );\n    const restGroup = {\n      icon: 'ellipsis horizontal',\n      uniforms: restUniformsKeys\n    };\n    panes.push(\n      this.createTabPane(restGroup, uniforms, uniformConfigurations, 99)\n    );\n\n    return (\n      <aside className=\"panel\">\n        <Segment>\n          <h2>Settings</h2>\n          <Tab panes={panes} />\n        </Segment>\n      </aside>\n    );\n  }\n}\n\nexport default withScene(UniformPanel);\n","import React, { Component } from 'react';\nimport { Dimmer, Loader } from 'semantic-ui-react';\nimport Scene from './components/Scene/Scene';\nimport CameraControl from './components/Controls/CameraControl';\nimport Fractal from '../../components/Fractal/Fractal';\nimport UniformPanel from './components/UniformPanel/UniformPanel';\nimport withScene from './hocs/withScene';\n\nclass Editor extends Component {\n  onDraw = async () => {\n    const { download } = this.props;\n    // After each draw, initiate a download if appropriate\n    if (download === true) {\n      const capture = await this.surfaceRef.captureAsBlob('image/png');\n      const url = window.URL.createObjectURL(capture);\n      window.location.replace(url);\n      // window.URL.revokeObjectURL(url);\n      // window.close()\n    }\n  };\n  onSurfaceRef = ref => {\n    this.surfaceRef = ref;\n  };\n  render() {\n    const { download } = this.props;\n    return (\n      <div>\n        <UniformPanel />\n        <Scene>\n          <CameraControl>\n            <Fractal onSurfaceRef={this.onSurfaceRef} onDraw={this.onDraw} />\n          </CameraControl>\n        </Scene>\n        <Dimmer active={download} page onClickOutside={() => window.close()}>\n          <Loader indeterminate size=\"big\">\n            Rendering image for download...\n          </Loader>\n        </Dimmer>\n      </div>\n    );\n  }\n}\n\nexport default withScene(Editor);\n","import React, { Component } from 'react';\nimport { Dropdown } from 'semantic-ui-react';\nimport withScene from '../../hocs/withScene';\nimport TextIcon from '../../../../components/TextIcon/TextIcon';\nimport configurations from '../../configurations.json';\n\n/*\n  TODO Currently this is just a dropdown menu of all possible shaders\n  but the goal in the future is that this component could be used to:\n  First; Select main shader (e.g. 2D or 3D)\n  Second; Select secondary shader (e.g. Mandelbrot)\n  Lastly; Select optional shaders like bloom or blur (and the order their applied in)\n*/\nclass ComposingShader extends Component {\n  render() {\n    return (\n      <Dropdown\n        trigger={<TextIcon icon=\"eye\" title=\"Shader\" />}\n        icon=\"dropdown\"\n      >\n        <Dropdown.Menu>\n          {Object.keys(configurations).map(key => {\n            const conf = configurations[key];\n            return (\n              <Dropdown.Item\n                key={`shader-${key}`}\n                icon={conf.icon}\n                text={key}\n                value={conf.shader}\n                onClick={() => this.props.switchShader(key)}\n              />\n            );\n          })}\n        </Dropdown.Menu>\n      </Dropdown>\n    );\n  }\n}\n\nexport default withScene(ComposingShader);\n","import React, { Component } from 'react';\nimport withScene from '../../hocs/withScene';\nimport TextIcon from '../../../../components/TextIcon/TextIcon';\nimport { getUniformType } from '../../utils/uniforms';\nimport configurations from '../../configurations.json';\n\nclass RandomizeUniforms extends Component {\n  randomizeUniforms() {\n    const { shader } = this.props;\n    const { randomizable, uniforms } = configurations[shader];\n    const randomUniforms = {};\n\n    // Randomize a value for each whitelisted uniforms based on it's type and given min/max\n    Object.keys(uniforms).forEach(key => {\n      const conf = uniforms[key];\n      if (!Array.isArray(randomizable) || !randomizable.includes(key)) {\n        randomUniforms[key] = conf.defaultValue;\n        return;\n      }\n      const uniformType = getUniformType(conf.defaultValue);\n      switch (uniformType) {\n        case 'int':\n          randomUniforms[key] = Math.round(\n            Math.random() * (conf.max - conf.min - 1) + conf.min\n          );\n          return;\n        case 'float':\n          randomUniforms[key] =\n            Math.random() * (conf.max - conf.min - 1) + conf.min;\n          return;\n        case 'bool':\n          randomUniforms[key] = Math.random() >= 0.5;\n          return;\n        case 'vec2':\n          // TODO Not sure if this would work correctly for all the vec2 uniforms\n          randomUniforms[key] = conf.defaultValue.map(v => Math.random());\n          return;\n        default:\n          console.warn(\n            'Unknown uniform, add handling',\n            uniformType,\n            conf.defaultValue\n          );\n          randomUniforms[key] = conf.defaultValue;\n          return;\n      }\n    });\n\n    // Update the scene with new randomized uniforms\n    this.props.updateUniforms(randomUniforms);\n  }\n\n  resetUniforms() {\n    const { shader } = this.props;\n    const { uniforms } = configurations[shader];\n    const uniformDefaults = {};\n    Object.keys(uniforms).forEach(key => {\n      const conf = uniforms[key];\n      uniformDefaults[key] = conf.defaultValue;\n    });\n\n    // Update the scene with default uniforms to reset\n    this.props.updateUniforms(uniformDefaults);\n  }\n  render() {\n    return (\n      <React.Fragment>\n        <TextIcon\n          icon=\"random\"\n          title=\"Randomize\"\n          onClick={() => this.randomizeUniforms()}\n        />\n        <TextIcon\n          icon=\"refresh\"\n          title=\"Reset\"\n          size=\"small\"\n          onClick={() => this.resetUniforms()}\n        />\n      </React.Fragment>\n    );\n  }\n}\n\nexport default withScene(RandomizeUniforms);\n","import React, { Component } from 'react';\nimport { stringify } from 'qs';\nimport TextIcon from '../../../../components/TextIcon/TextIcon';\nimport withScene from '../../hocs/withScene';\nimport { WithSceneProps } from '../../../../types/index';\n\nclass DownloadButton extends Component<WithSceneProps> {\n  onDownload = () => {\n    const { uniforms, shader } = this.props;\n\n    const queryString = stringify(\n      Object.assign({}, { shader }, uniforms, { download: true })\n    );\n\n    window.open(\n      `${window.location.origin}${process.env.PUBLIC_URL}/?${queryString}`,\n      '_blank'\n    );\n  };\n\n  render() {\n    return (\n      <TextIcon\n        icon=\"download\"\n        size=\"big\"\n        title=\"Download\"\n        onClick={this.onDownload}\n      />\n    );\n  }\n}\n\nexport default withScene(DownloadButton);\n","import { Uniforms, Scene } from '../types/';\nimport Scenes from '../pages/Scenes/Scenes';\n\nexport function storeScene(\n  presetName: string,\n  shaderName: string,\n  uniforms: Uniforms\n): void {\n  const scene = { name: presetName, shader: shaderName, uniforms } as Scene;\n\n  const scenes: Scene[] = getScenes();\n  scenes.push(scene);\n\n  localStorage.setItem('presets', JSON.stringify(scenes));\n}\n\nexport function removeScene(scene: Scene): boolean {\n  const scenes: Scene[] = getScenes();\n  const newScenes = scenes.filter(sc => sc.name !== scene.name);\n\n  localStorage.setItem('presets', JSON.stringify(newScenes));\n\n  return scenes.length !== newScenes.length;\n}\n\nexport function getScenes(): Scene[] {\n  const scenes: Scene[] = JSON.parse(localStorage.getItem('presets') || '[]');\n  return scenes;\n}\n\nexport default {\n  storeScene,\n  removeScene,\n  getScenes\n};\n","import React, { Component } from 'react';\nimport { Confirm, Modal, Input, InputOnChangeData } from 'semantic-ui-react';\nimport TextIcon from '../../../../components/TextIcon/TextIcon';\nimport withScene from '../../hocs/withScene';\nimport { WithSceneProps } from '../../../../types/index';\nimport storage from '../../../../utils/storage';\n\ninterface IState {\n  dialogOpen: boolean;\n  inputValue: string;\n}\n\nclass SaveButton extends Component<WithSceneProps, IState> {\n  state = {\n    dialogOpen: false,\n    inputValue: ''\n  };\n\n  handleConfirm = () => {\n    const { uniforms, shader } = this.props;\n    const { inputValue } = this.state;\n\n    storage.storeScene(inputValue, shader, uniforms);\n    this.setState({ dialogOpen: false });\n  };\n\n  handleInput = (event: React.SyntheticEvent, data: InputOnChangeData) => {\n    const { value } = data;\n    this.setState({ inputValue: value });\n  };\n\n  render() {\n    const { dialogOpen } = this.state;\n    return (\n      <React.Fragment>\n        <Confirm\n          open={dialogOpen}\n          header=\"Save scene as a preset\"\n          content={\n            <Modal.Content>\n              <Modal.Description>\n                <p>\n                  Preset will be stored to your browser (local storage) and it\n                  will be accessible from \"scenes\" menu.\n                </p>\n                <Input placeholder=\"Preset name\" onChange={this.handleInput} />\n              </Modal.Description>\n            </Modal.Content>\n          }\n          onCancel={() => this.setState({ dialogOpen: false })}\n          onConfirm={this.handleConfirm}\n        />\n        <TextIcon\n          icon=\"save\"\n          size=\"big\"\n          title=\"Save\"\n          onClick={() => this.setState({ dialogOpen: true })}\n        />\n      </React.Fragment>\n    );\n  }\n}\n\nexport default withScene(SaveButton);\n","import React, { Component } from 'react';\nimport { Menu } from 'semantic-ui-react';\nimport ShaderComposer from './components/ShaderComposer/ShaderComposer';\nimport RandomizeUniforms from './components/RandomizeUniforms/RandomizeUniforms';\nimport DownloadButton from './components/DownloadButton/DownloadButton';\nimport SaveButton from './components/SaveButton/SaveButton';\n\nclass EditorNavbar extends Component {\n  render() {\n    const dividerStyle = {\n      borderLeft: '1px solid #DDD',\n      borderRight: '1px solid #DDD',\n      borderRadius: 0\n    };\n    return (\n      <Menu secondary>\n        <Menu.Item>\n          <ShaderComposer />\n        </Menu.Item>\n        <Menu.Item style={{ maxWidth: '30em' }}>\n          <ul>\n            <li>\n              Use different shaders and randomize to quickly make different\n              scenes\n            </li>\n            <li>Drag the image to move the camera</li>\n            <li>Use the settings on the right to fine tune the scene</li>\n          </ul>\n        </Menu.Item>\n        <Menu.Item style={dividerStyle}>\n          <RandomizeUniforms />\n        </Menu.Item>\n        <Menu.Item>\n          <SaveButton />\n          <DownloadButton />\n        </Menu.Item>\n      </Menu>\n    );\n  }\n}\n\nexport default EditorNavbar;\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Button, Card, Container } from 'semantic-ui-react';\nimport { stringify } from 'qs';\nimport Fractal from '../../components/Fractal/Fractal';\nimport { Scene } from '../../types';\nimport storage from '../../utils/storage';\nimport presets from '../../presets.json';\n\nclass Scenes extends Component {\n  handleRemove = (scene: Scene) => () => {\n    const updated = storage.removeScene(scene);\n    if (updated) {\n      this.forceUpdate();\n    }\n  };\n  render() {\n    const scenes = storage.getScenes();\n\n    return (\n      <Container>\n        <h1>User scenes</h1>\n        <Card.Group>\n          {scenes.map((scene, index) => {\n            const params = stringify(\n              Object.assign({}, { shader: scene.shader, ...scene.uniforms })\n            );\n            return (\n              <Card key={index}>\n                <Fractal width={200} height={150} quality={1} {...scene} />\n                <Card.Content>\n                  <Card.Header>{scene.name}</Card.Header>\n                  <Card.Description>Shader: {scene.shader}</Card.Description>\n                </Card.Content>\n                <Card.Content extra>\n                  <div className=\"ui two buttons\">\n                    <Button color=\"green\" as={Link} to={`/?${params}`}>\n                      Edit\n                    </Button>\n                    <Button\n                      basic\n                      color=\"red\"\n                      onClick={this.handleRemove(scene)}\n                    >\n                      Remove\n                    </Button>\n                  </div>\n                </Card.Content>\n              </Card>\n            );\n          })}\n        </Card.Group>\n        <h1>Preset scenes</h1>\n        <Card.Group>\n          {presets.map((p, index) => {\n            const params = stringify(\n              Object.assign({}, { shader: p.shader, ...p.uniforms })\n            );\n            return (\n              <Link key={index} to={`${process.env.PUBLIC_URL}/?${params}`}>\n                <Card>\n                  <Fractal width={200} height={150} quality={3} {...p} />\n                  <Card.Content>\n                    <Card.Header>{p.name}</Card.Header>\n                    <Card.Description>Shader: {p.shader}</Card.Description>\n                  </Card.Content>\n                </Card>\n              </Link>\n            );\n          })}\n        </Card.Group>\n      </Container>\n    );\n  }\n}\n\nexport default Scenes;\n","import React, { Component } from 'react';\n\nclass Renders extends Component {\n  render() {\n    return (\n      <section>\n        <h1>Renders will be here</h1>\n      </section>\n    );\n  }\n}\n\nexport default Renders;\n","import React, { Component } from 'react';\nimport { Icon, Menu } from 'semantic-ui-react';\n\nclass RendersNavbar extends Component {\n  render() {\n    return (\n      <Menu secondary>\n        <Menu.Item>\n          <Icon name=\"image\" />\n          TODO\n        </Menu.Item>\n      </Menu>\n    );\n  }\n}\n\nexport default RendersNavbar;\n","import React from 'react';\nimport Editor from './pages/Editor/Editor';\nimport EditorNav from './pages/Editor/EditorNav';\nimport Scenes from './pages/Scenes/Scenes';\nimport Renders from './pages/Renders/Renders';\nimport RendersNav from './pages/Renders/RendersNav';\n\nconst routes = [\n  {\n    path: process.env.PUBLIC_URL + '/',\n    exact: true,\n    navbar: () => <EditorNav />,\n    main: () => <Editor />\n  },\n  {\n    path: process.env.PUBLIC_URL + '/scenes',\n    navbar: null,\n    main: () => <Scenes />\n  },\n  {\n    path: process.env.PUBLIC_URL + '/renders',\n    navbar: () => <RendersNav />,\n    main: () => <Renders />\n  }\n];\n\nexport default routes;\n","import React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { Dropdown } from 'semantic-ui-react';\nimport TextIcon from '../../components/TextIcon/TextIcon';\nimport routes from '../../routes';\n\nconst DROPDOWN_MENU = [\n  { icon: 'edit', title: 'Editor', to: process.env.PUBLIC_URL + '/' },\n  { icon: 'world', title: 'Scenes', to: process.env.PUBLIC_URL + '/scenes' }\n  // { icon: 'image', title: 'Renders', to: '/renders' }\n];\n\nconst PageSelector = ({ location, history }) => {\n  const currentIndex = routes.findIndex(r => r.path === location.pathname);\n  const activeMenu = DROPDOWN_MENU[currentIndex];\n  return (\n    <Dropdown\n      labeled\n      trigger={<TextIcon icon={activeMenu.icon} title={activeMenu.title} />}\n      icon=\"dropdown\"\n    >\n      <Dropdown.Menu>\n        {DROPDOWN_MENU.map(item => (\n          <Dropdown.Item\n            key={`link-${item.to}`}\n            active={item.to === activeMenu.to}\n            disabled={item.to === activeMenu.to}\n            icon={item.icon}\n            text={item.title}\n            onClick={() => history.push(item.to)}\n          />\n        ))}\n      </Dropdown.Menu>\n    </Dropdown>\n  );\n};\n\nexport default withRouter(PageSelector);\n","import React, { Component } from 'react';\nimport { Route } from 'react-router-dom';\nimport { Icon, Menu, Message, List } from 'semantic-ui-react';\nimport PageSelector from './PageSelector';\nimport routes from '../../routes';\nimport './Navbar.css';\n\nclass Navbar extends Component {\n  state = {\n    visible: true\n  };\n  onDismiss = () => {\n    this.setState({ visible: false });\n    localStorage.setItem('hideNotif', false);\n  };\n  render() {\n    const hideNotif =\n      this.state.visible === false ||\n      localStorage.getItem('hideNotif') === 'false';\n\n    return (\n      <nav className=\"navbar\">\n        <Menu>\n          <Menu.Item>\n            <PageSelector />\n          </Menu.Item>\n          {routes.map((route, index) => (\n            <Route\n              key={index}\n              exact={route.exact}\n              path={route.path}\n              component={route.navbar}\n            />\n          ))}\n          <Menu.Item>\n            <List>\n              <List.Item>\n                <small>Early development version</small>\n                <br />\n                <small>2020-10-12</small>\n              </List.Item>\n              <List.Item>\n                <span>\n                  <Icon name=\"github\" />\n                  <a href=\"https://github.com/Hellenic/fractalysis\">Github</a>\n                </span>\n              </List.Item>\n            </List>\n          </Menu.Item>\n        </Menu>\n        {!hideNotif && (\n          <Message\n            onDismiss={this.onDismiss}\n            style={{ zIndex: 50 }}\n            color=\"blue\"\n            header=\"Welcome to Fractalysis!\"\n            content={`\n                Fractalysis is a fractal flame editor, which allows you to create fancy generated images.\n                This is still early version and being developed, but you can still already play around with it.\n                Read more on Github.\n              `}\n          />\n        )}\n      </nav>\n    );\n  }\n}\n\nexport default Navbar;\n","import React, { Component } from 'react';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport Navbar from './pages/Navbar/Navbar';\nimport routes from './routes';\n\nclass App extends Component {\n  render() {\n    return (\n      <Router>\n        <div className=\"app\">\n          <Navbar />\n          {routes.map((route, index) => (\n            <Route\n              key={index}\n              exact={route.exact}\n              path={route.path}\n              component={route.main}\n            />\n          ))}\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n// import registerServiceWorker from './registerServiceWorker';\n\nReactDOM.render(<App />, document.getElementById('root') as HTMLElement);\n// registerServiceWorker();\n"],"sourceRoot":""}