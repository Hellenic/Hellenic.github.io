{"version":3,"sources":["components/TextIcon/TextIcon.tsx","utils/query-parser.js","constants.ts","pages/Editor/utils/uniforms.js","pages/Editor/components/ShaderUniforms/ShaderUniforms.js","components/Loader/Loader.js","components/Fractal/Fractal.tsx","utils/colors.js","pages/Editor/components/UniformPanel/UniformControl.js","pages/Editor/components/UniformPanel/UniformPane.js","pages/Editor/components/UniformPanel/UniformPanel.js","pages/Editor/Editor.js","pages/Editor/components/ShaderComposer/ShaderComposer.js","pages/Editor/components/RandomizeUniforms/RandomizeUniforms.js","hocs/withUniforms.tsx","pages/Editor/components/DownloadButton/DownloadButton.tsx","utils/storage.ts","pages/Editor/components/SaveButton/SaveButton.tsx","pages/Editor/EditorNav.js","pages/Scenes/Scenes.tsx","pages/Scenes/ScenesNav.js","pages/Renders/Renders.js","pages/Renders/RendersNav.js","routes.js","pages/Navbar/PageSelector.js","pages/Navbar/Navbar.js","App.js","index.tsx"],"names":["TextIcon","props","to","react_default","a","createElement","Link","Icon","name","icon","size","title","style","cursor","border","backgroundColor","onClick","defaultProps","parser","query","queryObject","parse","queryType","parseObject","constants","DEFAULT_SHADER","isInt","v","test","concat","getUniformType","value","Array","isArray","console","warn","getUniformDefaultValues","shaderName","uniforms","configurations","Object","keys","reduce","acc","key","config","defaultValue","WIDTH","window","innerWidth","HEIGHT","innerHeight","ShaderUniforms","this","location","search","substring","_query$shader","shader","Constants","rest","download","objectWithoutProperties","uniformValues","assign","length","children","childProps","width","height","childrenWithProps","React","Children","map","child","cloneElement","Component","withRouter","Loader","className","visible","Fractal","state","undefined","shaders","shaderKey","setState","fetch","process","cache","response","text","fragmentShader","Shaders","create","defineProperty","frag","createdShaders","newShaders","loadShader","prevProps","_this$props","quality","shaderDef","src_components_Loader_Loader","getShortName","qlty","Math","min","max","outputSize","gl_react_dom_lib","webglContextAttributes","preserveDrawingBuffer","ref","onSurfaceRef","gl_react_lib","onDraw","floatToHex","values","_values","slicedToArray","r","g","hex","toString","slice","UniformControl","label","onChange","inputType","uniformType","type","getInputTypeForUniform","react_precision_slider_lib_default","includes","checked","e","charAt","bigint","parseInt","hexToFloat","target","UniformPane","Tab","Pane","UniformPanel_UniformControl","UniformPanel","currentQuery","queryString","stringify","history","push","urlUniforms","forEach","uniformValue","group","opts","_this","paneUniforms","paneUniformValues","uniformKey","menuItem","content","render","UniformPanel_UniformPane","handleChange","_this2","_parse","_parse$shader","shaderId","_configurations$shade","_configurations$shade2","groups","_configurations$shade3","getValuesForUniforms","objectSpread","groupedUniforms","panes","index","createTabPane","restGroup","filter","u","Segment","Editor","_callee","_query$download","capture","url","regenerator_default","wrap","_context","prev","next","surfaceRef","captureAsBlob","sent","URL","createObjectURL","replace","stop","_query$download2","components_UniformPanel_UniformPanel","components_ShaderUniforms_ShaderUniforms","components_Fractal_Fractal","Dimmer","active","page","onClickOutside","close","Loader_Loader","indeterminate","ComposingShader","Dropdown","trigger","components_TextIcon_TextIcon","Menu","conf","Item","_ref","switchShader","RandomizeUniforms","randomizable","randomUniforms","round","random","_this$props2","_parse2","_parse2$shader","uniformDefaults","Fragment","randomizeUniforms","resetUniforms","withUniforms","WrappedComponent","defaultValues","onDownload","open","origin","getScenes","JSON","localStorage","getItem","storage","storeScene","presetName","scene","scenes","setItem","removeScene","newScenes","sc","dialogOpen","inputValue","handleConfirm","handleInput","event","data","Confirm","header","Modal","Content","Description","Input","placeholder","onCancel","onConfirm","EditorNavbar","secondary","ShaderComposer","disabled","borderLeft","borderRight","borderRadius","components_RandomizeUniforms_RandomizeUniforms","components_SaveButton_SaveButton","components_DownloadButton_DownloadButton","Scenes","handleRemove","forceUpdate","Container","Card","Group","params","Header","extra","Button","color","as","basic","presets","p","ScenesNavbar","Renders","RendersNavbar","routes","path","exact","navbar","EditorNav","main","pages_Editor_Editor","ScenesNav","pages_Scenes_Scenes","RendersNav","pages_Renders_Renders","DROPDOWN_MENU","currentIndex","findIndex","pathname","activeMenu","labeled","item","Navbar","onDismiss","hideNotif","Navbar_PageSelector","route","Route","component","List","href","Message","zIndex","App","BrowserRouter","pages_Navbar_Navbar","ReactDOM","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.7c78a66a.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Icon } from 'semantic-ui-react';\n\ninterface IProps {\n  to?: string;\n  icon: any;\n  title: string;\n  size: any;\n  onClick: () => React.MouseEvent | void;\n}\n\nconst TextIcon = (props: IProps) => {\n  if (!props.to) {\n    return (\n      <button\n        style={{ cursor: 'pointer', border: 'none', backgroundColor: 'white' }}\n        onClick={props.onClick}\n      >\n        <Icon name={props.icon} size={props.size} />\n        <span>{props.title}</span>\n      </button>\n    );\n  }\n  return (\n    <Link to={props.to}>\n      <Icon name={props.icon} size={props.size} />\n      <span>{props.title}</span>\n    </Link>\n  );\n};\n\nTextIcon.propTypes = {\n  to: PropTypes.string,\n  icon: PropTypes.string,\n  title: PropTypes.string,\n  size: PropTypes.string\n};\n\nTextIcon.defaultProps = {\n  icon: 'sticky note outline',\n  title: '',\n  size: 'huge'\n};\n\nexport default TextIcon;\n","import { parse } from 'qs';\nimport queryType from 'query-types';\n\nconst parser = query => {\n  const queryObject = parse(query);\n  return queryType.parseObject(queryObject);\n};\n\nexport default parser;\n","const DEFAULT_SHADER = 'Mandelbrot';\n\nexport default {\n  DEFAULT_SHADER\n};\n","import configurations from '../configurations.json';\n\nconst isInt = v => /^-?[0-9]+$/.test(`${v}`);\n\n// TODO Is there a library already for this?\nexport function getUniformType(value) {\n  switch (typeof value) {\n    case 'boolean':\n      return 'bool';\n    case 'number':\n      return isInt(value) ? 'int' : 'float';\n    case 'object':\n      return Array.isArray(value) ? 'vec2' : null;\n    default:\n      console.warn(\n        `Unsupported value type for value: ${value}. Add a new type configuration.`\n      );\n      return null;\n  }\n}\n\nexport function getInputTypeForUniform(type) {\n  switch (type) {\n    case 'int':\n    case 'float':\n      return 'range';\n    case 'bool':\n      return 'checkbox';\n    default:\n      return null;\n  }\n}\n\nexport function getUniformDefaultValues(shaderName) {\n  // Pull default uniform values from the configurations\n  const { uniforms } = configurations[shaderName];\n\n  // Collect the default values from the uniforms configs\n  return Object.keys(uniforms).reduce((acc, key) => {\n    const config = uniforms[key];\n    acc[key] = config.defaultValue;\n    return acc;\n  }, {});\n}\n","import PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport { withRouter } from 'react-router';\nimport parse from '../../../../utils/query-parser';\nimport Constants from '../../../../constants';\nimport { getUniformDefaultValues } from '../../utils/uniforms';\n\nconst WIDTH = window.innerWidth;\nconst HEIGHT = window.innerHeight;\n\nclass ShaderUniforms extends Component {\n  static propTypes = {\n    children: PropTypes.node.isRequired\n  };\n\n  render() {\n    const query = parse(this.props.location.search.substring(1));\n    const { shader = Constants.DEFAULT_SHADER, download, ...rest } = query;\n\n    // Use the values from the URL or pull the defaults from storage\n    let uniformValues = Object.assign({}, rest);\n    if (Object.keys(uniformValues).length === 0) {\n      uniformValues = getUniformDefaultValues(shader);\n    }\n    // If there are no uniform values, we're still loading\n    if (Object.keys(uniformValues).length === 0) {\n      return <h1>Loading...</h1>;\n    }\n\n    // Pass the props to children and render\n    const { children } = this.props;\n    const childProps = {\n      width: WIDTH,\n      height: HEIGHT,\n      uniforms: uniformValues,\n      shader\n    };\n    const childrenWithProps = React.Children.map(children, child =>\n      React.cloneElement(child, childProps)\n    );\n    return <div>{childrenWithProps}</div>;\n  }\n}\n\nexport default withRouter(ShaderUniforms);\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport './Loader.css';\n\nconst Loader = props => <div className=\"lds-dual-ring\" />;\n\nLoader.propTypes = {\n  visible: PropTypes.bool\n};\n\nLoader.defaultProps = {\n  visible: true\n};\n\nexport default Loader;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Node, Shaders, ShadersSheet } from 'gl-react';\nimport { Surface } from 'gl-react-dom';\nimport Loader from '../Loader/Loader';\n\ninterface IProps {\n  width: number;\n  height: number;\n  uniforms: object;\n  shader: string;\n  quality: number;\n  onSurfaceRef?: () => void;\n  onDraw?: () => void;\n}\n\ninterface IState {\n  shader?: string;\n  shaders: ShadersSheet;\n}\n\nclass Fractal extends Component<IProps, IState> {\n  static propTypes = {\n    width: PropTypes.number,\n    height: PropTypes.number,\n    uniforms: PropTypes.object,\n    shader: PropTypes.string,\n    quality: PropTypes.number,\n    onSurfaceRef: PropTypes.func,\n    onDraw: PropTypes.func\n  };\n  static defaultProps = {\n    quality: 1,\n    onDraw: () => {}\n  };\n  state = {\n    shader: undefined,\n    shaders: {} as ShadersSheet\n  };\n\n  async loadShader(shaderKey: string) {\n    const { shaders } = this.state;\n    // If shader has been loaded already for the given key,\n    // set the key as current and do not reload\n    if (shaderKey in shaders) {\n      this.setState({ shader: shaderKey });\n      return;\n    }\n\n    // Load the fragment shader, compile it and set it as current\n    const response = await fetch(\n      `${process.env.PUBLIC_URL}/shaders/${shaderKey}.glsl`,\n      {\n        cache: 'no-cache'\n      }\n    );\n    const fragmentShader = await response.text();\n\n    const createdShaders = await Shaders.create({\n      [shaderKey]: {\n        frag: fragmentShader\n      }\n    });\n    const newShaders = Object.assign({}, shaders, createdShaders);\n    this.setState({ shader: shaderKey, shaders: newShaders });\n  }\n\n  async componentDidMount() {\n    const { shader } = this.props;\n    await this.loadShader(shader);\n  }\n\n  async componentDidUpdate(prevProps: IProps) {\n    if (this.props.shader !== prevProps.shader) {\n      await this.loadShader(this.props.shader);\n    }\n  }\n\n  render() {\n    const { width, height, uniforms, quality, shader } = this.props;\n    const { shaders } = this.state;\n    const shaderDef = shaders[shader];\n\n    if (!shaderDef) {\n      return <Loader />;\n    }\n\n    // TODO Would be nice to display different states: Loading, compiling, rendering\n\n    // If shaderID is not present yet, shader might still be compiling\n    // or if page was refreshed, ID is there but it anyway might not be compiled yet\n    const shaderExists = Shaders.getShortName(shaderDef) !== '???';\n    if (!shaderExists) {\n      return <Loader />;\n    }\n\n    // If the shader changes, we shouldn't render anything before new shader has been loaded & compiled\n    // Otherwise we could end up briefly rendering previous shader with new uniforms\n    if (this.props.shader !== this.state.shader) {\n      return <Loader />;\n    }\n\n    // Append some constants to the uniforms\n    const qlty = Math.min(Math.max(quality, 1), 5);\n    const uniformValues = Object.assign({}, uniforms, {\n      size: [width, height],\n      outputSize: [width / qlty, height / qlty]\n    });\n\n    return (\n      <Surface\n        width={width}\n        height={height}\n        webglContextAttributes={{ preserveDrawingBuffer: true }}\n        ref={this.props.onSurfaceRef}\n      >\n        <Node\n          shader={shaderDef}\n          uniforms={uniformValues}\n          onDraw={this.props.onDraw}\n        />\n      </Surface>\n    );\n  }\n}\n\nexport default Fractal;\n","export function hexToFloat(value) {\n  let hex = value;\n  if (hex.charAt && hex.charAt(0) === '#') {\n    hex = hex.substring(1);\n  }\n\n  var bigint = parseInt(hex, 16);\n  var r = (bigint >> 16) & 255;\n  var g = (bigint >> 8) & 255;\n  var b = bigint & 255;\n\n  return [r / 255, g / 255, b / 255];\n}\n\n/* eslint-disable */\nexport function floatToHex(values) {\n  const [ r, g, b ] = values;\n  const red = r * 255;\n  const green = g * 255;\n  const blue = b * 255;\n  const hex = ((blue | green << 8 | red << 16) | 1 << 24).toString(16).slice(1);\n  return `#${hex}`;\n}\n","import PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport Slider from 'react-precision-slider';\nimport { getUniformType, getInputTypeForUniform } from '../../utils/uniforms';\nimport { floatToHex, hexToFloat } from '../../../../utils/colors';\n\nclass UniformControl extends Component {\n  static propTypes = {\n    label: PropTypes.string,\n    value: PropTypes.any,\n    inputType: PropTypes.string,\n    onChange: PropTypes.func.isRequired\n  };\n  render() {\n    const {\n      label,\n      value,\n      defaultValue,\n      onChange,\n      inputType,\n      ...rest\n    } = this.props;\n    const uniformType = getUniformType(value);\n    let type = inputType;\n    if (!type) {\n      type = getInputTypeForUniform(uniformType);\n    }\n\n    if (type === 'range') {\n      return (\n        <div>\n          <span>{label}</span>\n          <Slider value={value} onChange={v => onChange(v)} {...rest} />\n        </div>\n      );\n    }\n    // Default input types\n    else if (['checkbox'].includes(type)) {\n      return (\n        <div>\n          <strong>{label}</strong>\n          <input\n            type={type}\n            checked={value}\n            {...rest}\n            onChange={e => onChange(!value)}\n          />\n        </div>\n      );\n    } else if (['color'].includes(inputType)) {\n      return (\n        <div>\n          <strong>{label}</strong>\n          <input\n            type={type}\n            value={floatToHex(value)}\n            {...rest}\n            onChange={e => onChange(hexToFloat(e.target.value))}\n          />\n        </div>\n      );\n    }\n\n    // TODO Support for rest of uniform types\n\n    return <span>Unsupported uniform type: {uniformType}</span>;\n  }\n}\n\nexport default UniformControl;\n","import React, { Component } from 'react';\nimport { Tab } from 'semantic-ui-react';\nimport UniformControl from './UniformControl';\n\nclass UniformPane extends Component {\n  render() {\n    const { uniforms, uniformValues, onChange } = this.props;\n\n    return (\n      <Tab.Pane>\n        <section>\n          {Object.keys(uniforms).map(key => (\n            <UniformControl\n              key={`uniform-${key}`}\n              value={uniformValues[key]}\n              {...uniforms[key]}\n              onChange={v => onChange(v, key)}\n            />\n          ))}\n        </section>\n      </Tab.Pane>\n    );\n  }\n}\n\nexport default UniformPane;\n","import React, { Component } from 'react';\nimport { withRouter } from 'react-router';\nimport { Segment, Tab } from 'semantic-ui-react';\nimport { stringify } from 'qs';\nimport parse from '../../../../utils/query-parser';\nimport UniformPane from './UniformPane';\nimport Constants from '../../../../constants';\nimport configurations from '../../configurations.json';\nimport './react-precision-slider.css';\nimport './UniformPanel.css';\n\nclass UniformPanel extends Component {\n  handleChange(value, name, currentQuery) {\n    // Push the uniform key-value into the URL\n    const queryString = stringify(\n      Object.assign({}, currentQuery, { [name]: value })\n    );\n    this.props.history.push(`?${queryString}`);\n  }\n\n  getValuesForUniforms(uniforms, urlUniforms) {\n    const uniformValues = {};\n    Object.keys(uniforms).forEach(key => {\n      const defaultValue = uniforms[key].defaultValue;\n      const uniformValue = key in urlUniforms ? urlUniforms[key] : defaultValue;\n      uniformValues[key] = uniformValue;\n    });\n    return uniformValues;\n  }\n\n  createTabPane(group, uniforms, uniformValues, opts, key) {\n    const paneUniforms = {};\n    const paneUniformValues = {};\n    group.uniforms.forEach(uniformKey => {\n      paneUniforms[uniformKey] = uniforms[uniformKey];\n      paneUniformValues[uniformKey] = uniformValues[uniformKey];\n    });\n\n    return {\n      menuItem: { key, icon: group.icon || null, content: group.label },\n      render: () => (\n        <UniformPane\n          uniforms={paneUniforms}\n          uniformValues={paneUniformValues}\n          onChange={(value, key) => this.handleChange(value, key, opts)}\n        />\n      )\n    };\n  }\n\n  render() {\n    const { location } = this.props;\n    const {\n      shader = Constants.DEFAULT_SHADER,\n      shaderId,\n      ...urlUniforms\n    } = parse(location.search.substring(1));\n    if (!shader || !configurations[shader]) {\n      return null;\n    }\n\n    const { groups = [], uniforms = {} } = configurations[shader];\n    // Read uniforms values from the URL or default from configurations\n    const uniformValues = this.getValuesForUniforms(uniforms, urlUniforms);\n    // Create uniform object to be used when a value changes\n    const opts = { shader, shaderId, ...uniformValues };\n\n    // Divide all uniforms into groups\n    let groupedUniforms = [];\n    const panes = groups.map((group, index) => {\n      groupedUniforms = groupedUniforms.concat(group.uniforms);\n      return this.createTabPane(group, uniforms, uniformValues, opts, index);\n    });\n    // Create one more tab for uniforms that didn't have any tab assigned\n    const restUniformsKeys = Object.keys(uniforms).filter(\n      u => !groupedUniforms.includes(u)\n    );\n    const restGroup = {\n      icon: 'ellipsis horizontal',\n      uniforms: restUniformsKeys\n    };\n    panes.push(\n      this.createTabPane(restGroup, uniforms, uniformValues, opts, 99)\n    );\n\n    return (\n      <aside className=\"panel\">\n        <Segment>\n          <h2>Settings</h2>\n          <Tab panes={panes} />\n        </Segment>\n      </aside>\n    );\n  }\n}\n\nexport default withRouter(UniformPanel);\n","import React, { Component } from 'react';\nimport { withRouter } from 'react-router';\nimport { Dimmer, Loader } from 'semantic-ui-react';\nimport ShaderUniforms from './components/ShaderUniforms/ShaderUniforms';\nimport Fractal from '../../components/Fractal/Fractal';\nimport UniformPanel from './components/UniformPanel/UniformPanel';\nimport parse from '../../utils/query-parser';\n\nclass Editor extends Component {\n  onDraw = async () => {\n    const query = parse(this.props.location.search.substring(1));\n    const { download = false } = query;\n    // After each draw, initiate a download if appropriate\n    if (download === true) {\n      const capture = await this.surfaceRef.captureAsBlob('image/png');\n      const url = window.URL.createObjectURL(capture);\n      window.location.replace(url);\n      // window.URL.revokeObjectURL(url);\n      // window.close()\n    }\n  };\n  onSurfaceRef = ref => {\n    this.surfaceRef = ref;\n  };\n  render() {\n    const query = parse(this.props.location.search.substring(1));\n    const { download = false } = query;\n    return (\n      <div>\n        <UniformPanel />\n        <ShaderUniforms>\n          <Fractal onSurfaceRef={this.onSurfaceRef} onDraw={this.onDraw} />\n        </ShaderUniforms>\n        <Dimmer active={download} page onClickOutside={() => window.close()}>\n          <Loader indeterminate size=\"big\">\n            Rendering image for download...\n          </Loader>\n        </Dimmer>\n      </div>\n    );\n  }\n}\n\nexport default withRouter(Editor);\n","import React, { Component } from 'react';\nimport { withRouter } from 'react-router';\nimport { Dropdown } from 'semantic-ui-react';\nimport { stringify } from 'qs';\nimport TextIcon from '../../../../components/TextIcon/TextIcon';\nimport configurations from '../../configurations.json';\n\n// TODO Currently this is just a dropdown menu of all possible shaders\n// but the goal in the future is that this component could be used to:\n// First; Select main shader (e.g. 2D or 3D)\n// Second; Select secondary shader (e.g. Mandelbrot)\n// Lastlyt; Select optional shaders like bloom or blur (and the order their applied in)\nclass ComposingShader extends Component {\n  state = {\n    shaderKey: null\n  };\n\n  switchShader(shaderKey) {\n    const { push } = this.props.history;\n    const queryString = stringify({ shader: shaderKey });\n    push(`?${queryString}`);\n  }\n\n  render() {\n    return (\n      <Dropdown\n        trigger={<TextIcon icon=\"eye\" title=\"Shader\" />}\n        icon=\"dropdown\"\n      >\n        <Dropdown.Menu>\n          {Object.keys(configurations).map(key => {\n            const conf = configurations[key];\n            return (\n              <Dropdown.Item\n                key={`shader-${key}`}\n                icon={conf.icon}\n                text={key}\n                value={conf.shader}\n                onClick={(e, { value }) => this.switchShader(key)}\n              />\n            );\n          })}\n        </Dropdown.Menu>\n      </Dropdown>\n    );\n  }\n}\n\nexport default withRouter(ComposingShader);\n","import React, { Component } from 'react';\nimport { withRouter } from 'react-router';\nimport { parse, stringify } from 'qs';\nimport TextIcon from '../../../../components/TextIcon/TextIcon';\nimport Constants from '../../../../constants';\nimport { getUniformType } from '../../utils/uniforms';\nimport configurations from '../../configurations.json';\n\nclass RandomizeUniforms extends Component {\n  randomizeUniforms() {\n    const { history, location } = this.props;\n    const { shader = Constants.DEFAULT_SHADER } = parse(\n      location.search.substring(1)\n    );\n    const { randomizable, uniforms } = configurations[shader];\n    const randomUniforms = {};\n\n    // Randomize a value for each whitelisted uniforms based on it's type and given min/max\n    Object.keys(uniforms).forEach(key => {\n      const conf = uniforms[key];\n      if (!Array.isArray(randomizable) || !randomizable.includes(key)) {\n        randomUniforms[key] = conf.defaultValue;\n        return;\n      }\n      const uniformType = getUniformType(conf.defaultValue);\n      switch (uniformType) {\n        case 'int':\n          randomUniforms[key] = Math.round(\n            Math.random() * (conf.max - conf.min - 1) + conf.min\n          );\n          return;\n        case 'float':\n          randomUniforms[key] =\n            Math.random() * (conf.max - conf.min - 1) + conf.min;\n          return;\n        case 'bool':\n          randomUniforms[key] = Math.random() >= 0.5;\n          return;\n        case 'vec2':\n          // TODO Not sure if this would work correctly for all the vec2 uniforms\n          randomUniforms[key] = conf.defaultValue.map(v => Math.random());\n          return;\n        default:\n          console.warn(\n            'Unknown uniform, add handling',\n            uniformType,\n            conf.defaultValue\n          );\n          randomUniforms[key] = conf.defaultValue;\n          return;\n      }\n    });\n\n    // Push the new randomized uniforms into the URL\n    const queryString = stringify(\n      Object.assign({}, { shader }, randomUniforms)\n    );\n    history.push(`?${queryString}`);\n  }\n  resetUniforms() {\n    const { history, location } = this.props;\n    const { shader = Constants.DEFAULT_SHADER, shaderId } = parse(\n      location.search.substring(1)\n    );\n    const { uniforms } = configurations[shader];\n    const uniformDefaults = {};\n    Object.keys(uniforms).forEach(key => {\n      const conf = uniforms[key];\n      uniformDefaults[key] = conf.defaultValue;\n    });\n\n    // Push the new randomized uniforms into the URL\n    const queryString = stringify(\n      Object.assign({}, { shader, shaderId }, uniformDefaults)\n    );\n    history.push(`?${queryString}`);\n  }\n  render() {\n    return (\n      <React.Fragment>\n        <TextIcon\n          icon=\"video play\"\n          title=\"Randomize\"\n          onClick={() => this.randomizeUniforms()}\n        />\n        <TextIcon\n          icon=\"refresh\"\n          title=\"Reset\"\n          size=\"small\"\n          onClick={() => this.resetUniforms()}\n        />\n      </React.Fragment>\n    );\n  }\n}\n\nexport default withRouter(RandomizeUniforms);\n","import React from 'react';\nimport { withRouter, RouteComponentProps } from 'react-router';\nimport { parse } from 'qs';\nimport { getUniformDefaultValues } from '../pages/Editor/utils/uniforms';\nimport Constants from '../constants';\nimport { Uniforms } from '../types/index';\n\nexport default function withUniforms(\n  WrappedComponent: React.ComponentType<any>\n) {\n  const WithUniforms = (props: RouteComponentProps) => {\n    const query = parse(props.location.search.substring(1));\n    const { shader = Constants.DEFAULT_SHADER, ...uniforms } = query;\n\n    // Use the values from the URL or pull the defaults from storage\n    // Merge the values, as URL might have some parameters but not all\n    const defaultValues = getUniformDefaultValues(shader);\n    const uniformValues: Uniforms = Object.assign({}, defaultValues, uniforms);\n\n    return (\n      <WrappedComponent {...props} shader={shader} uniforms={uniformValues} />\n    );\n  };\n\n  return withRouter(WithUniforms);\n}\n","import React, { Component } from 'react';\nimport { stringify } from 'qs';\nimport TextIcon from '../../../../components/TextIcon/TextIcon';\nimport withUniforms from '../../../../hocs/withUniforms';\nimport { WithUniformsProps } from '../../../../types/index';\n\nclass DownloadButton extends Component<WithUniformsProps> {\n  onDownload = () => {\n    const { uniforms, shader } = this.props;\n\n    const queryString = stringify(\n      Object.assign({}, { shader }, uniforms, { download: true })\n    );\n\n    window.open(\n      `${window.location.origin}${process.env.PUBLIC_URL}/?${queryString}`,\n      '_blank'\n    );\n  };\n\n  render() {\n    return (\n      <TextIcon\n        icon=\"download\"\n        size=\"big\"\n        title=\"Download\"\n        onClick={this.onDownload}\n      />\n    );\n  }\n}\n\nexport default withUniforms(DownloadButton);\n","import { Uniforms, Scene } from '../types/';\nimport Scenes from '../pages/Scenes/Scenes';\n\nexport function storeScene(\n  presetName: string,\n  shaderName: string,\n  uniforms: Uniforms\n): void {\n  const scene = { name: presetName, shader: shaderName, uniforms } as Scene;\n\n  const scenes: Scene[] = getScenes();\n  scenes.push(scene);\n\n  localStorage.setItem('presets', JSON.stringify(scenes));\n}\n\nexport function removeScene(scene: Scene): boolean {\n  const scenes: Scene[] = getScenes();\n  const newScenes = scenes.filter(sc => sc.name !== scene.name);\n\n  localStorage.setItem('presets', JSON.stringify(newScenes));\n\n  return scenes.length !== newScenes.length;\n}\n\nexport function getScenes(): Scene[] {\n  const scenes: Scene[] = JSON.parse(localStorage.getItem('presets') || '[]');\n  return scenes;\n}\n\nexport default {\n  storeScene,\n  removeScene,\n  getScenes\n};\n","import React, { Component } from 'react';\nimport { Confirm, Modal, Input, InputOnChangeData } from 'semantic-ui-react';\nimport TextIcon from '../../../../components/TextIcon/TextIcon';\nimport withUniforms from '../../../../hocs/withUniforms';\nimport { Uniforms, WithUniformsProps } from '../../../../types/index';\nimport storage from '../../../../utils/storage';\n\ninterface IState {\n  dialogOpen: boolean;\n  inputValue: string;\n}\n\nclass SaveButton extends Component<WithUniformsProps, IState> {\n  state = {\n    dialogOpen: false,\n    inputValue: ''\n  };\n\n  handleConfirm = () => {\n    const { uniforms, shader } = this.props;\n    const { inputValue } = this.state;\n\n    storage.storeScene(inputValue, shader, uniforms);\n    this.setState({ dialogOpen: false });\n  };\n\n  handleInput = (event: React.SyntheticEvent, data: InputOnChangeData) => {\n    const { value } = data;\n    this.setState({ inputValue: value });\n  };\n\n  render() {\n    const { dialogOpen } = this.state;\n    return (\n      <React.Fragment>\n        <Confirm\n          open={dialogOpen}\n          header=\"Save scene as a preset\"\n          content={\n            <Modal.Content>\n              <Modal.Description>\n                <p>Give a name for the preset</p>\n                <Input placeholder=\"Preset name\" onChange={this.handleInput} />\n              </Modal.Description>\n            </Modal.Content>\n          }\n          onCancel={() => this.setState({ dialogOpen: false })}\n          onConfirm={this.handleConfirm}\n        />\n        <TextIcon\n          icon=\"save\"\n          size=\"big\"\n          title=\"Save\"\n          onClick={() => this.setState({ dialogOpen: true })}\n        />\n      </React.Fragment>\n    );\n  }\n}\n\nexport default withUniforms(SaveButton);\n","import React, { Component } from 'react';\nimport { Icon, Menu } from 'semantic-ui-react';\nimport ShaderComposer from './components/ShaderComposer/ShaderComposer';\nimport RandomizeUniforms from './components/RandomizeUniforms/RandomizeUniforms';\nimport DownloadButton from './components/DownloadButton/DownloadButton';\nimport SaveButton from './components/SaveButton/SaveButton.tsx';\n\nclass EditorNavbar extends Component {\n  render() {\n    const dividerStyle = {\n      borderLeft: '1px solid #DDD',\n      borderRight: '1px solid #DDD',\n      borderRadius: 0\n    };\n    return (\n      <Menu secondary>\n        <Menu.Item>\n          <ShaderComposer />\n        </Menu.Item>\n        <Menu.Item disabled>\n          <Icon name=\"zoom\" />\n          Zoom\n        </Menu.Item>\n        <Menu.Item disabled>\n          <Icon name=\"refresh\" />\n          Rotate\n        </Menu.Item>\n        <Menu.Item disabled>\n          <Icon name=\"expand\" />\n          Scale\n        </Menu.Item>\n        <Menu.Item style={dividerStyle}>\n          <RandomizeUniforms />\n        </Menu.Item>\n        <Menu.Item>\n          <SaveButton />\n          <DownloadButton />\n        </Menu.Item>\n      </Menu>\n    );\n  }\n}\n\nexport default EditorNavbar;\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Button, Card, Container } from 'semantic-ui-react';\nimport { stringify } from 'qs';\nimport Fractal from '../../components/Fractal/Fractal';\nimport { Scene } from '../../types';\nimport storage from '../../utils/storage';\nimport presets from '../../presets.json';\n\nclass Scenes extends Component {\n  handleRemove = (scene: Scene) => () => {\n    const updated = storage.removeScene(scene);\n    if (updated) {\n      this.forceUpdate();\n    }\n  };\n  render() {\n    const scenes = storage.getScenes();\n\n    return (\n      <Container>\n        <h1>User scenes</h1>\n        <Card.Group>\n          {scenes.map((scene, index) => {\n            const params = stringify(\n              Object.assign({}, { shader: scene.shader, ...scene.uniforms })\n            );\n            return (\n              <Card key={index}>\n                <Fractal width={200} height={150} quality={1} {...scene} />\n                <Card.Content>\n                  <Card.Header>{scene.name}</Card.Header>\n                  <Card.Description>Shader: {scene.shader}</Card.Description>\n                </Card.Content>\n                <Card.Content extra>\n                  <div className=\"ui two buttons\">\n                    <Button color=\"green\" as={Link} to={`/?${params}`}>\n                      Edit\n                    </Button>\n                    <Button\n                      basic\n                      color=\"red\"\n                      onClick={this.handleRemove(scene)}\n                    >\n                      Remove\n                    </Button>\n                  </div>\n                </Card.Content>\n              </Card>\n            );\n          })}\n        </Card.Group>\n        <h1>Preset scenes</h1>\n        <Card.Group>\n          {presets.map((p, index) => {\n            const params = stringify(\n              Object.assign({}, { shader: p.shader, ...p.uniforms })\n            );\n            return (\n              <Link key={index} to={`${process.env.PUBLIC_URL}/?${params}`}>\n                <Card>\n                  <Fractal width={200} height={150} quality={3} {...p} />\n                  <Card.Content>\n                    <Card.Header>{p.name}</Card.Header>\n                    <Card.Description>Shader: {p.shader}</Card.Description>\n                  </Card.Content>\n                </Card>\n              </Link>\n            );\n          })}\n        </Card.Group>\n      </Container>\n    );\n  }\n}\n\nexport default Scenes;\n","import React, { Component } from 'react';\nimport { Icon, Menu } from 'semantic-ui-react';\n\nclass ScenesNavbar extends Component {\n  render() {\n    return (\n      <Menu secondary>\n        <Menu.Item disabled>\n          <Icon name=\"delete\" />\n          Delete\n        </Menu.Item>\n      </Menu>\n    );\n  }\n}\n\nexport default ScenesNavbar;\n","import React, { Component } from 'react';\n\nclass Renders extends Component {\n  render() {\n    return (\n      <section>\n        <h1>Renders will be here</h1>\n      </section>\n    );\n  }\n}\n\nexport default Renders;\n","import React, { Component } from 'react';\nimport { Icon, Menu } from 'semantic-ui-react';\n\nclass RendersNavbar extends Component {\n  render() {\n    return (\n      <Menu secondary>\n        <Menu.Item>\n          <Icon name=\"image\" />\n          TODO\n        </Menu.Item>\n      </Menu>\n    );\n  }\n}\n\nexport default RendersNavbar;\n","import React from 'react';\nimport Editor from './pages/Editor/Editor';\nimport EditorNav from './pages/Editor/EditorNav';\nimport Scenes from './pages/Scenes/Scenes';\nimport ScenesNav from './pages/Scenes/ScenesNav';\nimport Renders from './pages/Renders/Renders';\nimport RendersNav from './pages/Renders/RendersNav';\n\nconst routes = [\n  {\n    path: process.env.PUBLIC_URL + '/',\n    exact: true,\n    navbar: () => <EditorNav />,\n    main: () => <Editor />\n  },\n  {\n    path: process.env.PUBLIC_URL + '/scenes',\n    navbar: () => <ScenesNav />,\n    main: () => <Scenes />\n  },\n  {\n    path: process.env.PUBLIC_URL + '/renders',\n    navbar: () => <RendersNav />,\n    main: () => <Renders />\n  }\n];\n\nexport default routes;\n","import React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { Dropdown } from 'semantic-ui-react';\nimport TextIcon from '../../components/TextIcon/TextIcon';\nimport routes from '../../routes';\n\nconst DROPDOWN_MENU = [\n  { icon: 'eye', title: 'Editor', to: process.env.PUBLIC_URL + '/' },\n  { icon: 'world', title: 'Scenes', to: process.env.PUBLIC_URL + '/scenes' }\n  // { icon: 'image', title: 'Renders', to: '/renders' }\n];\n\nconst PageSelector = ({ location, history }) => {\n  const currentIndex = routes.findIndex(r => r.path == location.pathname);\n  const activeMenu = DROPDOWN_MENU[currentIndex];\n  return (\n    <Dropdown\n      labeled\n      trigger={<TextIcon icon={activeMenu.icon} title={activeMenu.title} />}\n      icon=\"dropdown\"\n    >\n      <Dropdown.Menu>\n        {DROPDOWN_MENU.map(item => (\n          <Dropdown.Item\n            key={`link-${item.to}`}\n            active={item.to === activeMenu.to}\n            disabled={item.to === activeMenu.to}\n            icon={item.icon}\n            text={item.title}\n            onClick={() => history.push(item.to)}\n          />\n        ))}\n      </Dropdown.Menu>\n    </Dropdown>\n  );\n};\n\nexport default withRouter(PageSelector);\n","import React, { Component } from 'react';\nimport { Route } from 'react-router-dom';\nimport { Icon, Menu, Message, List } from 'semantic-ui-react';\nimport PageSelector from './PageSelector';\nimport routes from '../../routes';\nimport './Navbar.css';\n\nclass Navbar extends Component {\n  state = {\n    visible: true\n  };\n  onDismiss = () => {\n    this.setState({ visible: false });\n    localStorage.setItem('hideNotif', false);\n  };\n  render() {\n    const hideNotif =\n      this.state.visible === false ||\n      localStorage.getItem('hideNotif') === 'false';\n    return (\n      <nav className=\"navbar\">\n        <Menu>\n          <Menu.Item>\n            <PageSelector />\n          </Menu.Item>\n          <Menu.Item>\n            {routes.map((route, index) => (\n              <Route\n                key={index}\n                exact={route.exact}\n                path={route.path}\n                component={route.navbar}\n              />\n            ))}\n          </Menu.Item>\n          <Menu.Item>\n            <List>\n              <List.Item>\n                <small>Early development version</small>\n                <br />\n                <small>2019-02-20</small>\n              </List.Item>\n              <List.Item>\n                <span>\n                  <Icon name=\"github\" />\n                  <a href=\"https://github.com/Hellenic/fractalysis\">Github</a>\n                </span>\n              </List.Item>\n            </List>\n          </Menu.Item>\n        </Menu>\n        {!hideNotif && (\n          <Message\n            onDismiss={this.onDismiss}\n            style={{ zIndex: 50 }}\n            color=\"blue\"\n            header=\"Welcome to Fractalysis!\"\n            content={`\n                Fractalysis is a fractal flame editor, which allows you to create fancy generated images.\n                This is still early version and being developed, but you can still already play around with it.\n                Read more on Github.\n              `}\n          />\n        )}\n      </nav>\n    );\n  }\n}\n\nexport default Navbar;\n","import React, { Component } from 'react';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport Navbar from './pages/Navbar/Navbar';\nimport routes from './routes';\n\nclass App extends Component {\n  render() {\n    return (\n      <Router>\n        <div className=\"app\">\n          <Navbar />\n          {routes.map((route, index) => (\n            <Route\n              key={index}\n              exact={route.exact}\n              path={route.path}\n              component={route.main}\n            />\n          ))}\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n// import registerServiceWorker from './registerServiceWorker';\n\nReactDOM.render(<App />, document.getElementById('root') as HTMLElement);\n// registerServiceWorker();\n"],"sourceRoot":""}